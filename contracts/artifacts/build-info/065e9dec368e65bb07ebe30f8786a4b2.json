{
	"id": "065e9dec368e65bb07ebe30f8786a4b2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/smctoken18.sol": {
				"content": "/**\n *Submitted for verification at BscScan.com on 2022-03-11\n*/\n\npragma solidity 0.5.16;\n\ninterface IBEP20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8);\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory);\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory);\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address _owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n  // Empty internal constructor, to prevent people from mistakenly deploying\n  // an instance of this contract, which should be used via inheritance.\n  constructor () internal { }\n\n  function _msgSender() internal view returns (address payable) {\n    return msg.sender;\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n   * @dev Returns the addition of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `+` operator.\n   *\n   * Requirements:\n   * - Addition cannot overflow.\n   */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, \"SafeMath: subtraction overflow\");\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the multiplication of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `*` operator.\n   *\n   * Requirements:\n   * - Multiplication cannot overflow.\n   */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, \"SafeMath: division by zero\");\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    return mod(a, b, \"SafeMath: modulo by zero\");\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts with custom message when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b != 0, errorMessage);\n    return a % b;\n  }\n}\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor () internal {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n\ncontract Token is Context, IBEP20, Ownable {\n  using SafeMath for uint256;\n\n  mapping (address => uint256) private _balances;\n\n  mapping (address => mapping (address => uint256)) private _allowances;\n\n  uint256 private _totalSupply;\n  uint8 private _decimals;\n  string private _symbol;\n  string private _name;\n\n  constructor() public {\n    _name = \"SMART MONEY COIN\";\n    _symbol = \"SMC\";\n    _decimals = 18;\n    _totalSupply = 5000000*10**18;\n    _balances[msg.sender] = _totalSupply;\n\n    emit Transfer(address(0), msg.sender, _totalSupply);\n  }\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address) {\n    return owner();\n  }\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8) {\n    return _decimals;\n  }\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev See {BEP20-totalSupply}.\n   */\n  function totalSupply() external view returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @dev See {BEP20-balanceOf}.\n   */\n  function balanceOf(address account) external view returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev See {BEP20-transfer}.\n   *\n   * Requirements:\n   *\n   * - `recipient` cannot be the zero address.\n   * - the caller must have a balance of at least `amount`.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool) {\n    _transfer(_msgSender(), recipient, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {BEP20-allowance}.\n   */\n  function allowance(address owner, address spender) external view returns (uint256) {\n    return _allowances[owner][spender];\n  }\n\n  /**\n   * @dev See {BEP20-approve}.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function approve(address spender, uint256 amount) external returns (bool) {\n    _approve(_msgSender(), spender, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {BEP20-transferFrom}.\n   *\n   * Emits an {Approval} event indicating the updated allowance. This is not\n   * required by the EIP. See the note at the beginning of {BEP20};\n   *\n   * Requirements:\n   * - `sender` and `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   * - the caller must have allowance for `sender`'s tokens of at least\n   * `amount`.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\n    _transfer(sender, recipient, amount);\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\n    return true;\n  }\n\n  /**\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {BEP20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n    return true;\n  }\n\n  /**\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {BEP20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   * - `spender` must have allowance for the caller of at least\n   * `subtractedValue`.\n   */\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\n    return true;\n  }\n\n  /**\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n   * the total supply.\n   *\n   * Requirements\n   *\n   * - `msg.sender` must be the token owner\n   */\n  function mint(uint256 amount) public onlyOwner returns (bool) {\n    _mint(_msgSender(), amount);\n    return true;\n  }\n\n  /**\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\n   *\n   * This is internal function is equivalent to {transfer}, and can be used to\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\n   *\n   * Emits a {Transfer} event.\n   *\n   * Requirements:\n   *\n   * - `sender` cannot be the zero address.\n   * - `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   */\n  function _transfer(address sender, address recipient, uint256 amount) internal {\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\n\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\n    _balances[recipient] = _balances[recipient].add(amount);\n    emit Transfer(sender, recipient, amount);\n  }\n\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n   * the total supply.\n   *\n   * Emits a {Transfer} event with `from` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `to` cannot be the zero address.\n   */\n  function _mint(address account, uint256 amount) internal {\n    require(account != address(0), \"BEP20: mint to the zero address\");\n\n    _totalSupply = _totalSupply.add(amount);\n    _balances[account] = _balances[account].add(amount);\n    emit Transfer(address(0), account, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`, reducing the\n   * total supply.\n   *\n   * Emits a {Transfer} event with `to` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `account` cannot be the zero address.\n   * - `account` must have at least `amount` tokens.\n   */\n  function _burn(address account, uint256 amount) internal {\n    require(account != address(0), \"BEP20: burn from the zero address\");\n\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\n    _totalSupply = _totalSupply.sub(amount);\n    emit Transfer(account, address(0), amount);\n  }\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   *\n   * This is internal function is equivalent to `approve`, and can be used to\n   * e.g. set automatic allowances for certain subsystems, etc.\n   *\n   * Emits an {Approval} event.\n   *\n   * Requirements:\n   *\n   * - `owner` cannot be the zero address.\n   * - `spender` cannot be the zero address.\n   */\n  function _approve(address owner, address spender, uint256 amount) internal {\n    require(owner != address(0), \"BEP20: approve from the zero address\");\n    require(spender != address(0), \"BEP20: approve to the zero address\");\n\n    _allowances[owner][spender] = amount;\n    emit Approval(owner, spender, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n   * from the caller's allowance.\n   *\n   * See {_burn} and {_approve}.\n   */\n  function _burnFrom(address account, uint256 amount) internal {\n    _burn(account, amount);\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/smctoken18.sol": {
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/smctoken18.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/smctoken18.sol\":{\"keccak256\":\"0x8b425ae86fabe5f57d53239b1ab87677b0d89dee209680848d97d136431f8221\",\"urls\":[\"bzz-raw://a65dce80b9d14dec5bb07812d52bab8fce1987c7c3f997a6885a84fb4e9004a5\",\"dweb:/ipfs/QmVsDALxGj3hisc46sYQnvqJo9Bo3kNKSvVyKcNBe6Whnp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/smctoken18.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/smctoken18.sol\":{\"keccak256\":\"0x8b425ae86fabe5f57d53239b1ab87677b0d89dee209680848d97d136431f8221\",\"urls\":[\"bzz-raw://a65dce80b9d14dec5bb07812d52bab8fce1987c7c3f997a6885a84fb4e9004a5\",\"dweb:/ipfs/QmVsDALxGj3hisc46sYQnvqJo9Bo3kNKSvVyKcNBe6Whnp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/smctoken18.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/smctoken18.sol\":{\"keccak256\":\"0x8b425ae86fabe5f57d53239b1ab87677b0d89dee209680848d97d136431f8221\",\"urls\":[\"bzz-raw://a65dce80b9d14dec5bb07812d52bab8fce1987c7c3f997a6885a84fb4e9004a5\",\"dweb:/ipfs/QmVsDALxGj3hisc46sYQnvqJo9Bo3kNKSvVyKcNBe6Whnp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "contracts/smctoken18.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/smctoken18.sol\":4535:8829  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/smctoken18.sol\":4535:8829  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a7231582023f6d1699a63450756ef15b08a4221132be9f1a36329ef28276b0dd2586915f664736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582023f6d1699a63450756ef15b08a4221132be9f1a36329ef28276b0dd2586915f664736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x23 0xF6 0xD1 PUSH10 0x9A63450756EF15B08A42 0x21 SGT 0x2B 0xE9 CALL LOG3 PUSH4 0x29EF2827 PUSH12 0xDD2586915F664736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "4535:4294:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582023f6d1699a63450756ef15b08a4221132be9f1a36329ef28276b0dd2586915f664736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x23 0xF6 0xD1 PUSH10 0x9A63450756EF15B08A42 0x21 SGT 0x2B 0xE9 CALL LOG3 PUSH4 0x29EF2827 PUSH12 0xDD2586915F664736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "4535:4294:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4535,
									"end": 8829,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4535,
									"end": 8829,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582023f6d1699a63450756ef15b08a4221132be9f1a36329ef28276b0dd2586915f664736f6c63430005100032",
									".code": [
										{
											"begin": 4535,
											"end": 8829,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 4535,
											"end": 8829,
											"name": "ADDRESS"
										},
										{
											"begin": 4535,
											"end": 8829,
											"name": "EQ"
										},
										{
											"begin": 4535,
											"end": 8829,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4535,
											"end": 8829,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4535,
											"end": 8829,
											"name": "MSTORE"
										},
										{
											"begin": 4535,
											"end": 8829,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4535,
											"end": 8829,
											"name": "DUP1"
										},
										{
											"begin": 4535,
											"end": 8829,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/smctoken18.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/smctoken18.sol\":{\"keccak256\":\"0x8b425ae86fabe5f57d53239b1ab87677b0d89dee209680848d97d136431f8221\",\"urls\":[\"bzz-raw://a65dce80b9d14dec5bb07812d52bab8fce1987c7c3f997a6885a84fb4e9004a5\",\"dweb:/ipfs/QmVsDALxGj3hisc46sYQnvqJo9Bo3kNKSvVyKcNBe6Whnp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Token": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}.   * Requirements:   * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.   * Requirements   * - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}.   * Requirements:   * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}.   * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};   * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/smctoken18.sol\":11034:18591  contract Token is Context, IBEP20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/smctoken18.sol\":11347:11581  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/smctoken18.sol\":11347:11581  constructor() public {... */\n  pop\n    /* \"contracts/smctoken18.sol\":9593:9610  address msgSender */\n  0x00\n    /* \"contracts/smctoken18.sol\":9613:9625  _msgSender() */\n  tag_7\n    /* \"contracts/smctoken18.sol\":9613:9623  _msgSender */\n  shl(0x20, tag_8)\n    /* \"contracts/smctoken18.sol\":9613:9625  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/smctoken18.sol\":9593:9625  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"contracts/smctoken18.sol\":9640:9649  msgSender */\n  dup1\n    /* \"contracts/smctoken18.sol\":9631:9637  _owner */\n  0x00\n  dup1\n    /* \"contracts/smctoken18.sol\":9631:9649  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/smctoken18.sol\":9693:9702  msgSender */\n  dup1\n    /* \"contracts/smctoken18.sol\":9660:9703  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/smctoken18.sol\":9689:9690  0 */\n  0x00\n    /* \"contracts/smctoken18.sol\":9660:9703  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/smctoken18.sol\":9563:9708  constructor () internal {... */\n  pop\n    /* \"contracts/smctoken18.sol\":11374:11400  _name = \"SMART MONEY COIN\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x10\n  dup2\n  mstore\n  0x20\n  add\n  0x534d415254204d4f4e455920434f494e00000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/smctoken18.sol\":11374:11379  _name */\n  0x06\n    /* \"contracts/smctoken18.sol\":11374:11400  _name = \"SMART MONEY COIN\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/smctoken18.sol\":11406:11421  _symbol = \"SMC\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x534d430000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/smctoken18.sol\":11406:11413  _symbol */\n  0x05\n    /* \"contracts/smctoken18.sol\":11406:11421  _symbol = \"SMC\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/smctoken18.sol\":11439:11441  18 */\n  0x12\n    /* \"contracts/smctoken18.sol\":11427:11436  _decimals */\n  0x04\n  0x00\n    /* \"contracts/smctoken18.sol\":11427:11441  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/smctoken18.sol\":11462:11476  5000000*10**18 */\n  0x0422ca8b0a00a425000000\n    /* \"contracts/smctoken18.sol\":11447:11459  _totalSupply */\n  0x03\n    /* \"contracts/smctoken18.sol\":11447:11476  _totalSupply = 5000000*10**18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/smctoken18.sol\":11506:11518  _totalSupply */\n  sload(0x03)\n    /* \"contracts/smctoken18.sol\":11482:11491  _balances */\n  0x01\n    /* \"contracts/smctoken18.sol\":11482:11503  _balances[msg.sender] */\n  0x00\n    /* \"contracts/smctoken18.sol\":11492:11502  msg.sender */\n  caller\n    /* \"contracts/smctoken18.sol\":11482:11503  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/smctoken18.sol\":11482:11518  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/smctoken18.sol\":11551:11561  msg.sender */\n  caller\n    /* \"contracts/smctoken18.sol\":11530:11576  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/smctoken18.sol\":11547:11548  0 */\n  0x00\n    /* \"contracts/smctoken18.sol\":11530:11576  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/smctoken18.sol\":11563:11575  _totalSupply */\n  sload(0x03)\n    /* \"contracts/smctoken18.sol\":11530:11576  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/smctoken18.sol\":11034:18591  contract Token is Context, IBEP20, Ownable {... */\n  jump(tag_13)\n    /* \"contracts/smctoken18.sol\":3661:3751  function _msgSender() internal view returns (address payable) {... */\ntag_8:\n    /* \"contracts/smctoken18.sol\":3706:3721  address payable */\n  0x00\n    /* \"contracts/smctoken18.sol\":3736:3746  msg.sender */\n  caller\n    /* \"contracts/smctoken18.sol\":3729:3746  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/smctoken18.sol\":3661:3751  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/smctoken18.sol\":11034:18591  contract Token is Context, IBEP20, Ownable {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_15)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_15\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_15:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\n  tag_21\n  swap2\n  swap1\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_22)\ntag_23:\n  pop\n  swap1\n  jump\ntag_21:\n  swap1\n  jump\t// out\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/smctoken18.sol\":11034:18591  contract Token is Context, IBEP20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/smctoken18.sol\":11034:18591  contract Token is Context, IBEP20, Ownable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x893d20e8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/smctoken18.sol\":12025:12102  function name() external view returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_24:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_24)\n    tag_26:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/smctoken18.sol\":12025:12102  function name() external view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_27\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_27:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/smctoken18.sol\":13020:13161  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_29:\n        /* \"contracts/smctoken18.sol\":13020:13161  function approve(address spender, uint256 amount) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_30\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/smctoken18.sol\":12153:12238  function totalSupply() external view returns (uint256) {... */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/smctoken18.sol\":13592:13880  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_6:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n        /* \"contracts/smctoken18.sol\":13592:13880  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_35\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/smctoken18.sol\":11767:11844  function decimals() external view returns (uint8) {... */\n    tag_7:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/smctoken18.sol\":14248:14445  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"contracts/smctoken18.sol\":14248:14445  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/smctoken18.sol\":12287:12391  function balanceOf(address account) external view returns (uint256) {... */\n    tag_9:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"contracts/smctoken18.sol\":12287:12391  function balanceOf(address account) external view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/smctoken18.sol\":10359:10486  function renounceOwnership() public onlyOwner {... */\n    tag_10:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/smctoken18.sol\":11636:11713  function getOwner() external view returns (address) {... */\n    tag_11:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/smctoken18.sol\":9776:9847  function owner() public view returns (address) {... */\n    tag_12:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/smctoken18.sol\":11896:11977  function symbol() external view returns (string memory) {... */\n    tag_13:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_52:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_52)\n    tag_54:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/smctoken18.sol\":11896:11977  function symbol() external view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_55\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_55:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/smctoken18.sol\":15339:15456  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_14:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n        /* \"contracts/smctoken18.sol\":15339:15456  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/smctoken18.sol\":14901:15149  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_15:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_60:\n        /* \"contracts/smctoken18.sol\":14901:15149  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/smctoken18.sol\":12575:12722  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_16:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_63:\n        /* \"contracts/smctoken18.sol\":12575:12722  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/smctoken18.sol\":12771:12899  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_17:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n        /* \"contracts/smctoken18.sol\":12771:12899  function allowance(address owner, address spender) external view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/smctoken18.sol\":10625:10726  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_18:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_69:\n        /* \"contracts/smctoken18.sol\":10625:10726  function transferOwnership(address newOwner) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/smctoken18.sol\":12025:12102  function name() external view returns (string memory) {... */\n    tag_23:\n        /* \"contracts/smctoken18.sol\":12064:12077  string memory */\n      0x60\n        /* \"contracts/smctoken18.sol\":12092:12097  _name */\n      0x06\n        /* \"contracts/smctoken18.sol\":12085:12097  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_72\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_73\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_72)\n    tag_73:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_74:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_74\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/smctoken18.sol\":12025:12102  function name() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/smctoken18.sol\":13020:13161  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_30:\n        /* \"contracts/smctoken18.sol\":13088:13092  bool */\n      0x00\n        /* \"contracts/smctoken18.sol\":13100:13139  _approve(_msgSender(), spender, amount) */\n      tag_76\n        /* \"contracts/smctoken18.sol\":13109:13121  _msgSender() */\n      tag_77\n        /* \"contracts/smctoken18.sol\":13109:13119  _msgSender */\n      tag_78\n        /* \"contracts/smctoken18.sol\":13109:13121  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"contracts/smctoken18.sol\":13123:13130  spender */\n      dup5\n        /* \"contracts/smctoken18.sol\":13132:13138  amount */\n      dup5\n        /* \"contracts/smctoken18.sol\":13100:13108  _approve */\n      tag_79\n        /* \"contracts/smctoken18.sol\":13100:13139  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_76:\n        /* \"contracts/smctoken18.sol\":13152:13156  true */\n      0x01\n        /* \"contracts/smctoken18.sol\":13145:13156  return true */\n      swap1\n      pop\n        /* \"contracts/smctoken18.sol\":13020:13161  function approve(address spender, uint256 amount) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/smctoken18.sol\":12153:12238  function totalSupply() external view returns (uint256) {... */\n    tag_32:\n        /* \"contracts/smctoken18.sol\":12199:12206  uint256 */\n      0x00\n        /* \"contracts/smctoken18.sol\":12221:12233  _totalSupply */\n      sload(0x03)\n        /* \"contracts/smctoken18.sol\":12214:12233  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/smctoken18.sol\":12153:12238  function totalSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/smctoken18.sol\":13592:13880  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_35:\n        /* \"contracts/smctoken18.sol\":13683:13687  bool */\n      0x00\n        /* \"contracts/smctoken18.sol\":13695:13731  _transfer(sender, recipient, amount) */\n      tag_82\n        /* \"contracts/smctoken18.sol\":13705:13711  sender */\n      dup5\n        /* \"contracts/smctoken18.sol\":13713:13722  recipient */\n      dup5\n        /* \"contracts/smctoken18.sol\":13724:13730  amount */\n      dup5\n        /* \"contracts/smctoken18.sol\":13695:13704  _transfer */\n      tag_83\n        /* \"contracts/smctoken18.sol\":13695:13731  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_82:\n        /* \"contracts/smctoken18.sol\":13737:13858  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_84\n        /* \"contracts/smctoken18.sol\":13746:13752  sender */\n      dup5\n        /* \"contracts/smctoken18.sol\":13754:13766  _msgSender() */\n      tag_85\n        /* \"contracts/smctoken18.sol\":13754:13764  _msgSender */\n      tag_78\n        /* \"contracts/smctoken18.sol\":13754:13766  _msgSender() */\n      jump\t// in\n    tag_85:\n        /* \"contracts/smctoken18.sol\":13768:13857  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_86\n        /* \"contracts/smctoken18.sol\":13806:13812  amount */\n      dup6\n        /* \"contracts/smctoken18.sol\":13768:13857  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"contracts/smctoken18.sol\":13768:13779  _allowances */\n      0x02\n        /* \"contracts/smctoken18.sol\":13768:13787  _allowances[sender] */\n      0x00\n        /* \"contracts/smctoken18.sol\":13780:13786  sender */\n      dup12\n        /* \"contracts/smctoken18.sol\":13768:13787  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/smctoken18.sol\":13768:13801  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"contracts/smctoken18.sol\":13788:13800  _msgSender() */\n      tag_87\n        /* \"contracts/smctoken18.sol\":13788:13798  _msgSender */\n      tag_78\n        /* \"contracts/smctoken18.sol\":13788:13800  _msgSender() */\n      jump\t// in\n    tag_87:\n        /* \"contracts/smctoken18.sol\":13768:13801  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/smctoken18.sol\":13768:13805  _allowances[sender][_msgSender()].sub */\n      tag_88\n      swap1\n        /* \"contracts/smctoken18.sol\":13768:13857  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_86:\n        /* \"contracts/smctoken18.sol\":13737:13745  _approve */\n      tag_79\n        /* \"contracts/smctoken18.sol\":13737:13858  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_84:\n        /* \"contracts/smctoken18.sol\":13871:13875  true */\n      0x01\n        /* \"contracts/smctoken18.sol\":13864:13875  return true */\n      swap1\n      pop\n        /* \"contracts/smctoken18.sol\":13592:13880  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/smctoken18.sol\":11767:11844  function decimals() external view returns (uint8) {... */\n    tag_37:\n        /* \"contracts/smctoken18.sol\":11810:11815  uint8 */\n      0x00\n        /* \"contracts/smctoken18.sol\":11830:11839  _decimals */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/smctoken18.sol\":11823:11839  return _decimals */\n      swap1\n      pop\n        /* \"contracts/smctoken18.sol\":11767:11844  function decimals() external view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/smctoken18.sol\":14248:14445  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_40:\n        /* \"contracts/smctoken18.sol\":14328:14332  bool */\n      0x00\n        /* \"contracts/smctoken18.sol\":14340:14423  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_91\n        /* \"contracts/smctoken18.sol\":14349:14361  _msgSender() */\n      tag_92\n        /* \"contracts/smctoken18.sol\":14349:14359  _msgSender */\n      tag_78\n        /* \"contracts/smctoken18.sol\":14349:14361  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"contracts/smctoken18.sol\":14363:14370  spender */\n      dup5\n        /* \"contracts/smctoken18.sol\":14372:14422  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_93\n        /* \"contracts/smctoken18.sol\":14411:14421  addedValue */\n      dup6\n        /* \"contracts/smctoken18.sol\":14372:14383  _allowances */\n      0x02\n        /* \"contracts/smctoken18.sol\":14372:14397  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/smctoken18.sol\":14384:14396  _msgSender() */\n      tag_94\n        /* \"contracts/smctoken18.sol\":14384:14394  _msgSender */\n      tag_78\n        /* \"contracts/smctoken18.sol\":14384:14396  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"contracts/smctoken18.sol\":14372:14397  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/smctoken18.sol\":14372:14406  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/smctoken18.sol\":14398:14405  spender */\n      dup10\n        /* \"contracts/smctoken18.sol\":14372:14406  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/smctoken18.sol\":14372:14410  _allowances[_msgSender()][spender].add */\n      tag_95\n      swap1\n        /* \"contracts/smctoken18.sol\":14372:14422  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_93:\n        /* \"contracts/smctoken18.sol\":14340:14348  _approve */\n      tag_79\n        /* \"contracts/smctoken18.sol\":14340:14423  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_91:\n        /* \"contracts/smctoken18.sol\":14436:14440  true */\n      0x01\n        /* \"contracts/smctoken18.sol\":14429:14440  return true */\n      swap1\n      pop\n        /* \"contracts/smctoken18.sol\":14248:14445  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/smctoken18.sol\":12287:12391  function balanceOf(address account) external view returns (uint256) {... */\n    tag_43:\n        /* \"contracts/smctoken18.sol\":12346:12353  uint256 */\n      0x00\n        /* \"contracts/smctoken18.sol\":12368:12377  _balances */\n      0x01\n        /* \"contracts/smctoken18.sol\":12368:12386  _balances[account] */\n      0x00\n        /* \"contracts/smctoken18.sol\":12378:12385  account */\n      dup4\n        /* \"contracts/smctoken18.sol\":12368:12386  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/smctoken18.sol\":12361:12386  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/smctoken18.sol\":12287:12391  function balanceOf(address account) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/smctoken18.sol\":10359:10486  function renounceOwnership() public onlyOwner {... */\n    tag_45:\n        /* \"contracts/smctoken18.sol\":9972:9984  _msgSender() */\n      tag_98\n        /* \"contracts/smctoken18.sol\":9972:9982  _msgSender */\n      tag_78\n        /* \"contracts/smctoken18.sol\":9972:9984  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"contracts/smctoken18.sol\":9962:9984  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/smctoken18.sol\":9962:9968  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/smctoken18.sol\":9962:9984  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/smctoken18.sol\":9954:10021  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/smctoken18.sol\":10453:10454  0 */\n      0x00\n        /* \"contracts/smctoken18.sol\":10416:10456  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/smctoken18.sol\":10437:10443  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/smctoken18.sol\":10416:10456  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/smctoken18.sol\":10479:10480  0 */\n      0x00\n        /* \"contracts/smctoken18.sol\":10462:10468  _owner */\n      dup1\n      0x00\n        /* \"contracts/smctoken18.sol\":10462:10481  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/smctoken18.sol\":10359:10486  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/smctoken18.sol\":11636:11713  function getOwner() external view returns (address) {... */\n    tag_47:\n        /* \"contracts/smctoken18.sol\":11679:11686  address */\n      0x00\n        /* \"contracts/smctoken18.sol\":11701:11708  owner() */\n      tag_102\n        /* \"contracts/smctoken18.sol\":11701:11706  owner */\n      tag_49\n        /* \"contracts/smctoken18.sol\":11701:11708  owner() */\n      jump\t// in\n    tag_102:\n        /* \"contracts/smctoken18.sol\":11694:11708  return owner() */\n      swap1\n      pop\n        /* \"contracts/smctoken18.sol\":11636:11713  function getOwner() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/smctoken18.sol\":9776:9847  function owner() public view returns (address) {... */\n    tag_49:\n        /* \"contracts/smctoken18.sol\":9814:9821  address */\n      0x00\n        /* \"contracts/smctoken18.sol\":9836:9842  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/smctoken18.sol\":9829:9842  return _owner */\n      swap1\n      pop\n        /* \"contracts/smctoken18.sol\":9776:9847  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/smctoken18.sol\":11896:11977  function symbol() external view returns (string memory) {... */\n    tag_51:\n        /* \"contracts/smctoken18.sol\":11937:11950  string memory */\n      0x60\n        /* \"contracts/smctoken18.sol\":11965:11972  _symbol */\n      0x05\n        /* \"contracts/smctoken18.sol\":11958:11972  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_105\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_106\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_105)\n    tag_106:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_107:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_107\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/smctoken18.sol\":11896:11977  function symbol() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/smctoken18.sol\":15339:15456  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_58:\n        /* \"contracts/smctoken18.sol\":15395:15399  bool */\n      0x00\n        /* \"contracts/smctoken18.sol\":9972:9984  _msgSender() */\n      tag_109\n        /* \"contracts/smctoken18.sol\":9972:9982  _msgSender */\n      tag_78\n        /* \"contracts/smctoken18.sol\":9972:9984  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/smctoken18.sol\":9962:9984  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/smctoken18.sol\":9962:9968  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/smctoken18.sol\":9962:9984  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/smctoken18.sol\":9954:10021  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"contracts/smctoken18.sol\":15407:15434  _mint(_msgSender(), amount) */\n      tag_112\n        /* \"contracts/smctoken18.sol\":15413:15425  _msgSender() */\n      tag_113\n        /* \"contracts/smctoken18.sol\":15413:15423  _msgSender */\n      tag_78\n        /* \"contracts/smctoken18.sol\":15413:15425  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/smctoken18.sol\":15427:15433  amount */\n      dup4\n        /* \"contracts/smctoken18.sol\":15407:15412  _mint */\n      tag_114\n        /* \"contracts/smctoken18.sol\":15407:15434  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/smctoken18.sol\":15447:15451  true */\n      0x01\n        /* \"contracts/smctoken18.sol\":15440:15451  return true */\n      swap1\n      pop\n        /* \"contracts/smctoken18.sol\":15339:15456  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/smctoken18.sol\":14901:15149  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_61:\n        /* \"contracts/smctoken18.sol\":14986:14990  bool */\n      0x00\n        /* \"contracts/smctoken18.sol\":14998:15127  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_116\n        /* \"contracts/smctoken18.sol\":15007:15019  _msgSender() */\n      tag_117\n        /* \"contracts/smctoken18.sol\":15007:15017  _msgSender */\n      tag_78\n        /* \"contracts/smctoken18.sol\":15007:15019  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"contracts/smctoken18.sol\":15021:15028  spender */\n      dup5\n        /* \"contracts/smctoken18.sol\":15030:15126  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_118\n        /* \"contracts/smctoken18.sol\":15069:15084  subtractedValue */\n      dup6\n        /* \"contracts/smctoken18.sol\":15030:15126  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/smctoken18.sol\":15030:15041  _allowances */\n      0x02\n        /* \"contracts/smctoken18.sol\":15030:15055  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/smctoken18.sol\":15042:15054  _msgSender() */\n      tag_119\n        /* \"contracts/smctoken18.sol\":15042:15052  _msgSender */\n      tag_78\n        /* \"contracts/smctoken18.sol\":15042:15054  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/smctoken18.sol\":15030:15055  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/smctoken18.sol\":15030:15064  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/smctoken18.sol\":15056:15063  spender */\n      dup11\n        /* \"contracts/smctoken18.sol\":15030:15064  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/smctoken18.sol\":15030:15068  _allowances[_msgSender()][spender].sub */\n      tag_88\n      swap1\n        /* \"contracts/smctoken18.sol\":15030:15126  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"contracts/smctoken18.sol\":14998:15006  _approve */\n      tag_79\n        /* \"contracts/smctoken18.sol\":14998:15127  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/smctoken18.sol\":15140:15144  true */\n      0x01\n        /* \"contracts/smctoken18.sol\":15133:15144  return true */\n      swap1\n      pop\n        /* \"contracts/smctoken18.sol\":14901:15149  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/smctoken18.sol\":12575:12722  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_64:\n        /* \"contracts/smctoken18.sol\":12646:12650  bool */\n      0x00\n        /* \"contracts/smctoken18.sol\":12658:12700  _transfer(_msgSender(), recipient, amount) */\n      tag_121\n        /* \"contracts/smctoken18.sol\":12668:12680  _msgSender() */\n      tag_122\n        /* \"contracts/smctoken18.sol\":12668:12678  _msgSender */\n      tag_78\n        /* \"contracts/smctoken18.sol\":12668:12680  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"contracts/smctoken18.sol\":12682:12691  recipient */\n      dup5\n        /* \"contracts/smctoken18.sol\":12693:12699  amount */\n      dup5\n        /* \"contracts/smctoken18.sol\":12658:12667  _transfer */\n      tag_83\n        /* \"contracts/smctoken18.sol\":12658:12700  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/smctoken18.sol\":12713:12717  true */\n      0x01\n        /* \"contracts/smctoken18.sol\":12706:12717  return true */\n      swap1\n      pop\n        /* \"contracts/smctoken18.sol\":12575:12722  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/smctoken18.sol\":12771:12899  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_67:\n        /* \"contracts/smctoken18.sol\":12845:12852  uint256 */\n      0x00\n        /* \"contracts/smctoken18.sol\":12867:12878  _allowances */\n      0x02\n        /* \"contracts/smctoken18.sol\":12867:12885  _allowances[owner] */\n      0x00\n        /* \"contracts/smctoken18.sol\":12879:12884  owner */\n      dup5\n        /* \"contracts/smctoken18.sol\":12867:12885  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/smctoken18.sol\":12867:12894  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/smctoken18.sol\":12886:12893  spender */\n      dup4\n        /* \"contracts/smctoken18.sol\":12867:12894  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/smctoken18.sol\":12860:12894  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/smctoken18.sol\":12771:12899  function allowance(address owner, address spender) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/smctoken18.sol\":10625:10726  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_70:\n        /* \"contracts/smctoken18.sol\":9972:9984  _msgSender() */\n      tag_125\n        /* \"contracts/smctoken18.sol\":9972:9982  _msgSender */\n      tag_78\n        /* \"contracts/smctoken18.sol\":9972:9984  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"contracts/smctoken18.sol\":9962:9984  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/smctoken18.sol\":9962:9968  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/smctoken18.sol\":9962:9984  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/smctoken18.sol\":9954:10021  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"contracts/smctoken18.sol\":10693:10721  _transferOwnership(newOwner) */\n      tag_128\n        /* \"contracts/smctoken18.sol\":10712:10720  newOwner */\n      dup2\n        /* \"contracts/smctoken18.sol\":10693:10711  _transferOwnership */\n      tag_129\n        /* \"contracts/smctoken18.sol\":10693:10721  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/smctoken18.sol\":10625:10726  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/smctoken18.sol\":3661:3751  function _msgSender() internal view returns (address payable) {... */\n    tag_78:\n        /* \"contracts/smctoken18.sol\":3706:3721  address payable */\n      0x00\n        /* \"contracts/smctoken18.sol\":3736:3746  msg.sender */\n      caller\n        /* \"contracts/smctoken18.sol\":3729:3746  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/smctoken18.sol\":3661:3751  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/smctoken18.sol\":17892:18206  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_79:\n        /* \"contracts/smctoken18.sol\":17998:17999  0 */\n      0x00\n        /* \"contracts/smctoken18.sol\":17981:18000  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/smctoken18.sol\":17981:17986  owner */\n      dup4\n        /* \"contracts/smctoken18.sol\":17981:18000  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/smctoken18.sol\":17973:18041  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"contracts/smctoken18.sol\":18074:18075  0 */\n      0x00\n        /* \"contracts/smctoken18.sol\":18055:18076  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/smctoken18.sol\":18055:18062  spender */\n      dup3\n        /* \"contracts/smctoken18.sol\":18055:18076  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/smctoken18.sol\":18047:18115  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"contracts/smctoken18.sol\":18152:18158  amount */\n      dup1\n        /* \"contracts/smctoken18.sol\":18122:18133  _allowances */\n      0x02\n        /* \"contracts/smctoken18.sol\":18122:18140  _allowances[owner] */\n      0x00\n        /* \"contracts/smctoken18.sol\":18134:18139  owner */\n      dup6\n        /* \"contracts/smctoken18.sol\":18122:18140  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/smctoken18.sol\":18122:18149  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/smctoken18.sol\":18141:18148  spender */\n      dup5\n        /* \"contracts/smctoken18.sol\":18122:18149  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/smctoken18.sol\":18122:18158  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/smctoken18.sol\":18185:18192  spender */\n      dup2\n        /* \"contracts/smctoken18.sol\":18169:18201  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/smctoken18.sol\":18178:18183  owner */\n      dup4\n        /* \"contracts/smctoken18.sol\":18169:18201  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/smctoken18.sol\":18194:18200  amount */\n      dup4\n        /* \"contracts/smctoken18.sol\":18169:18201  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/smctoken18.sol\":17892:18206  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/smctoken18.sol\":15900:16342  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_83:\n        /* \"contracts/smctoken18.sol\":16011:16012  0 */\n      0x00\n        /* \"contracts/smctoken18.sol\":15993:16013  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/smctoken18.sol\":15993:15999  sender */\n      dup4\n        /* \"contracts/smctoken18.sol\":15993:16013  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/smctoken18.sol\":15985:16055  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/smctoken18.sol\":16090:16091  0 */\n      0x00\n        /* \"contracts/smctoken18.sol\":16069:16092  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/smctoken18.sol\":16069:16078  recipient */\n      dup3\n        /* \"contracts/smctoken18.sol\":16069:16092  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/smctoken18.sol\":16061:16132  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"contracts/smctoken18.sol\":16159:16230  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_137\n        /* \"contracts/smctoken18.sol\":16181:16187  amount */\n      dup2\n        /* \"contracts/smctoken18.sol\":16159:16230  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"contracts/smctoken18.sol\":16159:16168  _balances */\n      0x01\n        /* \"contracts/smctoken18.sol\":16159:16176  _balances[sender] */\n      0x00\n        /* \"contracts/smctoken18.sol\":16169:16175  sender */\n      dup8\n        /* \"contracts/smctoken18.sol\":16159:16176  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/smctoken18.sol\":16159:16180  _balances[sender].sub */\n      tag_88\n      swap1\n        /* \"contracts/smctoken18.sol\":16159:16230  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"contracts/smctoken18.sol\":16139:16148  _balances */\n      0x01\n        /* \"contracts/smctoken18.sol\":16139:16156  _balances[sender] */\n      0x00\n        /* \"contracts/smctoken18.sol\":16149:16155  sender */\n      dup6\n        /* \"contracts/smctoken18.sol\":16139:16156  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/smctoken18.sol\":16139:16230  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/smctoken18.sol\":16259:16291  _balances[recipient].add(amount) */\n      tag_138\n        /* \"contracts/smctoken18.sol\":16284:16290  amount */\n      dup2\n        /* \"contracts/smctoken18.sol\":16259:16268  _balances */\n      0x01\n        /* \"contracts/smctoken18.sol\":16259:16279  _balances[recipient] */\n      0x00\n        /* \"contracts/smctoken18.sol\":16269:16278  recipient */\n      dup6\n        /* \"contracts/smctoken18.sol\":16259:16279  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/smctoken18.sol\":16259:16283  _balances[recipient].add */\n      tag_95\n      swap1\n        /* \"contracts/smctoken18.sol\":16259:16291  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"contracts/smctoken18.sol\":16236:16245  _balances */\n      0x01\n        /* \"contracts/smctoken18.sol\":16236:16256  _balances[recipient] */\n      0x00\n        /* \"contracts/smctoken18.sol\":16246:16255  recipient */\n      dup5\n        /* \"contracts/smctoken18.sol\":16236:16256  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/smctoken18.sol\":16236:16291  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/smctoken18.sol\":16319:16328  recipient */\n      dup2\n        /* \"contracts/smctoken18.sol\":16302:16337  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/smctoken18.sol\":16311:16317  sender */\n      dup4\n        /* \"contracts/smctoken18.sol\":16302:16337  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/smctoken18.sol\":16330:16336  amount */\n      dup4\n        /* \"contracts/smctoken18.sol\":16302:16337  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/smctoken18.sol\":15900:16342  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/smctoken18.sol\":5558:5731  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_88:\n        /* \"contracts/smctoken18.sol\":5644:5651  uint256 */\n      0x00\n        /* \"contracts/smctoken18.sol\":5672:5673  a */\n      dup4\n        /* \"contracts/smctoken18.sol\":5667:5668  b */\n      dup4\n        /* \"contracts/smctoken18.sol\":5667:5673  b <= a */\n      gt\n      iszero\n        /* \"contracts/smctoken18.sol\":5675:5687  errorMessage */\n      dup3\n        /* \"contracts/smctoken18.sol\":5659:5688  require(b <= a, errorMessage) */\n      swap1\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_141:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_143\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_141)\n    tag_143:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/smctoken18.sol\":5659:5688  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_144\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_144:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n      pop\n        /* \"contracts/smctoken18.sol\":5694:5703  uint256 c */\n      0x00\n        /* \"contracts/smctoken18.sol\":5710:5711  b */\n      dup4\n        /* \"contracts/smctoken18.sol\":5706:5707  a */\n      dup6\n        /* \"contracts/smctoken18.sol\":5706:5711  a - b */\n      sub\n        /* \"contracts/smctoken18.sol\":5694:5711  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/smctoken18.sol\":5725:5726  c */\n      dup1\n        /* \"contracts/smctoken18.sol\":5718:5726  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/smctoken18.sol\":5558:5731  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/smctoken18.sol\":4760:4922  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_95:\n        /* \"contracts/smctoken18.sol\":4818:4825  uint256 */\n      0x00\n        /* \"contracts/smctoken18.sol\":4833:4842  uint256 c */\n      dup1\n        /* \"contracts/smctoken18.sol\":4849:4850  b */\n      dup3\n        /* \"contracts/smctoken18.sol\":4845:4846  a */\n      dup5\n        /* \"contracts/smctoken18.sol\":4845:4850  a + b */\n      add\n        /* \"contracts/smctoken18.sol\":4833:4850  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/smctoken18.sol\":4869:4870  a */\n      dup4\n        /* \"contracts/smctoken18.sol\":4864:4865  c */\n      dup2\n        /* \"contracts/smctoken18.sol\":4864:4870  c >= a */\n      lt\n      iszero\n        /* \"contracts/smctoken18.sol\":4856:4902  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"contracts/smctoken18.sol\":4916:4917  c */\n      dup1\n        /* \"contracts/smctoken18.sol\":4909:4917  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/smctoken18.sol\":4760:4922  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/smctoken18.sol\":16592:16876  function _mint(address account, uint256 amount) internal {... */\n    tag_114:\n        /* \"contracts/smctoken18.sol\":16682:16683  0 */\n      0x00\n        /* \"contracts/smctoken18.sol\":16663:16684  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/smctoken18.sol\":16663:16670  account */\n      dup3\n        /* \"contracts/smctoken18.sol\":16663:16684  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/smctoken18.sol\":16655:16720  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"contracts/smctoken18.sol\":16742:16766  _totalSupply.add(amount) */\n      tag_149\n        /* \"contracts/smctoken18.sol\":16759:16765  amount */\n      dup2\n        /* \"contracts/smctoken18.sol\":16742:16754  _totalSupply */\n      sload(0x03)\n        /* \"contracts/smctoken18.sol\":16742:16758  _totalSupply.add */\n      tag_95\n      swap1\n        /* \"contracts/smctoken18.sol\":16742:16766  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_149:\n        /* \"contracts/smctoken18.sol\":16727:16739  _totalSupply */\n      0x03\n        /* \"contracts/smctoken18.sol\":16727:16766  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/smctoken18.sol\":16793:16823  _balances[account].add(amount) */\n      tag_150\n        /* \"contracts/smctoken18.sol\":16816:16822  amount */\n      dup2\n        /* \"contracts/smctoken18.sol\":16793:16802  _balances */\n      0x01\n        /* \"contracts/smctoken18.sol\":16793:16811  _balances[account] */\n      0x00\n        /* \"contracts/smctoken18.sol\":16803:16810  account */\n      dup6\n        /* \"contracts/smctoken18.sol\":16793:16811  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/smctoken18.sol\":16793:16815  _balances[account].add */\n      tag_95\n      swap1\n        /* \"contracts/smctoken18.sol\":16793:16823  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"contracts/smctoken18.sol\":16772:16781  _balances */\n      0x01\n        /* \"contracts/smctoken18.sol\":16772:16790  _balances[account] */\n      0x00\n        /* \"contracts/smctoken18.sol\":16782:16789  account */\n      dup5\n        /* \"contracts/smctoken18.sol\":16772:16790  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/smctoken18.sol\":16772:16823  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/smctoken18.sol\":16855:16862  account */\n      dup2\n        /* \"contracts/smctoken18.sol\":16834:16871  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/smctoken18.sol\":16851:16852  0 */\n      0x00\n        /* \"contracts/smctoken18.sol\":16834:16871  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/smctoken18.sol\":16864:16870  amount */\n      dup4\n        /* \"contracts/smctoken18.sol\":16834:16871  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/smctoken18.sol\":16592:16876  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/smctoken18.sol\":10819:11030  function _transferOwnership(address newOwner) internal {... */\n    tag_129:\n        /* \"contracts/smctoken18.sol\":10908:10909  0 */\n      0x00\n        /* \"contracts/smctoken18.sol\":10888:10910  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/smctoken18.sol\":10888:10896  newOwner */\n      dup2\n        /* \"contracts/smctoken18.sol\":10888:10910  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/smctoken18.sol\":10880:10953  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"contracts/smctoken18.sol\":10993:11001  newOwner */\n      dup1\n        /* \"contracts/smctoken18.sol\":10964:11002  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/smctoken18.sol\":10985:10991  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/smctoken18.sol\":10964:11002  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/smctoken18.sol\":11017:11025  newOwner */\n      dup1\n        /* \"contracts/smctoken18.sol\":11008:11014  _owner */\n      0x00\n      dup1\n        /* \"contracts/smctoken18.sol\":11008:11025  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/smctoken18.sol\":10819:11030  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n    stop\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4 42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5 42455032303a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a7231582096433d5e0bdd2bb6dae3c4e2e3e22faa044e42622ce340000b20a179558c581164736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506000620000246200024060201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506040518060400160405280601081526020017f534d415254204d4f4e455920434f494e00000000000000000000000000000000815250600690805190602001906200010f92919062000248565b506040518060400160405280600381526020017f534d430000000000000000000000000000000000000000000000000000000000815250600590805190602001906200015d92919062000248565b506012600460006101000a81548160ff021916908360ff1602179055506a0422ca8b0a00a425000000600381905550600354600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6003546040518082815260200191505060405180910390a3620002f7565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200028b57805160ff1916838001178555620002bc565b82800160010185558215620002bc579182015b82811115620002bb5782518255916020019190600101906200029e565b5b509050620002cb9190620002cf565b5090565b620002f491905b80821115620002f0576000816000905550600101620002d6565b5090565b90565b61190580620003076000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146104db578063a9059cbb14610541578063dd62ed3e146105a7578063f2fde38b1461061f57610100565b8063893d20e81461037e5780638da5cb5b146103c857806395d89b4114610412578063a0712d681461049557610100565b8063313ce567116100d3578063313ce5671461029257806339509351146102b657806370a082311461031c578063715018a61461037457610100565b806306fdde0314610105578063095ea7b31461018857806318160ddd146101ee57806323b872dd1461020c575b600080fd5b61010d610663565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014d578082015181840152602081019050610132565b50505050905090810190601f16801561017a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d46004803603604081101561019e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610705565b604051808215151515815260200191505060405180910390f35b6101f6610723565b6040518082815260200191505060405180910390f35b6102786004803603606081101561022257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061072d565b604051808215151515815260200191505060405180910390f35b61029a610806565b604051808260ff1660ff16815260200191505060405180910390f35b610302600480360360408110156102cc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061081d565b604051808215151515815260200191505060405180910390f35b61035e6004803603602081101561033257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108d0565b6040518082815260200191505060405180910390f35b61037c610919565b005b610386610aa1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103d0610ab0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61041a610ad9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561045a57808201518184015260208101905061043f565b50505050905090810190601f1680156104875780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104c1600480360360208110156104ab57600080fd5b8101908080359060200190929190505050610b7b565b604051808215151515815260200191505060405180910390f35b610527600480360360408110156104f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c60565b604051808215151515815260200191505060405180910390f35b61058d6004803603604081101561055757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d2d565b604051808215151515815260200191505060405180910390f35b610609600480360360408110156105bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d4b565b6040518082815260200191505060405180910390f35b6106616004803603602081101561063557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dd2565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106fb5780601f106106d0576101008083540402835291602001916106fb565b820191906000526020600020905b8154815290600101906020018083116106de57829003601f168201915b5050505050905090565b6000610719610712610ea7565b8484610eaf565b6001905092915050565b6000600354905090565b600061073a8484846110a6565b6107fb84610746610ea7565b6107f68560405180606001604052806028815260200161181960289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006107ac610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b610eaf565b600190509392505050565b6000600460009054906101000a900460ff16905090565b60006108c661082a610ea7565b846108c1856002600061083b610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b610eaf565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610921610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610aab610ab0565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b715780601f10610b4657610100808354040283529160200191610b71565b820191906000526020600020905b815481529060010190602001808311610b5457829003601f168201915b5050505050905090565b6000610b85610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c46576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610c57610c51610ea7565b836114a8565b60019050919050565b6000610d23610c6d610ea7565b84610d1e8560405180606001604052806025815260200161188a6025913960026000610c97610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b610eaf565b6001905092915050565b6000610d41610d3a610ea7565b84846110a6565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610dda610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e9b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610ea481611665565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f35576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806117cf6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fbb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806118af6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561112c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806117aa6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806118676023913960400191505060405180910390fd5b61121e8160405180606001604052806026815260200161184160269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112b381600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600083831115829061140d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156113d25780820151818401526020810190506113b7565b50505050905090810190601f1680156113ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008082840190508381101561149e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561154b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6115608160035461142090919063ffffffff16565b6003819055506115b881600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156116eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806117f36026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a7231582096433d5e0bdd2bb6dae3c4e2e3e22faa044e42622ce340000b20a179558c581164736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x24 PUSH3 0x240 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x534D415254204D4F4E455920434F494E00000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x10F SWAP3 SWAP2 SWAP1 PUSH3 0x248 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x534D430000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x15D SWAP3 SWAP2 SWAP1 PUSH3 0x248 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH11 0x422CA8B0A00A425000000 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x2F7 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x28B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2BC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2BC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2BB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x29E JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2CB SWAP2 SWAP1 PUSH3 0x2CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x2F4 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2F0 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2D6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1905 DUP1 PUSH3 0x307 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x541 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x61F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x495 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x374 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x132 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x17A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x72D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH2 0x806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x81D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH2 0x919 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D0 PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41A PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x45A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x43F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x487 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x527 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x609 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x661 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x635 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDD2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x719 PUSH2 0x712 PUSH2 0xEA7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A DUP5 DUP5 DUP5 PUSH2 0x10A6 JUMP JUMPDEST PUSH2 0x7FB DUP5 PUSH2 0x746 PUSH2 0xEA7 JUMP JUMPDEST PUSH2 0x7F6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1819 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x7AC PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C6 PUSH2 0x82A PUSH2 0xEA7 JUMP JUMPDEST DUP5 PUSH2 0x8C1 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x83B PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x921 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAB PUSH2 0xAB0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB71 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB46 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB71 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB54 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB85 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC57 PUSH2 0xC51 PUSH2 0xEA7 JUMP JUMPDEST DUP4 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD23 PUSH2 0xC6D PUSH2 0xEA7 JUMP JUMPDEST DUP5 PUSH2 0xD1E DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x188A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xC97 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD41 PUSH2 0xD3A PUSH2 0xEA7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDDA PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA4 DUP2 PUSH2 0x1665 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17CF PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18AF PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x112C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17AA PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1867 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x121E DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1841 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12B3 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x140D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13B7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13FF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x149E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x154B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1560 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x15B8 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x16EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17F3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A7231582096433D5E0BDD2B 0xB6 0xDA 0xE3 0xC4 0xE2 0xE3 0xE2 0x2F 0xAA DIV 0x4E TIMESTAMP PUSH3 0x2CE340 STOP SIGNEXTEND KECCAK256 LOG1 PUSH26 0x558C581164736F6C634300051000320000000000000000000000 ",
							"sourceMap": "11034:7557:0:-;;;11347:234;8:9:-1;5:2;;;30:1;27;20:12;5:2;11347:234:0;9593:17;9613:12;:10;;;:12;;:::i;:::-;9593:32;;9640:9;9631:6;;:18;;;;;;;;;;;;;;;;;;9693:9;9660:43;;9689:1;9660:43;;;;;;;;;;;;9563:145;11374:26;;;;;;;;;;;;;;;;;:5;:26;;;;;;;;;;;;:::i;:::-;;11406:15;;;;;;;;;;;;;;;;;:7;:15;;;;;;;;;;;;:::i;:::-;;11439:2;11427:9;;:14;;;;;;;;;;;;;;;;;;11462;11447:12;:29;;;;11506:12;;11482:9;:21;11492:10;11482:21;;;;;;;;;;;;;;;:36;;;;11551:10;11530:46;;11547:1;11530:46;;;11563:12;;11530:46;;;;;;;;;;;;;;;;;;11034:7557;;3661:90;3706:15;3736:10;3729:17;;3661:90;:::o;11034:7557::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146104db578063a9059cbb14610541578063dd62ed3e146105a7578063f2fde38b1461061f57610100565b8063893d20e81461037e5780638da5cb5b146103c857806395d89b4114610412578063a0712d681461049557610100565b8063313ce567116100d3578063313ce5671461029257806339509351146102b657806370a082311461031c578063715018a61461037457610100565b806306fdde0314610105578063095ea7b31461018857806318160ddd146101ee57806323b872dd1461020c575b600080fd5b61010d610663565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014d578082015181840152602081019050610132565b50505050905090810190601f16801561017a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d46004803603604081101561019e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610705565b604051808215151515815260200191505060405180910390f35b6101f6610723565b6040518082815260200191505060405180910390f35b6102786004803603606081101561022257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061072d565b604051808215151515815260200191505060405180910390f35b61029a610806565b604051808260ff1660ff16815260200191505060405180910390f35b610302600480360360408110156102cc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061081d565b604051808215151515815260200191505060405180910390f35b61035e6004803603602081101561033257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108d0565b6040518082815260200191505060405180910390f35b61037c610919565b005b610386610aa1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103d0610ab0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61041a610ad9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561045a57808201518184015260208101905061043f565b50505050905090810190601f1680156104875780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104c1600480360360208110156104ab57600080fd5b8101908080359060200190929190505050610b7b565b604051808215151515815260200191505060405180910390f35b610527600480360360408110156104f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c60565b604051808215151515815260200191505060405180910390f35b61058d6004803603604081101561055757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d2d565b604051808215151515815260200191505060405180910390f35b610609600480360360408110156105bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d4b565b6040518082815260200191505060405180910390f35b6106616004803603602081101561063557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dd2565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106fb5780601f106106d0576101008083540402835291602001916106fb565b820191906000526020600020905b8154815290600101906020018083116106de57829003601f168201915b5050505050905090565b6000610719610712610ea7565b8484610eaf565b6001905092915050565b6000600354905090565b600061073a8484846110a6565b6107fb84610746610ea7565b6107f68560405180606001604052806028815260200161181960289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006107ac610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b610eaf565b600190509392505050565b6000600460009054906101000a900460ff16905090565b60006108c661082a610ea7565b846108c1856002600061083b610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b610eaf565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610921610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610aab610ab0565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b715780601f10610b4657610100808354040283529160200191610b71565b820191906000526020600020905b815481529060010190602001808311610b5457829003601f168201915b5050505050905090565b6000610b85610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c46576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610c57610c51610ea7565b836114a8565b60019050919050565b6000610d23610c6d610ea7565b84610d1e8560405180606001604052806025815260200161188a6025913960026000610c97610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b610eaf565b6001905092915050565b6000610d41610d3a610ea7565b84846110a6565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610dda610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e9b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610ea481611665565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f35576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806117cf6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fbb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806118af6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561112c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806117aa6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806118676023913960400191505060405180910390fd5b61121e8160405180606001604052806026815260200161184160269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112b381600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600083831115829061140d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156113d25780820151818401526020810190506113b7565b50505050905090810190601f1680156113ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008082840190508381101561149e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561154b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6115608160035461142090919063ffffffff16565b6003819055506115b881600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156116eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806117f36026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a7231582096433d5e0bdd2bb6dae3c4e2e3e22faa044e42622ce340000b20a179558c581164736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x541 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x61F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x495 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x374 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x132 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x17A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x72D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH2 0x806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x81D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH2 0x919 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D0 PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41A PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x45A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x43F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x487 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x527 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x609 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x661 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x635 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDD2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x719 PUSH2 0x712 PUSH2 0xEA7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A DUP5 DUP5 DUP5 PUSH2 0x10A6 JUMP JUMPDEST PUSH2 0x7FB DUP5 PUSH2 0x746 PUSH2 0xEA7 JUMP JUMPDEST PUSH2 0x7F6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1819 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x7AC PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C6 PUSH2 0x82A PUSH2 0xEA7 JUMP JUMPDEST DUP5 PUSH2 0x8C1 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x83B PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x921 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAB PUSH2 0xAB0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB71 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB46 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB71 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB54 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB85 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC57 PUSH2 0xC51 PUSH2 0xEA7 JUMP JUMPDEST DUP4 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD23 PUSH2 0xC6D PUSH2 0xEA7 JUMP JUMPDEST DUP5 PUSH2 0xD1E DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x188A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xC97 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD41 PUSH2 0xD3A PUSH2 0xEA7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDDA PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA4 DUP2 PUSH2 0x1665 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17CF PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18AF PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x112C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17AA PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1867 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x121E DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1841 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12B3 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x140D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13B7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13FF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x149E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x154B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1560 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x15B8 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x16EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17F3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A7231582096433D5E0BDD2B 0xB6 0xDA 0xE3 0xC4 0xE2 0xE3 0xE2 0x2F 0xAA DIV 0x4E TIMESTAMP PUSH3 0x2CE340 STOP SIGNEXTEND KECCAK256 LOG1 PUSH26 0x558C581164736F6C634300051000320000000000000000000000 ",
							"sourceMap": "11034:7557:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11034:7557:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12025:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12025:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13020:141;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13020:141:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12153:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13592:288;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13592:288:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11767:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;14248:197;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14248:197:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12287:104;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12287:104:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10359:127;;;:::i;:::-;;11636:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9776:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11896:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11896:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15339:117;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15339:117:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;14901:248;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14901:248:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12575:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12575:147:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12771:128;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12771:128:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10625:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10625:101:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;12025:77;12064:13;12092:5;12085:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12025:77;:::o;13020:141::-;13088:4;13100:39;13109:12;:10;:12::i;:::-;13123:7;13132:6;13100:8;:39::i;:::-;13152:4;13145:11;;13020:141;;;;:::o;12153:85::-;12199:7;12221:12;;12214:19;;12153:85;:::o;13592:288::-;13683:4;13695:36;13705:6;13713:9;13724:6;13695:9;:36::i;:::-;13737:121;13746:6;13754:12;:10;:12::i;:::-;13768:89;13806:6;13768:89;;;;;;;;;;;;;;;;;:11;:19;13780:6;13768:19;;;;;;;;;;;;;;;:33;13788:12;:10;:12::i;:::-;13768:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;13737:8;:121::i;:::-;13871:4;13864:11;;13592:288;;;;;:::o;11767:77::-;11810:5;11830:9;;;;;;;;;;;11823:16;;11767:77;:::o;14248:197::-;14328:4;14340:83;14349:12;:10;:12::i;:::-;14363:7;14372:50;14411:10;14372:11;:25;14384:12;:10;:12::i;:::-;14372:25;;;;;;;;;;;;;;;:34;14398:7;14372:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;14340:8;:83::i;:::-;14436:4;14429:11;;14248:197;;;;:::o;12287:104::-;12346:7;12368:9;:18;12378:7;12368:18;;;;;;;;;;;;;;;;12361:25;;12287:104;;;:::o;10359:127::-;9972:12;:10;:12::i;:::-;9962:22;;:6;;;;;;;;;;;:22;;;9954:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10453:1;10416:40;;10437:6;;;;;;;;;;;10416:40;;;;;;;;;;;;10479:1;10462:6;;:19;;;;;;;;;;;;;;;;;;10359:127::o;11636:77::-;11679:7;11701;:5;:7::i;:::-;11694:14;;11636:77;:::o;9776:71::-;9814:7;9836:6;;;;;;;;;;;9829:13;;9776:71;:::o;11896:81::-;11937:13;11965:7;11958:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11896:81;:::o;15339:117::-;15395:4;9972:12;:10;:12::i;:::-;9962:22;;:6;;;;;;;;;;;:22;;;9954:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15407:27;15413:12;:10;:12::i;:::-;15427:6;15407:5;:27::i;:::-;15447:4;15440:11;;15339:117;;;:::o;14901:248::-;14986:4;14998:129;15007:12;:10;:12::i;:::-;15021:7;15030:96;15069:15;15030:96;;;;;;;;;;;;;;;;;:11;:25;15042:12;:10;:12::i;:::-;15030:25;;;;;;;;;;;;;;;:34;15056:7;15030:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;14998:8;:129::i;:::-;15140:4;15133:11;;14901:248;;;;:::o;12575:147::-;12646:4;12658:42;12668:12;:10;:12::i;:::-;12682:9;12693:6;12658:9;:42::i;:::-;12713:4;12706:11;;12575:147;;;;:::o;12771:128::-;12845:7;12867:11;:18;12879:5;12867:18;;;;;;;;;;;;;;;:27;12886:7;12867:27;;;;;;;;;;;;;;;;12860:34;;12771:128;;;;:::o;10625:101::-;9972:12;:10;:12::i;:::-;9962:22;;:6;;;;;;;;;;;:22;;;9954:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10693:28;10712:8;10693:18;:28::i;:::-;10625:101;:::o;3661:90::-;3706:15;3736:10;3729:17;;3661:90;:::o;17892:314::-;17998:1;17981:19;;:5;:19;;;;17973:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18074:1;18055:21;;:7;:21;;;;18047:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18152:6;18122:11;:18;18134:5;18122:18;;;;;;;;;;;;;;;:27;18141:7;18122:27;;;;;;;;;;;;;;;:36;;;;18185:7;18169:32;;18178:5;18169:32;;;18194:6;18169:32;;;;;;;;;;;;;;;;;;17892:314;;;:::o;15900:442::-;16011:1;15993:20;;:6;:20;;;;15985:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16090:1;16069:23;;:9;:23;;;;16061:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16159;16181:6;16159:71;;;;;;;;;;;;;;;;;:9;:17;16169:6;16159:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;16139:9;:17;16149:6;16139:17;;;;;;;;;;;;;;;:91;;;;16259:32;16284:6;16259:9;:20;16269:9;16259:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;16236:9;:20;16246:9;16236:20;;;;;;;;;;;;;;;:55;;;;16319:9;16302:35;;16311:6;16302:35;;;16330:6;16302:35;;;;;;;;;;;;;;;;;;15900:442;;;:::o;5558:173::-;5644:7;5672:1;5667;:6;;5675:12;5659:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5659:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5694:9;5710:1;5706;:5;5694:17;;5725:1;5718:8;;;5558:173;;;;;:::o;4760:162::-;4818:7;4833:9;4849:1;4845;:5;4833:17;;4869:1;4864;:6;;4856:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4916:1;4909:8;;;4760:162;;;;:::o;16592:284::-;16682:1;16663:21;;:7;:21;;;;16655:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16742:24;16759:6;16742:12;;:16;;:24;;;;:::i;:::-;16727:12;:39;;;;16793:30;16816:6;16793:9;:18;16803:7;16793:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;16772:9;:18;16782:7;16772:18;;;;;;;;;;;;;;;:51;;;;16855:7;16834:37;;16851:1;16834:37;;;16864:6;16834:37;;;;;;;;;;;;;;;;;;16592:284;;:::o;10819:211::-;10908:1;10888:22;;:8;:22;;;;10880:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10993:8;10964:38;;10985:6;;;;;;;;;;;10964:38;;;;;;;;;;;;11017:8;11008:6;;:17;;;;;;;;;;;;;;;;;;10819:211;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1281000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1387",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1263",
								"decimals()": "1084",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1119",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1106",
								"renounceOwnership()": "24386",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "MSTORE"
								},
								{
									"begin": 11347,
									"end": 11581,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 11347,
									"end": 11581,
									"name": "POP"
								},
								{
									"begin": 9593,
									"end": 9610,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9613,
									"end": 9625,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 9613,
									"end": 9623,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 9613,
									"end": 9623,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9613,
									"end": 9623,
									"name": "SHL"
								},
								{
									"begin": 9613,
									"end": 9625,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9613,
									"end": 9625,
									"name": "SHR"
								},
								{
									"begin": 9613,
									"end": 9625,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 9613,
									"end": 9625,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 9613,
									"end": 9625,
									"name": "JUMPDEST"
								},
								{
									"begin": 9593,
									"end": 9625,
									"name": "SWAP1"
								},
								{
									"begin": 9593,
									"end": 9625,
									"name": "POP"
								},
								{
									"begin": 9640,
									"end": 9649,
									"name": "DUP1"
								},
								{
									"begin": 9631,
									"end": 9637,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9631,
									"end": 9637,
									"name": "DUP1"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "EXP"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "DUP2"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "SLOAD"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "DUP2"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "MUL"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "NOT"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "AND"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "SWAP1"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "DUP4"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "AND"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "MUL"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "OR"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "SWAP1"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "SSTORE"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "POP"
								},
								{
									"begin": 9693,
									"end": 9702,
									"name": "DUP1"
								},
								{
									"begin": 9660,
									"end": 9703,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9660,
									"end": 9703,
									"name": "AND"
								},
								{
									"begin": 9689,
									"end": 9690,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9660,
									"end": 9703,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9660,
									"end": 9703,
									"name": "AND"
								},
								{
									"begin": 9660,
									"end": 9703,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 9660,
									"end": 9703,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9660,
									"end": 9703,
									"name": "MLOAD"
								},
								{
									"begin": 9660,
									"end": 9703,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9660,
									"end": 9703,
									"name": "MLOAD"
								},
								{
									"begin": 9660,
									"end": 9703,
									"name": "DUP1"
								},
								{
									"begin": 9660,
									"end": 9703,
									"name": "SWAP2"
								},
								{
									"begin": 9660,
									"end": 9703,
									"name": "SUB"
								},
								{
									"begin": 9660,
									"end": 9703,
									"name": "SWAP1"
								},
								{
									"begin": 9660,
									"end": 9703,
									"name": "LOG3"
								},
								{
									"begin": 9563,
									"end": 9708,
									"name": "POP"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "MLOAD"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "DUP1"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "ADD"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "MSTORE"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "DUP1"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "PUSH",
									"value": "10"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "DUP2"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "MSTORE"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "ADD"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "PUSH",
									"value": "534D415254204D4F4E455920434F494E00000000000000000000000000000000"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "DUP2"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "MSTORE"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "POP"
								},
								{
									"begin": 11374,
									"end": 11379,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "SWAP1"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "DUP1"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "MLOAD"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "SWAP1"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "ADD"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "SWAP1"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "SWAP3"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "SWAP2"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "SWAP1"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "JUMPDEST"
								},
								{
									"begin": 11374,
									"end": 11400,
									"name": "POP"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "MLOAD"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "DUP1"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "ADD"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "MSTORE"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "DUP1"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "DUP2"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "MSTORE"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "ADD"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "PUSH",
									"value": "534D430000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "DUP2"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "MSTORE"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "POP"
								},
								{
									"begin": 11406,
									"end": 11413,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "SWAP1"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "DUP1"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "MLOAD"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "SWAP1"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "ADD"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "SWAP1"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "SWAP3"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "SWAP2"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "SWAP1"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "JUMPDEST"
								},
								{
									"begin": 11406,
									"end": 11421,
									"name": "POP"
								},
								{
									"begin": 11439,
									"end": 11441,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 11427,
									"end": 11436,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 11427,
									"end": 11436,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11427,
									"end": 11441,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 11427,
									"end": 11441,
									"name": "EXP"
								},
								{
									"begin": 11427,
									"end": 11441,
									"name": "DUP2"
								},
								{
									"begin": 11427,
									"end": 11441,
									"name": "SLOAD"
								},
								{
									"begin": 11427,
									"end": 11441,
									"name": "DUP2"
								},
								{
									"begin": 11427,
									"end": 11441,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11427,
									"end": 11441,
									"name": "MUL"
								},
								{
									"begin": 11427,
									"end": 11441,
									"name": "NOT"
								},
								{
									"begin": 11427,
									"end": 11441,
									"name": "AND"
								},
								{
									"begin": 11427,
									"end": 11441,
									"name": "SWAP1"
								},
								{
									"begin": 11427,
									"end": 11441,
									"name": "DUP4"
								},
								{
									"begin": 11427,
									"end": 11441,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11427,
									"end": 11441,
									"name": "AND"
								},
								{
									"begin": 11427,
									"end": 11441,
									"name": "MUL"
								},
								{
									"begin": 11427,
									"end": 11441,
									"name": "OR"
								},
								{
									"begin": 11427,
									"end": 11441,
									"name": "SWAP1"
								},
								{
									"begin": 11427,
									"end": 11441,
									"name": "SSTORE"
								},
								{
									"begin": 11427,
									"end": 11441,
									"name": "POP"
								},
								{
									"begin": 11462,
									"end": 11476,
									"name": "PUSH",
									"value": "422CA8B0A00A425000000"
								},
								{
									"begin": 11447,
									"end": 11459,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11447,
									"end": 11476,
									"name": "DUP2"
								},
								{
									"begin": 11447,
									"end": 11476,
									"name": "SWAP1"
								},
								{
									"begin": 11447,
									"end": 11476,
									"name": "SSTORE"
								},
								{
									"begin": 11447,
									"end": 11476,
									"name": "POP"
								},
								{
									"begin": 11506,
									"end": 11518,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11506,
									"end": 11518,
									"name": "SLOAD"
								},
								{
									"begin": 11482,
									"end": 11491,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11482,
									"end": 11503,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11492,
									"end": 11502,
									"name": "CALLER"
								},
								{
									"begin": 11482,
									"end": 11503,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11482,
									"end": 11503,
									"name": "AND"
								},
								{
									"begin": 11482,
									"end": 11503,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11482,
									"end": 11503,
									"name": "AND"
								},
								{
									"begin": 11482,
									"end": 11503,
									"name": "DUP2"
								},
								{
									"begin": 11482,
									"end": 11503,
									"name": "MSTORE"
								},
								{
									"begin": 11482,
									"end": 11503,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11482,
									"end": 11503,
									"name": "ADD"
								},
								{
									"begin": 11482,
									"end": 11503,
									"name": "SWAP1"
								},
								{
									"begin": 11482,
									"end": 11503,
									"name": "DUP2"
								},
								{
									"begin": 11482,
									"end": 11503,
									"name": "MSTORE"
								},
								{
									"begin": 11482,
									"end": 11503,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11482,
									"end": 11503,
									"name": "ADD"
								},
								{
									"begin": 11482,
									"end": 11503,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11482,
									"end": 11503,
									"name": "KECCAK256"
								},
								{
									"begin": 11482,
									"end": 11518,
									"name": "DUP2"
								},
								{
									"begin": 11482,
									"end": 11518,
									"name": "SWAP1"
								},
								{
									"begin": 11482,
									"end": 11518,
									"name": "SSTORE"
								},
								{
									"begin": 11482,
									"end": 11518,
									"name": "POP"
								},
								{
									"begin": 11551,
									"end": 11561,
									"name": "CALLER"
								},
								{
									"begin": 11530,
									"end": 11576,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11530,
									"end": 11576,
									"name": "AND"
								},
								{
									"begin": 11547,
									"end": 11548,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11530,
									"end": 11576,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11530,
									"end": 11576,
									"name": "AND"
								},
								{
									"begin": 11530,
									"end": 11576,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 11563,
									"end": 11575,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11563,
									"end": 11575,
									"name": "SLOAD"
								},
								{
									"begin": 11530,
									"end": 11576,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11530,
									"end": 11576,
									"name": "MLOAD"
								},
								{
									"begin": 11530,
									"end": 11576,
									"name": "DUP1"
								},
								{
									"begin": 11530,
									"end": 11576,
									"name": "DUP3"
								},
								{
									"begin": 11530,
									"end": 11576,
									"name": "DUP2"
								},
								{
									"begin": 11530,
									"end": 11576,
									"name": "MSTORE"
								},
								{
									"begin": 11530,
									"end": 11576,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11530,
									"end": 11576,
									"name": "ADD"
								},
								{
									"begin": 11530,
									"end": 11576,
									"name": "SWAP2"
								},
								{
									"begin": 11530,
									"end": 11576,
									"name": "POP"
								},
								{
									"begin": 11530,
									"end": 11576,
									"name": "POP"
								},
								{
									"begin": 11530,
									"end": 11576,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11530,
									"end": 11576,
									"name": "MLOAD"
								},
								{
									"begin": 11530,
									"end": 11576,
									"name": "DUP1"
								},
								{
									"begin": 11530,
									"end": 11576,
									"name": "SWAP2"
								},
								{
									"begin": 11530,
									"end": 11576,
									"name": "SUB"
								},
								{
									"begin": 11530,
									"end": 11576,
									"name": "SWAP1"
								},
								{
									"begin": 11530,
									"end": 11576,
									"name": "LOG3"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "JUMP"
								},
								{
									"begin": 3661,
									"end": 3751,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 3661,
									"end": 3751,
									"name": "JUMPDEST"
								},
								{
									"begin": 3706,
									"end": 3721,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3736,
									"end": 3746,
									"name": "CALLER"
								},
								{
									"begin": 3729,
									"end": 3746,
									"name": "SWAP1"
								},
								{
									"begin": 3729,
									"end": 3746,
									"name": "POP"
								},
								{
									"begin": 3661,
									"end": 3751,
									"name": "SWAP1"
								},
								{
									"begin": 3661,
									"end": 3751,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "JUMPDEST"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DUP3"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DUP1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SLOAD"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DUP2"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "AND"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "ISZERO"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "MUL"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SUB"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "AND"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SWAP1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DIV"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SWAP1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "MSTORE"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "KECCAK256"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SWAP1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "ADD"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SWAP1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DIV"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DUP2"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "ADD"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SWAP3"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DUP3"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "LT"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "JUMPI"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DUP1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "MLOAD"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "NOT"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "AND"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DUP4"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DUP1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "ADD"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "OR"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DUP6"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SSTORE"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "JUMP"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "JUMPDEST"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DUP3"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DUP1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "ADD"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "ADD"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DUP6"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SSTORE"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DUP3"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "ISZERO"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "JUMPI"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SWAP2"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DUP3"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "ADD"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "JUMPDEST"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DUP3"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DUP2"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "GT"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "ISZERO"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "JUMPI"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DUP3"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "MLOAD"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DUP3"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SSTORE"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SWAP2"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "ADD"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SWAP2"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SWAP1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "ADD"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SWAP1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "JUMP"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "JUMPDEST"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "JUMPDEST"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "POP"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SWAP1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "POP"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SWAP2"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SWAP1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "JUMPDEST"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "POP"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SWAP1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "JUMPDEST"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SWAP2"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SWAP1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "JUMPDEST"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DUP1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DUP3"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "GT"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "ISZERO"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "JUMPI"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DUP2"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SWAP1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SSTORE"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "POP"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "ADD"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "JUMP"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "JUMPDEST"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "POP"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SWAP1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "JUMP"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "JUMPDEST"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "SWAP1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "JUMPDEST"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "DUP1"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "CODECOPY"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11034,
									"end": 18591,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582096433d5e0bdd2bb6dae3c4e2e3e22faa044e42622ce340000b20a179558c581164736f6c63430005100032",
									".code": [
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "MSTORE"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "POP"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "LT"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "SHR"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "GT"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "GT"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMP"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPDEST"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "A0712D68"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMP"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPDEST"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "GT"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMP"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPDEST"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "JUMPDEST"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18591,
											"name": "REVERT"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "JUMPDEST"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "JUMPDEST"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "MLOAD"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "DUP1"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "DUP1"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "ADD"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "DUP3"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "DUP2"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "SUB"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "DUP3"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "MSTORE"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "DUP4"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "DUP2"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "DUP2"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "MLOAD"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "DUP2"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "MSTORE"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "ADD"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "SWAP2"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "POP"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "DUP1"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "MLOAD"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "SWAP1"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "ADD"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "SWAP1"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "DUP1"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "DUP4"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "POP"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "POP"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "POP"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "SWAP1"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "POP"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "SWAP1"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "DUP2"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "ADD"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "SWAP1"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "AND"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "DUP1"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "ISZERO"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "JUMPI"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "DUP1"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "DUP3"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "SUB"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "DUP1"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "MLOAD"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "DUP4"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "SUB"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "EXP"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "SUB"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "NOT"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "AND"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "DUP2"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "MSTORE"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "ADD"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "SWAP2"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "POP"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "JUMPDEST"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "POP"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "SWAP3"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "POP"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "POP"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "POP"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "MLOAD"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "DUP1"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "SWAP2"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "SUB"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "SWAP1"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "RETURN"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "JUMPDEST"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "DUP1"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "DUP2"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "ADD"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "SWAP1"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "DUP1"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "DUP1"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "AND"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "SWAP1"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "ADD"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "SWAP1"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "SWAP3"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "SWAP2"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "SWAP1"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "DUP1"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "SWAP1"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "ADD"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "SWAP1"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "SWAP3"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "SWAP2"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "SWAP1"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "POP"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "POP"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "POP"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "JUMPDEST"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "MLOAD"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "DUP1"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "DUP3"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "ISZERO"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "ISZERO"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "ISZERO"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "ISZERO"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "DUP2"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "MSTORE"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "ADD"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "SWAP2"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "POP"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "POP"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "MLOAD"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "DUP1"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "SWAP2"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "SUB"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "SWAP1"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "RETURN"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "JUMPDEST"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "JUMPDEST"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "MLOAD"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "DUP1"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "DUP3"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "DUP2"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "MSTORE"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "ADD"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "SWAP2"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "POP"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "POP"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "MLOAD"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "DUP1"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "SWAP2"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "SUB"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "SWAP1"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "RETURN"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "JUMPDEST"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "DUP1"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "DUP2"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "ADD"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "SWAP1"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "DUP1"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "DUP1"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "AND"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "SWAP1"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "ADD"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "SWAP1"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "SWAP3"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "SWAP2"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "SWAP1"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "DUP1"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "AND"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "SWAP1"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "ADD"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "SWAP1"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "SWAP3"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "SWAP2"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "SWAP1"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "DUP1"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "SWAP1"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "ADD"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "SWAP1"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "SWAP3"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "SWAP2"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "SWAP1"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "POP"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "POP"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "POP"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "JUMPDEST"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "MLOAD"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "DUP1"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "DUP3"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "ISZERO"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "ISZERO"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "ISZERO"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "ISZERO"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "DUP2"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "MSTORE"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "ADD"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "SWAP2"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "POP"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "POP"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "MLOAD"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "DUP1"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "SWAP2"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "SUB"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "SWAP1"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "RETURN"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "JUMPDEST"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "JUMPDEST"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "MLOAD"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "DUP1"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "DUP3"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "AND"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "AND"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "DUP2"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "MSTORE"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "ADD"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "SWAP2"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "POP"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "POP"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "MLOAD"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "DUP1"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "SWAP2"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "SUB"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "SWAP1"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "RETURN"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "JUMPDEST"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "DUP1"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "DUP2"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "ADD"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "SWAP1"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "DUP1"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "DUP1"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "AND"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "SWAP1"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "ADD"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "SWAP1"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "SWAP3"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "SWAP2"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "SWAP1"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "DUP1"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "SWAP1"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "ADD"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "SWAP1"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "SWAP3"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "SWAP2"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "SWAP1"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "POP"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "POP"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "POP"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "JUMPDEST"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "MLOAD"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "DUP1"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "DUP3"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "ISZERO"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "ISZERO"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "ISZERO"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "ISZERO"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "DUP2"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "MSTORE"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "ADD"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "SWAP2"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "POP"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "POP"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "MLOAD"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "DUP1"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "SWAP2"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "SUB"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "SWAP1"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "RETURN"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "JUMPDEST"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "DUP1"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "DUP2"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "ADD"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "SWAP1"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "DUP1"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "DUP1"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "AND"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "SWAP1"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "ADD"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "SWAP1"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "SWAP3"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "SWAP2"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "SWAP1"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "JUMPDEST"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "MLOAD"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "DUP1"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "DUP3"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "DUP2"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "MSTORE"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "ADD"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "SWAP2"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "MLOAD"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "DUP1"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "SWAP2"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "SUB"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "SWAP1"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "RETURN"
										},
										{
											"begin": 10359,
											"end": 10486,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 10359,
											"end": 10486,
											"name": "JUMPDEST"
										},
										{
											"begin": 10359,
											"end": 10486,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 10359,
											"end": 10486,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 10359,
											"end": 10486,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10359,
											"end": 10486,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 10359,
											"end": 10486,
											"name": "JUMPDEST"
										},
										{
											"begin": 10359,
											"end": 10486,
											"name": "STOP"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "JUMPDEST"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "JUMPDEST"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "MLOAD"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "DUP1"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "DUP3"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "AND"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "AND"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "DUP2"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "MSTORE"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "ADD"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "SWAP2"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "POP"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "POP"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "MLOAD"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "DUP1"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "SWAP2"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "SUB"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "SWAP1"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "RETURN"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "JUMPDEST"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "JUMPDEST"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "MLOAD"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "DUP1"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "DUP3"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "AND"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "AND"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "DUP2"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "MSTORE"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "ADD"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "SWAP2"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "POP"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "POP"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "MLOAD"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "DUP1"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "SWAP2"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "SUB"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "SWAP1"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "RETURN"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "JUMPDEST"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "JUMPDEST"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "MLOAD"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "DUP1"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "DUP1"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "ADD"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "DUP3"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "DUP2"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "SUB"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "DUP3"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "MSTORE"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "DUP4"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "DUP2"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "DUP2"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "MLOAD"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "DUP2"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "MSTORE"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "ADD"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "SWAP2"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "POP"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "DUP1"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "MLOAD"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "SWAP1"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "ADD"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "SWAP1"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "DUP1"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "DUP4"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "POP"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "POP"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "POP"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "SWAP1"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "POP"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "SWAP1"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "DUP2"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "ADD"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "SWAP1"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "AND"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "DUP1"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "ISZERO"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "JUMPI"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "DUP1"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "DUP3"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "SUB"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "DUP1"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "MLOAD"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "DUP4"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "SUB"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "EXP"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "SUB"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "NOT"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "AND"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "DUP2"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "MSTORE"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "ADD"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "SWAP2"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "POP"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "JUMPDEST"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "POP"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "SWAP3"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "POP"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "POP"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "POP"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "MLOAD"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "DUP1"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "SWAP2"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "SUB"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "SWAP1"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "RETURN"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "JUMPDEST"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "DUP1"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "DUP2"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "ADD"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "SWAP1"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "DUP1"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "DUP1"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "SWAP1"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "ADD"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "SWAP1"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "SWAP3"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "SWAP2"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "SWAP1"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "POP"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "POP"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "POP"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "JUMPDEST"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "MLOAD"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "DUP1"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "DUP3"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "ISZERO"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "ISZERO"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "ISZERO"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "ISZERO"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "DUP2"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "MSTORE"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "ADD"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "SWAP2"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "POP"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "POP"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "MLOAD"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "DUP1"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "SWAP2"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "SUB"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "SWAP1"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "RETURN"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "JUMPDEST"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "DUP1"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "DUP2"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "ADD"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "SWAP1"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "DUP1"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "DUP1"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "AND"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "SWAP1"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "ADD"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "SWAP1"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "SWAP3"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "SWAP2"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "SWAP1"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "DUP1"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "SWAP1"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "ADD"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "SWAP1"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "SWAP3"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "SWAP2"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "SWAP1"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "POP"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "POP"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "POP"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "JUMPDEST"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "MLOAD"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "DUP1"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "DUP3"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "ISZERO"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "ISZERO"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "ISZERO"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "ISZERO"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "DUP2"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "MSTORE"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "ADD"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "SWAP2"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "POP"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "POP"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "MLOAD"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "DUP1"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "SWAP2"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "SUB"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "SWAP1"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "RETURN"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "JUMPDEST"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "DUP1"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "DUP2"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "ADD"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "SWAP1"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "DUP1"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "DUP1"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "AND"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "SWAP1"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "ADD"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "SWAP1"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "SWAP3"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "SWAP2"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "SWAP1"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "DUP1"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "SWAP1"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "ADD"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "SWAP1"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "SWAP3"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "SWAP2"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "SWAP1"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "POP"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "POP"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "POP"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "JUMPDEST"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "MLOAD"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "DUP1"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "DUP3"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "ISZERO"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "ISZERO"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "ISZERO"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "ISZERO"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "DUP2"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "MSTORE"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "ADD"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "SWAP2"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "POP"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "POP"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "MLOAD"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "DUP1"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "SWAP2"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "SUB"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "SWAP1"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "RETURN"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "JUMPDEST"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "DUP1"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "DUP2"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "ADD"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "SWAP1"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "DUP1"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "DUP1"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "AND"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "SWAP1"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "ADD"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "SWAP1"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "SWAP3"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "SWAP2"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "SWAP1"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "DUP1"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "AND"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "SWAP1"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "ADD"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "SWAP1"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "SWAP3"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "SWAP2"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "SWAP1"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "POP"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "POP"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "POP"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "JUMPDEST"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "MLOAD"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "DUP1"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "DUP3"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "DUP2"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "MSTORE"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "ADD"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "SWAP2"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "POP"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "POP"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "MLOAD"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "DUP1"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "SWAP2"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "SUB"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "SWAP1"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "RETURN"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "JUMPDEST"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "DUP1"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "DUP2"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "ADD"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "SWAP1"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "DUP1"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "DUP1"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "AND"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "SWAP1"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "ADD"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "SWAP1"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "SWAP3"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "SWAP2"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "SWAP1"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "POP"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "POP"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "POP"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "JUMPDEST"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "STOP"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "JUMPDEST"
										},
										{
											"begin": 12064,
											"end": 12077,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 12092,
											"end": 12097,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SLOAD"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP2"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "AND"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "ISZERO"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "MUL"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SUB"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "AND"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SWAP1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DIV"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "ADD"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SWAP2"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DIV"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "MUL"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "ADD"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "MLOAD"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SWAP1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP2"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "ADD"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "MSTORE"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SWAP3"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SWAP2"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SWAP1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP2"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP2"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "MSTORE"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "ADD"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP3"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SLOAD"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP2"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "AND"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "ISZERO"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "MUL"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SUB"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "AND"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SWAP1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DIV"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "ISZERO"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "JUMPI"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "LT"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "JUMPI"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP4"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SLOAD"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DIV"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "MUL"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP4"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "MSTORE"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SWAP2"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "ADD"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SWAP2"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "JUMP"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "JUMPDEST"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP3"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "ADD"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SWAP2"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SWAP1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "MSTORE"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "KECCAK256"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SWAP1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "JUMPDEST"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP2"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SLOAD"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP2"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "MSTORE"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SWAP1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "ADD"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SWAP1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "ADD"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP4"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "GT"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "JUMPI"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP3"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SWAP1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SUB"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "AND"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP3"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "ADD"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SWAP2"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "JUMPDEST"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "POP"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "POP"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "POP"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "POP"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "POP"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SWAP1"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "POP"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "SWAP1"
										},
										{
											"begin": 12025,
											"end": 12102,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "JUMPDEST"
										},
										{
											"begin": 13088,
											"end": 13092,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13100,
											"end": 13139,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 13109,
											"end": 13121,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 13109,
											"end": 13119,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 13109,
											"end": 13121,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13109,
											"end": 13121,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 13109,
											"end": 13121,
											"name": "JUMPDEST"
										},
										{
											"begin": 13123,
											"end": 13130,
											"name": "DUP5"
										},
										{
											"begin": 13132,
											"end": 13138,
											"name": "DUP5"
										},
										{
											"begin": 13100,
											"end": 13108,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 13100,
											"end": 13139,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13100,
											"end": 13139,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 13100,
											"end": 13139,
											"name": "JUMPDEST"
										},
										{
											"begin": 13152,
											"end": 13156,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13145,
											"end": 13156,
											"name": "SWAP1"
										},
										{
											"begin": 13145,
											"end": 13156,
											"name": "POP"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "SWAP3"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "SWAP2"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "POP"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "POP"
										},
										{
											"begin": 13020,
											"end": 13161,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "JUMPDEST"
										},
										{
											"begin": 12199,
											"end": 12206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12221,
											"end": 12233,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 12221,
											"end": 12233,
											"name": "SLOAD"
										},
										{
											"begin": 12214,
											"end": 12233,
											"name": "SWAP1"
										},
										{
											"begin": 12214,
											"end": 12233,
											"name": "POP"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "SWAP1"
										},
										{
											"begin": 12153,
											"end": 12238,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "JUMPDEST"
										},
										{
											"begin": 13683,
											"end": 13687,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13695,
											"end": 13731,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 13705,
											"end": 13711,
											"name": "DUP5"
										},
										{
											"begin": 13713,
											"end": 13722,
											"name": "DUP5"
										},
										{
											"begin": 13724,
											"end": 13730,
											"name": "DUP5"
										},
										{
											"begin": 13695,
											"end": 13704,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 13695,
											"end": 13731,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13695,
											"end": 13731,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 13695,
											"end": 13731,
											"name": "JUMPDEST"
										},
										{
											"begin": 13737,
											"end": 13858,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 13746,
											"end": 13752,
											"name": "DUP5"
										},
										{
											"begin": 13754,
											"end": 13766,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 13754,
											"end": 13764,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 13754,
											"end": 13766,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13754,
											"end": 13766,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 13754,
											"end": 13766,
											"name": "JUMPDEST"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 13806,
											"end": 13812,
											"name": "DUP6"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "MLOAD"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "DUP1"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "ADD"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "MSTORE"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "DUP1"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "DUP2"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "MSTORE"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "ADD"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "PUSH data",
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "SWAP2"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "CODECOPY"
										},
										{
											"begin": 13768,
											"end": 13779,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13768,
											"end": 13787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13780,
											"end": 13786,
											"name": "DUP12"
										},
										{
											"begin": 13768,
											"end": 13787,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13768,
											"end": 13787,
											"name": "AND"
										},
										{
											"begin": 13768,
											"end": 13787,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13768,
											"end": 13787,
											"name": "AND"
										},
										{
											"begin": 13768,
											"end": 13787,
											"name": "DUP2"
										},
										{
											"begin": 13768,
											"end": 13787,
											"name": "MSTORE"
										},
										{
											"begin": 13768,
											"end": 13787,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13768,
											"end": 13787,
											"name": "ADD"
										},
										{
											"begin": 13768,
											"end": 13787,
											"name": "SWAP1"
										},
										{
											"begin": 13768,
											"end": 13787,
											"name": "DUP2"
										},
										{
											"begin": 13768,
											"end": 13787,
											"name": "MSTORE"
										},
										{
											"begin": 13768,
											"end": 13787,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13768,
											"end": 13787,
											"name": "ADD"
										},
										{
											"begin": 13768,
											"end": 13787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13768,
											"end": 13787,
											"name": "KECCAK256"
										},
										{
											"begin": 13768,
											"end": 13801,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13788,
											"end": 13800,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 13788,
											"end": 13798,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 13788,
											"end": 13800,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13788,
											"end": 13800,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 13788,
											"end": 13800,
											"name": "JUMPDEST"
										},
										{
											"begin": 13768,
											"end": 13801,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13768,
											"end": 13801,
											"name": "AND"
										},
										{
											"begin": 13768,
											"end": 13801,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13768,
											"end": 13801,
											"name": "AND"
										},
										{
											"begin": 13768,
											"end": 13801,
											"name": "DUP2"
										},
										{
											"begin": 13768,
											"end": 13801,
											"name": "MSTORE"
										},
										{
											"begin": 13768,
											"end": 13801,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13768,
											"end": 13801,
											"name": "ADD"
										},
										{
											"begin": 13768,
											"end": 13801,
											"name": "SWAP1"
										},
										{
											"begin": 13768,
											"end": 13801,
											"name": "DUP2"
										},
										{
											"begin": 13768,
											"end": 13801,
											"name": "MSTORE"
										},
										{
											"begin": 13768,
											"end": 13801,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13768,
											"end": 13801,
											"name": "ADD"
										},
										{
											"begin": 13768,
											"end": 13801,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13768,
											"end": 13801,
											"name": "KECCAK256"
										},
										{
											"begin": 13768,
											"end": 13801,
											"name": "SLOAD"
										},
										{
											"begin": 13768,
											"end": 13805,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 13768,
											"end": 13805,
											"name": "SWAP1"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "SWAP3"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "SWAP2"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "SWAP1"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "AND"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 13768,
											"end": 13857,
											"name": "JUMPDEST"
										},
										{
											"begin": 13737,
											"end": 13745,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 13737,
											"end": 13858,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13737,
											"end": 13858,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 13737,
											"end": 13858,
											"name": "JUMPDEST"
										},
										{
											"begin": 13871,
											"end": 13875,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13864,
											"end": 13875,
											"name": "SWAP1"
										},
										{
											"begin": 13864,
											"end": 13875,
											"name": "POP"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "SWAP4"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "SWAP3"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "POP"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "POP"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "POP"
										},
										{
											"begin": 13592,
											"end": 13880,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "JUMPDEST"
										},
										{
											"begin": 11810,
											"end": 11815,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11830,
											"end": 11839,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11830,
											"end": 11839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11830,
											"end": 11839,
											"name": "SWAP1"
										},
										{
											"begin": 11830,
											"end": 11839,
											"name": "SLOAD"
										},
										{
											"begin": 11830,
											"end": 11839,
											"name": "SWAP1"
										},
										{
											"begin": 11830,
											"end": 11839,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11830,
											"end": 11839,
											"name": "EXP"
										},
										{
											"begin": 11830,
											"end": 11839,
											"name": "SWAP1"
										},
										{
											"begin": 11830,
											"end": 11839,
											"name": "DIV"
										},
										{
											"begin": 11830,
											"end": 11839,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11830,
											"end": 11839,
											"name": "AND"
										},
										{
											"begin": 11823,
											"end": 11839,
											"name": "SWAP1"
										},
										{
											"begin": 11823,
											"end": 11839,
											"name": "POP"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "SWAP1"
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "JUMPDEST"
										},
										{
											"begin": 14328,
											"end": 14332,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14340,
											"end": 14423,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 14349,
											"end": 14361,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 14349,
											"end": 14359,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 14349,
											"end": 14361,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14349,
											"end": 14361,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 14349,
											"end": 14361,
											"name": "JUMPDEST"
										},
										{
											"begin": 14363,
											"end": 14370,
											"name": "DUP5"
										},
										{
											"begin": 14372,
											"end": 14422,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 14411,
											"end": 14421,
											"name": "DUP6"
										},
										{
											"begin": 14372,
											"end": 14383,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14372,
											"end": 14397,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14384,
											"end": 14396,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 14384,
											"end": 14394,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 14384,
											"end": 14396,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14384,
											"end": 14396,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 14384,
											"end": 14396,
											"name": "JUMPDEST"
										},
										{
											"begin": 14372,
											"end": 14397,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14372,
											"end": 14397,
											"name": "AND"
										},
										{
											"begin": 14372,
											"end": 14397,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14372,
											"end": 14397,
											"name": "AND"
										},
										{
											"begin": 14372,
											"end": 14397,
											"name": "DUP2"
										},
										{
											"begin": 14372,
											"end": 14397,
											"name": "MSTORE"
										},
										{
											"begin": 14372,
											"end": 14397,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14372,
											"end": 14397,
											"name": "ADD"
										},
										{
											"begin": 14372,
											"end": 14397,
											"name": "SWAP1"
										},
										{
											"begin": 14372,
											"end": 14397,
											"name": "DUP2"
										},
										{
											"begin": 14372,
											"end": 14397,
											"name": "MSTORE"
										},
										{
											"begin": 14372,
											"end": 14397,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14372,
											"end": 14397,
											"name": "ADD"
										},
										{
											"begin": 14372,
											"end": 14397,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14372,
											"end": 14397,
											"name": "KECCAK256"
										},
										{
											"begin": 14372,
											"end": 14406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14398,
											"end": 14405,
											"name": "DUP10"
										},
										{
											"begin": 14372,
											"end": 14406,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14372,
											"end": 14406,
											"name": "AND"
										},
										{
											"begin": 14372,
											"end": 14406,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14372,
											"end": 14406,
											"name": "AND"
										},
										{
											"begin": 14372,
											"end": 14406,
											"name": "DUP2"
										},
										{
											"begin": 14372,
											"end": 14406,
											"name": "MSTORE"
										},
										{
											"begin": 14372,
											"end": 14406,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14372,
											"end": 14406,
											"name": "ADD"
										},
										{
											"begin": 14372,
											"end": 14406,
											"name": "SWAP1"
										},
										{
											"begin": 14372,
											"end": 14406,
											"name": "DUP2"
										},
										{
											"begin": 14372,
											"end": 14406,
											"name": "MSTORE"
										},
										{
											"begin": 14372,
											"end": 14406,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14372,
											"end": 14406,
											"name": "ADD"
										},
										{
											"begin": 14372,
											"end": 14406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14372,
											"end": 14406,
											"name": "KECCAK256"
										},
										{
											"begin": 14372,
											"end": 14406,
											"name": "SLOAD"
										},
										{
											"begin": 14372,
											"end": 14410,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 14372,
											"end": 14410,
											"name": "SWAP1"
										},
										{
											"begin": 14372,
											"end": 14422,
											"name": "SWAP2"
										},
										{
											"begin": 14372,
											"end": 14422,
											"name": "SWAP1"
										},
										{
											"begin": 14372,
											"end": 14422,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14372,
											"end": 14422,
											"name": "AND"
										},
										{
											"begin": 14372,
											"end": 14422,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14372,
											"end": 14422,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 14372,
											"end": 14422,
											"name": "JUMPDEST"
										},
										{
											"begin": 14340,
											"end": 14348,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 14340,
											"end": 14423,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14340,
											"end": 14423,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 14340,
											"end": 14423,
											"name": "JUMPDEST"
										},
										{
											"begin": 14436,
											"end": 14440,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14429,
											"end": 14440,
											"name": "SWAP1"
										},
										{
											"begin": 14429,
											"end": 14440,
											"name": "POP"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "SWAP3"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "SWAP2"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "POP"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "POP"
										},
										{
											"begin": 14248,
											"end": 14445,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "JUMPDEST"
										},
										{
											"begin": 12346,
											"end": 12353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12368,
											"end": 12377,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12368,
											"end": 12386,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12378,
											"end": 12385,
											"name": "DUP4"
										},
										{
											"begin": 12368,
											"end": 12386,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12368,
											"end": 12386,
											"name": "AND"
										},
										{
											"begin": 12368,
											"end": 12386,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12368,
											"end": 12386,
											"name": "AND"
										},
										{
											"begin": 12368,
											"end": 12386,
											"name": "DUP2"
										},
										{
											"begin": 12368,
											"end": 12386,
											"name": "MSTORE"
										},
										{
											"begin": 12368,
											"end": 12386,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12368,
											"end": 12386,
											"name": "ADD"
										},
										{
											"begin": 12368,
											"end": 12386,
											"name": "SWAP1"
										},
										{
											"begin": 12368,
											"end": 12386,
											"name": "DUP2"
										},
										{
											"begin": 12368,
											"end": 12386,
											"name": "MSTORE"
										},
										{
											"begin": 12368,
											"end": 12386,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12368,
											"end": 12386,
											"name": "ADD"
										},
										{
											"begin": 12368,
											"end": 12386,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12368,
											"end": 12386,
											"name": "KECCAK256"
										},
										{
											"begin": 12368,
											"end": 12386,
											"name": "SLOAD"
										},
										{
											"begin": 12361,
											"end": 12386,
											"name": "SWAP1"
										},
										{
											"begin": 12361,
											"end": 12386,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "SWAP2"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "SWAP1"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12391,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10359,
											"end": 10486,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 10359,
											"end": 10486,
											"name": "JUMPDEST"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 9972,
											"end": 9982,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "JUMPDEST"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "AND"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "DUP1"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "SWAP1"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "SLOAD"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "SWAP1"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "EXP"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "SWAP1"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "DIV"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "AND"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "AND"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "EQ"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "JUMPI"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MLOAD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP3"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SUB"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP3"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "POP"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "POP"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "POP"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MLOAD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SUB"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "REVERT"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "JUMPDEST"
										},
										{
											"begin": 10453,
											"end": 10454,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10416,
											"end": 10456,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10416,
											"end": 10456,
											"name": "AND"
										},
										{
											"begin": 10437,
											"end": 10443,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10437,
											"end": 10443,
											"name": "DUP1"
										},
										{
											"begin": 10437,
											"end": 10443,
											"name": "SWAP1"
										},
										{
											"begin": 10437,
											"end": 10443,
											"name": "SLOAD"
										},
										{
											"begin": 10437,
											"end": 10443,
											"name": "SWAP1"
										},
										{
											"begin": 10437,
											"end": 10443,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10437,
											"end": 10443,
											"name": "EXP"
										},
										{
											"begin": 10437,
											"end": 10443,
											"name": "SWAP1"
										},
										{
											"begin": 10437,
											"end": 10443,
											"name": "DIV"
										},
										{
											"begin": 10437,
											"end": 10443,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10437,
											"end": 10443,
											"name": "AND"
										},
										{
											"begin": 10416,
											"end": 10456,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10416,
											"end": 10456,
											"name": "AND"
										},
										{
											"begin": 10416,
											"end": 10456,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10416,
											"end": 10456,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10416,
											"end": 10456,
											"name": "MLOAD"
										},
										{
											"begin": 10416,
											"end": 10456,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10416,
											"end": 10456,
											"name": "MLOAD"
										},
										{
											"begin": 10416,
											"end": 10456,
											"name": "DUP1"
										},
										{
											"begin": 10416,
											"end": 10456,
											"name": "SWAP2"
										},
										{
											"begin": 10416,
											"end": 10456,
											"name": "SUB"
										},
										{
											"begin": 10416,
											"end": 10456,
											"name": "SWAP1"
										},
										{
											"begin": 10416,
											"end": 10456,
											"name": "LOG3"
										},
										{
											"begin": 10479,
											"end": 10480,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10462,
											"end": 10468,
											"name": "DUP1"
										},
										{
											"begin": 10462,
											"end": 10468,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10462,
											"end": 10481,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10462,
											"end": 10481,
											"name": "EXP"
										},
										{
											"begin": 10462,
											"end": 10481,
											"name": "DUP2"
										},
										{
											"begin": 10462,
											"end": 10481,
											"name": "SLOAD"
										},
										{
											"begin": 10462,
											"end": 10481,
											"name": "DUP2"
										},
										{
											"begin": 10462,
											"end": 10481,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10462,
											"end": 10481,
											"name": "MUL"
										},
										{
											"begin": 10462,
											"end": 10481,
											"name": "NOT"
										},
										{
											"begin": 10462,
											"end": 10481,
											"name": "AND"
										},
										{
											"begin": 10462,
											"end": 10481,
											"name": "SWAP1"
										},
										{
											"begin": 10462,
											"end": 10481,
											"name": "DUP4"
										},
										{
											"begin": 10462,
											"end": 10481,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10462,
											"end": 10481,
											"name": "AND"
										},
										{
											"begin": 10462,
											"end": 10481,
											"name": "MUL"
										},
										{
											"begin": 10462,
											"end": 10481,
											"name": "OR"
										},
										{
											"begin": 10462,
											"end": 10481,
											"name": "SWAP1"
										},
										{
											"begin": 10462,
											"end": 10481,
											"name": "SSTORE"
										},
										{
											"begin": 10462,
											"end": 10481,
											"name": "POP"
										},
										{
											"begin": 10359,
											"end": 10486,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "JUMPDEST"
										},
										{
											"begin": 11679,
											"end": 11686,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11701,
											"end": 11708,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 11701,
											"end": 11706,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 11701,
											"end": 11708,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11701,
											"end": 11708,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 11701,
											"end": 11708,
											"name": "JUMPDEST"
										},
										{
											"begin": 11694,
											"end": 11708,
											"name": "SWAP1"
										},
										{
											"begin": 11694,
											"end": 11708,
											"name": "POP"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "SWAP1"
										},
										{
											"begin": 11636,
											"end": 11713,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "JUMPDEST"
										},
										{
											"begin": 9814,
											"end": 9821,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9842,
											"name": "DUP1"
										},
										{
											"begin": 9836,
											"end": 9842,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9842,
											"name": "SWAP1"
										},
										{
											"begin": 9836,
											"end": 9842,
											"name": "SLOAD"
										},
										{
											"begin": 9836,
											"end": 9842,
											"name": "SWAP1"
										},
										{
											"begin": 9836,
											"end": 9842,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9836,
											"end": 9842,
											"name": "EXP"
										},
										{
											"begin": 9836,
											"end": 9842,
											"name": "SWAP1"
										},
										{
											"begin": 9836,
											"end": 9842,
											"name": "DIV"
										},
										{
											"begin": 9836,
											"end": 9842,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9836,
											"end": 9842,
											"name": "AND"
										},
										{
											"begin": 9829,
											"end": 9842,
											"name": "SWAP1"
										},
										{
											"begin": 9829,
											"end": 9842,
											"name": "POP"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "SWAP1"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "JUMPDEST"
										},
										{
											"begin": 11937,
											"end": 11950,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11965,
											"end": 11972,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DUP1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SLOAD"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DUP2"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "AND"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "ISZERO"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "MUL"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SUB"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "AND"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SWAP1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DIV"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DUP1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "ADD"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DUP1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SWAP2"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DIV"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "MUL"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "ADD"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "MLOAD"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SWAP1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DUP2"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "ADD"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "MSTORE"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DUP1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SWAP3"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SWAP2"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SWAP1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DUP2"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DUP2"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "MSTORE"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "ADD"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DUP3"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DUP1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SLOAD"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DUP2"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "AND"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "ISZERO"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "MUL"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SUB"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "AND"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SWAP1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DIV"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DUP1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "ISZERO"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "JUMPI"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DUP1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "LT"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "JUMPI"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DUP1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DUP4"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SLOAD"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DIV"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "MUL"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DUP4"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "MSTORE"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SWAP2"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "ADD"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SWAP2"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "JUMP"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "JUMPDEST"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DUP3"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "ADD"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SWAP2"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SWAP1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "MSTORE"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "KECCAK256"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SWAP1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "JUMPDEST"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DUP2"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SLOAD"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DUP2"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "MSTORE"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SWAP1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "ADD"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SWAP1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "ADD"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DUP1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DUP4"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "GT"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "JUMPI"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DUP3"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SWAP1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SUB"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "AND"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "DUP3"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "ADD"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SWAP2"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "JUMPDEST"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "POP"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "POP"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "POP"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "POP"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "POP"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "SWAP1"
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "POP"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "SWAP1"
										},
										{
											"begin": 11896,
											"end": 11977,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "JUMPDEST"
										},
										{
											"begin": 15395,
											"end": 15399,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 9972,
											"end": 9982,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "JUMPDEST"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "AND"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "DUP1"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "SWAP1"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "SLOAD"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "SWAP1"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "EXP"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "SWAP1"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "DIV"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "AND"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "AND"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "EQ"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "JUMPI"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MLOAD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP3"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SUB"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP3"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "POP"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "POP"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "POP"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MLOAD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SUB"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "REVERT"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "JUMPDEST"
										},
										{
											"begin": 15407,
											"end": 15434,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 15413,
											"end": 15425,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 15413,
											"end": 15423,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 15413,
											"end": 15425,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15413,
											"end": 15425,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 15413,
											"end": 15425,
											"name": "JUMPDEST"
										},
										{
											"begin": 15427,
											"end": 15433,
											"name": "DUP4"
										},
										{
											"begin": 15407,
											"end": 15412,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 15407,
											"end": 15434,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15407,
											"end": 15434,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 15407,
											"end": 15434,
											"name": "JUMPDEST"
										},
										{
											"begin": 15447,
											"end": 15451,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15440,
											"end": 15451,
											"name": "SWAP1"
										},
										{
											"begin": 15440,
											"end": 15451,
											"name": "POP"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "SWAP2"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "SWAP1"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "POP"
										},
										{
											"begin": 15339,
											"end": 15456,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "JUMPDEST"
										},
										{
											"begin": 14986,
											"end": 14990,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14998,
											"end": 15127,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 15007,
											"end": 15019,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 15007,
											"end": 15017,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 15007,
											"end": 15019,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15007,
											"end": 15019,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 15007,
											"end": 15019,
											"name": "JUMPDEST"
										},
										{
											"begin": 15021,
											"end": 15028,
											"name": "DUP5"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 15069,
											"end": 15084,
											"name": "DUP6"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "MLOAD"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "DUP1"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "ADD"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "MSTORE"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "DUP1"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "DUP2"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "MSTORE"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "ADD"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "PUSH data",
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "SWAP2"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "CODECOPY"
										},
										{
											"begin": 15030,
											"end": 15041,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15030,
											"end": 15055,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15042,
											"end": 15054,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 15042,
											"end": 15052,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 15042,
											"end": 15054,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15042,
											"end": 15054,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 15042,
											"end": 15054,
											"name": "JUMPDEST"
										},
										{
											"begin": 15030,
											"end": 15055,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15030,
											"end": 15055,
											"name": "AND"
										},
										{
											"begin": 15030,
											"end": 15055,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15030,
											"end": 15055,
											"name": "AND"
										},
										{
											"begin": 15030,
											"end": 15055,
											"name": "DUP2"
										},
										{
											"begin": 15030,
											"end": 15055,
											"name": "MSTORE"
										},
										{
											"begin": 15030,
											"end": 15055,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15030,
											"end": 15055,
											"name": "ADD"
										},
										{
											"begin": 15030,
											"end": 15055,
											"name": "SWAP1"
										},
										{
											"begin": 15030,
											"end": 15055,
											"name": "DUP2"
										},
										{
											"begin": 15030,
											"end": 15055,
											"name": "MSTORE"
										},
										{
											"begin": 15030,
											"end": 15055,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15030,
											"end": 15055,
											"name": "ADD"
										},
										{
											"begin": 15030,
											"end": 15055,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15030,
											"end": 15055,
											"name": "KECCAK256"
										},
										{
											"begin": 15030,
											"end": 15064,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15056,
											"end": 15063,
											"name": "DUP11"
										},
										{
											"begin": 15030,
											"end": 15064,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15030,
											"end": 15064,
											"name": "AND"
										},
										{
											"begin": 15030,
											"end": 15064,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15030,
											"end": 15064,
											"name": "AND"
										},
										{
											"begin": 15030,
											"end": 15064,
											"name": "DUP2"
										},
										{
											"begin": 15030,
											"end": 15064,
											"name": "MSTORE"
										},
										{
											"begin": 15030,
											"end": 15064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15030,
											"end": 15064,
											"name": "ADD"
										},
										{
											"begin": 15030,
											"end": 15064,
											"name": "SWAP1"
										},
										{
											"begin": 15030,
											"end": 15064,
											"name": "DUP2"
										},
										{
											"begin": 15030,
											"end": 15064,
											"name": "MSTORE"
										},
										{
											"begin": 15030,
											"end": 15064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15030,
											"end": 15064,
											"name": "ADD"
										},
										{
											"begin": 15030,
											"end": 15064,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15030,
											"end": 15064,
											"name": "KECCAK256"
										},
										{
											"begin": 15030,
											"end": 15064,
											"name": "SLOAD"
										},
										{
											"begin": 15030,
											"end": 15068,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 15030,
											"end": 15068,
											"name": "SWAP1"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "SWAP3"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "SWAP2"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "SWAP1"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "AND"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 15030,
											"end": 15126,
											"name": "JUMPDEST"
										},
										{
											"begin": 14998,
											"end": 15006,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 14998,
											"end": 15127,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14998,
											"end": 15127,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 14998,
											"end": 15127,
											"name": "JUMPDEST"
										},
										{
											"begin": 15140,
											"end": 15144,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15133,
											"end": 15144,
											"name": "SWAP1"
										},
										{
											"begin": 15133,
											"end": 15144,
											"name": "POP"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "SWAP3"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "SWAP2"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "POP"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "POP"
										},
										{
											"begin": 14901,
											"end": 15149,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "JUMPDEST"
										},
										{
											"begin": 12646,
											"end": 12650,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12658,
											"end": 12700,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 12668,
											"end": 12680,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 12668,
											"end": 12678,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 12668,
											"end": 12680,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12668,
											"end": 12680,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 12668,
											"end": 12680,
											"name": "JUMPDEST"
										},
										{
											"begin": 12682,
											"end": 12691,
											"name": "DUP5"
										},
										{
											"begin": 12693,
											"end": 12699,
											"name": "DUP5"
										},
										{
											"begin": 12658,
											"end": 12667,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 12658,
											"end": 12700,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12658,
											"end": 12700,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 12658,
											"end": 12700,
											"name": "JUMPDEST"
										},
										{
											"begin": 12713,
											"end": 12717,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12706,
											"end": 12717,
											"name": "SWAP1"
										},
										{
											"begin": 12706,
											"end": 12717,
											"name": "POP"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "SWAP3"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "SWAP2"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "POP"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "POP"
										},
										{
											"begin": 12575,
											"end": 12722,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "JUMPDEST"
										},
										{
											"begin": 12845,
											"end": 12852,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12867,
											"end": 12878,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12867,
											"end": 12885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12879,
											"end": 12884,
											"name": "DUP5"
										},
										{
											"begin": 12867,
											"end": 12885,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12867,
											"end": 12885,
											"name": "AND"
										},
										{
											"begin": 12867,
											"end": 12885,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12867,
											"end": 12885,
											"name": "AND"
										},
										{
											"begin": 12867,
											"end": 12885,
											"name": "DUP2"
										},
										{
											"begin": 12867,
											"end": 12885,
											"name": "MSTORE"
										},
										{
											"begin": 12867,
											"end": 12885,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12867,
											"end": 12885,
											"name": "ADD"
										},
										{
											"begin": 12867,
											"end": 12885,
											"name": "SWAP1"
										},
										{
											"begin": 12867,
											"end": 12885,
											"name": "DUP2"
										},
										{
											"begin": 12867,
											"end": 12885,
											"name": "MSTORE"
										},
										{
											"begin": 12867,
											"end": 12885,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12867,
											"end": 12885,
											"name": "ADD"
										},
										{
											"begin": 12867,
											"end": 12885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12867,
											"end": 12885,
											"name": "KECCAK256"
										},
										{
											"begin": 12867,
											"end": 12894,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12886,
											"end": 12893,
											"name": "DUP4"
										},
										{
											"begin": 12867,
											"end": 12894,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12867,
											"end": 12894,
											"name": "AND"
										},
										{
											"begin": 12867,
											"end": 12894,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12867,
											"end": 12894,
											"name": "AND"
										},
										{
											"begin": 12867,
											"end": 12894,
											"name": "DUP2"
										},
										{
											"begin": 12867,
											"end": 12894,
											"name": "MSTORE"
										},
										{
											"begin": 12867,
											"end": 12894,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12867,
											"end": 12894,
											"name": "ADD"
										},
										{
											"begin": 12867,
											"end": 12894,
											"name": "SWAP1"
										},
										{
											"begin": 12867,
											"end": 12894,
											"name": "DUP2"
										},
										{
											"begin": 12867,
											"end": 12894,
											"name": "MSTORE"
										},
										{
											"begin": 12867,
											"end": 12894,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12867,
											"end": 12894,
											"name": "ADD"
										},
										{
											"begin": 12867,
											"end": 12894,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12867,
											"end": 12894,
											"name": "KECCAK256"
										},
										{
											"begin": 12867,
											"end": 12894,
											"name": "SLOAD"
										},
										{
											"begin": 12860,
											"end": 12894,
											"name": "SWAP1"
										},
										{
											"begin": 12860,
											"end": 12894,
											"name": "POP"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "SWAP3"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "SWAP2"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "POP"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "POP"
										},
										{
											"begin": 12771,
											"end": 12899,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "JUMPDEST"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 9972,
											"end": 9982,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "JUMPDEST"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "AND"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "DUP1"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "SWAP1"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "SLOAD"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "SWAP1"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "EXP"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "SWAP1"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "DIV"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "AND"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "AND"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "EQ"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "JUMPI"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MLOAD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP3"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SUB"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP3"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "POP"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "POP"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "POP"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MLOAD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SUB"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "REVERT"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "JUMPDEST"
										},
										{
											"begin": 10693,
											"end": 10721,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 10712,
											"end": 10720,
											"name": "DUP2"
										},
										{
											"begin": 10693,
											"end": 10711,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 10693,
											"end": 10721,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10693,
											"end": 10721,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 10693,
											"end": 10721,
											"name": "JUMPDEST"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "POP"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3661,
											"end": 3751,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 3661,
											"end": 3751,
											"name": "JUMPDEST"
										},
										{
											"begin": 3706,
											"end": 3721,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3736,
											"end": 3746,
											"name": "CALLER"
										},
										{
											"begin": 3729,
											"end": 3746,
											"name": "SWAP1"
										},
										{
											"begin": 3729,
											"end": 3746,
											"name": "POP"
										},
										{
											"begin": 3661,
											"end": 3751,
											"name": "SWAP1"
										},
										{
											"begin": 3661,
											"end": 3751,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17892,
											"end": 18206,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 17892,
											"end": 18206,
											"name": "JUMPDEST"
										},
										{
											"begin": 17998,
											"end": 17999,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17981,
											"end": 18000,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17981,
											"end": 18000,
											"name": "AND"
										},
										{
											"begin": 17981,
											"end": 17986,
											"name": "DUP4"
										},
										{
											"begin": 17981,
											"end": 18000,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17981,
											"end": 18000,
											"name": "AND"
										},
										{
											"begin": 17981,
											"end": 18000,
											"name": "EQ"
										},
										{
											"begin": 17981,
											"end": 18000,
											"name": "ISZERO"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "JUMPI"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "MLOAD"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "DUP2"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "MSTORE"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "ADD"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "DUP1"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "DUP1"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "ADD"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "DUP3"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "DUP2"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "SUB"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "DUP3"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "MSTORE"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "DUP2"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "MSTORE"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "ADD"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "DUP1"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "PUSH data",
											"value": "1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "SWAP2"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "CODECOPY"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "ADD"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "SWAP2"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "POP"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "POP"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "MLOAD"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "DUP1"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "SWAP2"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "SUB"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "SWAP1"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "REVERT"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 17973,
											"end": 18041,
											"name": "JUMPDEST"
										},
										{
											"begin": 18074,
											"end": 18075,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18055,
											"end": 18076,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18055,
											"end": 18076,
											"name": "AND"
										},
										{
											"begin": 18055,
											"end": 18062,
											"name": "DUP3"
										},
										{
											"begin": 18055,
											"end": 18076,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18055,
											"end": 18076,
											"name": "AND"
										},
										{
											"begin": 18055,
											"end": 18076,
											"name": "EQ"
										},
										{
											"begin": 18055,
											"end": 18076,
											"name": "ISZERO"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "JUMPI"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "MLOAD"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "DUP2"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "MSTORE"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "ADD"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "DUP1"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "DUP1"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "ADD"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "DUP3"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "DUP2"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "SUB"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "DUP3"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "MSTORE"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "DUP2"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "MSTORE"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "ADD"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "DUP1"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "PUSH data",
											"value": "F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "SWAP2"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "CODECOPY"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "ADD"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "SWAP2"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "POP"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "POP"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "MLOAD"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "DUP1"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "SWAP2"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "SUB"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "SWAP1"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "REVERT"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 18047,
											"end": 18115,
											"name": "JUMPDEST"
										},
										{
											"begin": 18152,
											"end": 18158,
											"name": "DUP1"
										},
										{
											"begin": 18122,
											"end": 18133,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 18122,
											"end": 18140,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18134,
											"end": 18139,
											"name": "DUP6"
										},
										{
											"begin": 18122,
											"end": 18140,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18122,
											"end": 18140,
											"name": "AND"
										},
										{
											"begin": 18122,
											"end": 18140,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18122,
											"end": 18140,
											"name": "AND"
										},
										{
											"begin": 18122,
											"end": 18140,
											"name": "DUP2"
										},
										{
											"begin": 18122,
											"end": 18140,
											"name": "MSTORE"
										},
										{
											"begin": 18122,
											"end": 18140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18122,
											"end": 18140,
											"name": "ADD"
										},
										{
											"begin": 18122,
											"end": 18140,
											"name": "SWAP1"
										},
										{
											"begin": 18122,
											"end": 18140,
											"name": "DUP2"
										},
										{
											"begin": 18122,
											"end": 18140,
											"name": "MSTORE"
										},
										{
											"begin": 18122,
											"end": 18140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18122,
											"end": 18140,
											"name": "ADD"
										},
										{
											"begin": 18122,
											"end": 18140,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18122,
											"end": 18140,
											"name": "KECCAK256"
										},
										{
											"begin": 18122,
											"end": 18149,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18141,
											"end": 18148,
											"name": "DUP5"
										},
										{
											"begin": 18122,
											"end": 18149,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18122,
											"end": 18149,
											"name": "AND"
										},
										{
											"begin": 18122,
											"end": 18149,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18122,
											"end": 18149,
											"name": "AND"
										},
										{
											"begin": 18122,
											"end": 18149,
											"name": "DUP2"
										},
										{
											"begin": 18122,
											"end": 18149,
											"name": "MSTORE"
										},
										{
											"begin": 18122,
											"end": 18149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18122,
											"end": 18149,
											"name": "ADD"
										},
										{
											"begin": 18122,
											"end": 18149,
											"name": "SWAP1"
										},
										{
											"begin": 18122,
											"end": 18149,
											"name": "DUP2"
										},
										{
											"begin": 18122,
											"end": 18149,
											"name": "MSTORE"
										},
										{
											"begin": 18122,
											"end": 18149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18122,
											"end": 18149,
											"name": "ADD"
										},
										{
											"begin": 18122,
											"end": 18149,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18122,
											"end": 18149,
											"name": "KECCAK256"
										},
										{
											"begin": 18122,
											"end": 18158,
											"name": "DUP2"
										},
										{
											"begin": 18122,
											"end": 18158,
											"name": "SWAP1"
										},
										{
											"begin": 18122,
											"end": 18158,
											"name": "SSTORE"
										},
										{
											"begin": 18122,
											"end": 18158,
											"name": "POP"
										},
										{
											"begin": 18185,
											"end": 18192,
											"name": "DUP2"
										},
										{
											"begin": 18169,
											"end": 18201,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18169,
											"end": 18201,
											"name": "AND"
										},
										{
											"begin": 18178,
											"end": 18183,
											"name": "DUP4"
										},
										{
											"begin": 18169,
											"end": 18201,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18169,
											"end": 18201,
											"name": "AND"
										},
										{
											"begin": 18169,
											"end": 18201,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 18194,
											"end": 18200,
											"name": "DUP4"
										},
										{
											"begin": 18169,
											"end": 18201,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18169,
											"end": 18201,
											"name": "MLOAD"
										},
										{
											"begin": 18169,
											"end": 18201,
											"name": "DUP1"
										},
										{
											"begin": 18169,
											"end": 18201,
											"name": "DUP3"
										},
										{
											"begin": 18169,
											"end": 18201,
											"name": "DUP2"
										},
										{
											"begin": 18169,
											"end": 18201,
											"name": "MSTORE"
										},
										{
											"begin": 18169,
											"end": 18201,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18169,
											"end": 18201,
											"name": "ADD"
										},
										{
											"begin": 18169,
											"end": 18201,
											"name": "SWAP2"
										},
										{
											"begin": 18169,
											"end": 18201,
											"name": "POP"
										},
										{
											"begin": 18169,
											"end": 18201,
											"name": "POP"
										},
										{
											"begin": 18169,
											"end": 18201,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18169,
											"end": 18201,
											"name": "MLOAD"
										},
										{
											"begin": 18169,
											"end": 18201,
											"name": "DUP1"
										},
										{
											"begin": 18169,
											"end": 18201,
											"name": "SWAP2"
										},
										{
											"begin": 18169,
											"end": 18201,
											"name": "SUB"
										},
										{
											"begin": 18169,
											"end": 18201,
											"name": "SWAP1"
										},
										{
											"begin": 18169,
											"end": 18201,
											"name": "LOG3"
										},
										{
											"begin": 17892,
											"end": 18206,
											"name": "POP"
										},
										{
											"begin": 17892,
											"end": 18206,
											"name": "POP"
										},
										{
											"begin": 17892,
											"end": 18206,
											"name": "POP"
										},
										{
											"begin": 17892,
											"end": 18206,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15900,
											"end": 16342,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 15900,
											"end": 16342,
											"name": "JUMPDEST"
										},
										{
											"begin": 16011,
											"end": 16012,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15993,
											"end": 16013,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15993,
											"end": 16013,
											"name": "AND"
										},
										{
											"begin": 15993,
											"end": 15999,
											"name": "DUP4"
										},
										{
											"begin": 15993,
											"end": 16013,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15993,
											"end": 16013,
											"name": "AND"
										},
										{
											"begin": 15993,
											"end": 16013,
											"name": "EQ"
										},
										{
											"begin": 15993,
											"end": 16013,
											"name": "ISZERO"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "JUMPI"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "MLOAD"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "DUP2"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "MSTORE"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "ADD"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "DUP1"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "DUP1"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "ADD"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "DUP3"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "DUP2"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "SUB"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "DUP3"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "MSTORE"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "DUP2"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "MSTORE"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "ADD"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "DUP1"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "PUSH data",
											"value": "D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "SWAP2"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "CODECOPY"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "ADD"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "SWAP2"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "POP"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "POP"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "MLOAD"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "DUP1"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "SWAP2"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "SUB"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "SWAP1"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "REVERT"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 15985,
											"end": 16055,
											"name": "JUMPDEST"
										},
										{
											"begin": 16090,
											"end": 16091,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16069,
											"end": 16092,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16069,
											"end": 16092,
											"name": "AND"
										},
										{
											"begin": 16069,
											"end": 16078,
											"name": "DUP3"
										},
										{
											"begin": 16069,
											"end": 16092,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16069,
											"end": 16092,
											"name": "AND"
										},
										{
											"begin": 16069,
											"end": 16092,
											"name": "EQ"
										},
										{
											"begin": 16069,
											"end": 16092,
											"name": "ISZERO"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "JUMPI"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "MLOAD"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "DUP2"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "MSTORE"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "ADD"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "DUP1"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "DUP1"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "ADD"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "DUP3"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "DUP2"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "SUB"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "DUP3"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "MSTORE"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "DUP2"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "MSTORE"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "ADD"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "DUP1"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "PUSH data",
											"value": "ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "SWAP2"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "CODECOPY"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "ADD"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "SWAP2"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "POP"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "POP"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "MLOAD"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "DUP1"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "SWAP2"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "SUB"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "SWAP1"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "REVERT"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 16061,
											"end": 16132,
											"name": "JUMPDEST"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 16181,
											"end": 16187,
											"name": "DUP2"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "MLOAD"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "DUP1"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "ADD"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "MSTORE"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "DUP1"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "DUP2"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "MSTORE"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "ADD"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "PUSH data",
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "SWAP2"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "CODECOPY"
										},
										{
											"begin": 16159,
											"end": 16168,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16159,
											"end": 16176,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16169,
											"end": 16175,
											"name": "DUP8"
										},
										{
											"begin": 16159,
											"end": 16176,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16159,
											"end": 16176,
											"name": "AND"
										},
										{
											"begin": 16159,
											"end": 16176,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16159,
											"end": 16176,
											"name": "AND"
										},
										{
											"begin": 16159,
											"end": 16176,
											"name": "DUP2"
										},
										{
											"begin": 16159,
											"end": 16176,
											"name": "MSTORE"
										},
										{
											"begin": 16159,
											"end": 16176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16159,
											"end": 16176,
											"name": "ADD"
										},
										{
											"begin": 16159,
											"end": 16176,
											"name": "SWAP1"
										},
										{
											"begin": 16159,
											"end": 16176,
											"name": "DUP2"
										},
										{
											"begin": 16159,
											"end": 16176,
											"name": "MSTORE"
										},
										{
											"begin": 16159,
											"end": 16176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16159,
											"end": 16176,
											"name": "ADD"
										},
										{
											"begin": 16159,
											"end": 16176,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16159,
											"end": 16176,
											"name": "KECCAK256"
										},
										{
											"begin": 16159,
											"end": 16176,
											"name": "SLOAD"
										},
										{
											"begin": 16159,
											"end": 16180,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 16159,
											"end": 16180,
											"name": "SWAP1"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "SWAP3"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "SWAP2"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "SWAP1"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "AND"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 16159,
											"end": 16230,
											"name": "JUMPDEST"
										},
										{
											"begin": 16139,
											"end": 16148,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16139,
											"end": 16156,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16149,
											"end": 16155,
											"name": "DUP6"
										},
										{
											"begin": 16139,
											"end": 16156,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16139,
											"end": 16156,
											"name": "AND"
										},
										{
											"begin": 16139,
											"end": 16156,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16139,
											"end": 16156,
											"name": "AND"
										},
										{
											"begin": 16139,
											"end": 16156,
											"name": "DUP2"
										},
										{
											"begin": 16139,
											"end": 16156,
											"name": "MSTORE"
										},
										{
											"begin": 16139,
											"end": 16156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16139,
											"end": 16156,
											"name": "ADD"
										},
										{
											"begin": 16139,
											"end": 16156,
											"name": "SWAP1"
										},
										{
											"begin": 16139,
											"end": 16156,
											"name": "DUP2"
										},
										{
											"begin": 16139,
											"end": 16156,
											"name": "MSTORE"
										},
										{
											"begin": 16139,
											"end": 16156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16139,
											"end": 16156,
											"name": "ADD"
										},
										{
											"begin": 16139,
											"end": 16156,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16139,
											"end": 16156,
											"name": "KECCAK256"
										},
										{
											"begin": 16139,
											"end": 16230,
											"name": "DUP2"
										},
										{
											"begin": 16139,
											"end": 16230,
											"name": "SWAP1"
										},
										{
											"begin": 16139,
											"end": 16230,
											"name": "SSTORE"
										},
										{
											"begin": 16139,
											"end": 16230,
											"name": "POP"
										},
										{
											"begin": 16259,
											"end": 16291,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 16284,
											"end": 16290,
											"name": "DUP2"
										},
										{
											"begin": 16259,
											"end": 16268,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16259,
											"end": 16279,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16269,
											"end": 16278,
											"name": "DUP6"
										},
										{
											"begin": 16259,
											"end": 16279,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16259,
											"end": 16279,
											"name": "AND"
										},
										{
											"begin": 16259,
											"end": 16279,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16259,
											"end": 16279,
											"name": "AND"
										},
										{
											"begin": 16259,
											"end": 16279,
											"name": "DUP2"
										},
										{
											"begin": 16259,
											"end": 16279,
											"name": "MSTORE"
										},
										{
											"begin": 16259,
											"end": 16279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16259,
											"end": 16279,
											"name": "ADD"
										},
										{
											"begin": 16259,
											"end": 16279,
											"name": "SWAP1"
										},
										{
											"begin": 16259,
											"end": 16279,
											"name": "DUP2"
										},
										{
											"begin": 16259,
											"end": 16279,
											"name": "MSTORE"
										},
										{
											"begin": 16259,
											"end": 16279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16259,
											"end": 16279,
											"name": "ADD"
										},
										{
											"begin": 16259,
											"end": 16279,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16259,
											"end": 16279,
											"name": "KECCAK256"
										},
										{
											"begin": 16259,
											"end": 16279,
											"name": "SLOAD"
										},
										{
											"begin": 16259,
											"end": 16283,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 16259,
											"end": 16283,
											"name": "SWAP1"
										},
										{
											"begin": 16259,
											"end": 16291,
											"name": "SWAP2"
										},
										{
											"begin": 16259,
											"end": 16291,
											"name": "SWAP1"
										},
										{
											"begin": 16259,
											"end": 16291,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16259,
											"end": 16291,
											"name": "AND"
										},
										{
											"begin": 16259,
											"end": 16291,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16259,
											"end": 16291,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 16259,
											"end": 16291,
											"name": "JUMPDEST"
										},
										{
											"begin": 16236,
											"end": 16245,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16236,
											"end": 16256,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16246,
											"end": 16255,
											"name": "DUP5"
										},
										{
											"begin": 16236,
											"end": 16256,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16236,
											"end": 16256,
											"name": "AND"
										},
										{
											"begin": 16236,
											"end": 16256,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16236,
											"end": 16256,
											"name": "AND"
										},
										{
											"begin": 16236,
											"end": 16256,
											"name": "DUP2"
										},
										{
											"begin": 16236,
											"end": 16256,
											"name": "MSTORE"
										},
										{
											"begin": 16236,
											"end": 16256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16236,
											"end": 16256,
											"name": "ADD"
										},
										{
											"begin": 16236,
											"end": 16256,
											"name": "SWAP1"
										},
										{
											"begin": 16236,
											"end": 16256,
											"name": "DUP2"
										},
										{
											"begin": 16236,
											"end": 16256,
											"name": "MSTORE"
										},
										{
											"begin": 16236,
											"end": 16256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16236,
											"end": 16256,
											"name": "ADD"
										},
										{
											"begin": 16236,
											"end": 16256,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16236,
											"end": 16256,
											"name": "KECCAK256"
										},
										{
											"begin": 16236,
											"end": 16291,
											"name": "DUP2"
										},
										{
											"begin": 16236,
											"end": 16291,
											"name": "SWAP1"
										},
										{
											"begin": 16236,
											"end": 16291,
											"name": "SSTORE"
										},
										{
											"begin": 16236,
											"end": 16291,
											"name": "POP"
										},
										{
											"begin": 16319,
											"end": 16328,
											"name": "DUP2"
										},
										{
											"begin": 16302,
											"end": 16337,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16302,
											"end": 16337,
											"name": "AND"
										},
										{
											"begin": 16311,
											"end": 16317,
											"name": "DUP4"
										},
										{
											"begin": 16302,
											"end": 16337,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16302,
											"end": 16337,
											"name": "AND"
										},
										{
											"begin": 16302,
											"end": 16337,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16330,
											"end": 16336,
											"name": "DUP4"
										},
										{
											"begin": 16302,
											"end": 16337,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16302,
											"end": 16337,
											"name": "MLOAD"
										},
										{
											"begin": 16302,
											"end": 16337,
											"name": "DUP1"
										},
										{
											"begin": 16302,
											"end": 16337,
											"name": "DUP3"
										},
										{
											"begin": 16302,
											"end": 16337,
											"name": "DUP2"
										},
										{
											"begin": 16302,
											"end": 16337,
											"name": "MSTORE"
										},
										{
											"begin": 16302,
											"end": 16337,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16302,
											"end": 16337,
											"name": "ADD"
										},
										{
											"begin": 16302,
											"end": 16337,
											"name": "SWAP2"
										},
										{
											"begin": 16302,
											"end": 16337,
											"name": "POP"
										},
										{
											"begin": 16302,
											"end": 16337,
											"name": "POP"
										},
										{
											"begin": 16302,
											"end": 16337,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16302,
											"end": 16337,
											"name": "MLOAD"
										},
										{
											"begin": 16302,
											"end": 16337,
											"name": "DUP1"
										},
										{
											"begin": 16302,
											"end": 16337,
											"name": "SWAP2"
										},
										{
											"begin": 16302,
											"end": 16337,
											"name": "SUB"
										},
										{
											"begin": 16302,
											"end": 16337,
											"name": "SWAP1"
										},
										{
											"begin": 16302,
											"end": 16337,
											"name": "LOG3"
										},
										{
											"begin": 15900,
											"end": 16342,
											"name": "POP"
										},
										{
											"begin": 15900,
											"end": 16342,
											"name": "POP"
										},
										{
											"begin": 15900,
											"end": 16342,
											"name": "POP"
										},
										{
											"begin": 15900,
											"end": 16342,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5558,
											"end": 5731,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 5558,
											"end": 5731,
											"name": "JUMPDEST"
										},
										{
											"begin": 5644,
											"end": 5651,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5672,
											"end": 5673,
											"name": "DUP4"
										},
										{
											"begin": 5667,
											"end": 5668,
											"name": "DUP4"
										},
										{
											"begin": 5667,
											"end": 5673,
											"name": "GT"
										},
										{
											"begin": 5667,
											"end": 5673,
											"name": "ISZERO"
										},
										{
											"begin": 5675,
											"end": 5687,
											"name": "DUP3"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SWAP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "JUMPI"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "MLOAD"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP2"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "MSTORE"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "ADD"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "ADD"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP3"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP2"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SUB"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP3"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "MSTORE"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP4"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP2"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP2"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "MLOAD"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP2"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "MSTORE"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "ADD"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SWAP2"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "POP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "MLOAD"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SWAP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "ADD"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SWAP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP4"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "POP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "POP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "POP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SWAP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "POP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SWAP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP2"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "ADD"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SWAP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "AND"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "ISZERO"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "JUMPI"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP3"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SUB"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "MLOAD"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP4"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SUB"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "EXP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SUB"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "NOT"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "AND"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP2"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "MSTORE"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "ADD"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SWAP2"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "POP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "JUMPDEST"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "POP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SWAP3"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "POP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "POP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "POP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "MLOAD"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SWAP2"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SUB"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SWAP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "REVERT"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "JUMPDEST"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "POP"
										},
										{
											"begin": 5694,
											"end": 5703,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5710,
											"end": 5711,
											"name": "DUP4"
										},
										{
											"begin": 5706,
											"end": 5707,
											"name": "DUP6"
										},
										{
											"begin": 5706,
											"end": 5711,
											"name": "SUB"
										},
										{
											"begin": 5694,
											"end": 5711,
											"name": "SWAP1"
										},
										{
											"begin": 5694,
											"end": 5711,
											"name": "POP"
										},
										{
											"begin": 5725,
											"end": 5726,
											"name": "DUP1"
										},
										{
											"begin": 5718,
											"end": 5726,
											"name": "SWAP2"
										},
										{
											"begin": 5718,
											"end": 5726,
											"name": "POP"
										},
										{
											"begin": 5718,
											"end": 5726,
											"name": "POP"
										},
										{
											"begin": 5558,
											"end": 5731,
											"name": "SWAP4"
										},
										{
											"begin": 5558,
											"end": 5731,
											"name": "SWAP3"
										},
										{
											"begin": 5558,
											"end": 5731,
											"name": "POP"
										},
										{
											"begin": 5558,
											"end": 5731,
											"name": "POP"
										},
										{
											"begin": 5558,
											"end": 5731,
											"name": "POP"
										},
										{
											"begin": 5558,
											"end": 5731,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4760,
											"end": 4922,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 4760,
											"end": 4922,
											"name": "JUMPDEST"
										},
										{
											"begin": 4818,
											"end": 4825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4842,
											"name": "DUP1"
										},
										{
											"begin": 4849,
											"end": 4850,
											"name": "DUP3"
										},
										{
											"begin": 4845,
											"end": 4846,
											"name": "DUP5"
										},
										{
											"begin": 4845,
											"end": 4850,
											"name": "ADD"
										},
										{
											"begin": 4833,
											"end": 4850,
											"name": "SWAP1"
										},
										{
											"begin": 4833,
											"end": 4850,
											"name": "POP"
										},
										{
											"begin": 4869,
											"end": 4870,
											"name": "DUP4"
										},
										{
											"begin": 4864,
											"end": 4865,
											"name": "DUP2"
										},
										{
											"begin": 4864,
											"end": 4870,
											"name": "LT"
										},
										{
											"begin": 4864,
											"end": 4870,
											"name": "ISZERO"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "JUMPI"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "MLOAD"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "DUP2"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "MSTORE"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "ADD"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "DUP1"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "DUP1"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "ADD"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "DUP3"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "DUP2"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "SUB"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "DUP3"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "MSTORE"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "DUP2"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "MSTORE"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "ADD"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "DUP1"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "DUP2"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "MSTORE"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "POP"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "ADD"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "SWAP2"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "POP"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "POP"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "MLOAD"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "DUP1"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "SWAP2"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "SUB"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "SWAP1"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "REVERT"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "JUMPDEST"
										},
										{
											"begin": 4916,
											"end": 4917,
											"name": "DUP1"
										},
										{
											"begin": 4909,
											"end": 4917,
											"name": "SWAP2"
										},
										{
											"begin": 4909,
											"end": 4917,
											"name": "POP"
										},
										{
											"begin": 4909,
											"end": 4917,
											"name": "POP"
										},
										{
											"begin": 4760,
											"end": 4922,
											"name": "SWAP3"
										},
										{
											"begin": 4760,
											"end": 4922,
											"name": "SWAP2"
										},
										{
											"begin": 4760,
											"end": 4922,
											"name": "POP"
										},
										{
											"begin": 4760,
											"end": 4922,
											"name": "POP"
										},
										{
											"begin": 4760,
											"end": 4922,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16592,
											"end": 16876,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 16592,
											"end": 16876,
											"name": "JUMPDEST"
										},
										{
											"begin": 16682,
											"end": 16683,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16663,
											"end": 16684,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16663,
											"end": 16684,
											"name": "AND"
										},
										{
											"begin": 16663,
											"end": 16670,
											"name": "DUP3"
										},
										{
											"begin": 16663,
											"end": 16684,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16663,
											"end": 16684,
											"name": "AND"
										},
										{
											"begin": 16663,
											"end": 16684,
											"name": "EQ"
										},
										{
											"begin": 16663,
											"end": 16684,
											"name": "ISZERO"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "JUMPI"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "MLOAD"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "DUP2"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "MSTORE"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "ADD"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "DUP1"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "DUP1"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "ADD"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "DUP3"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "DUP2"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "SUB"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "DUP3"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "MSTORE"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "DUP2"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "MSTORE"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "ADD"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "DUP1"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "PUSH",
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "DUP2"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "MSTORE"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "POP"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "ADD"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "SWAP2"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "POP"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "POP"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "MLOAD"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "DUP1"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "SWAP2"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "SUB"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "SWAP1"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "REVERT"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 16655,
											"end": 16720,
											"name": "JUMPDEST"
										},
										{
											"begin": 16742,
											"end": 16766,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 16759,
											"end": 16765,
											"name": "DUP2"
										},
										{
											"begin": 16742,
											"end": 16754,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 16742,
											"end": 16754,
											"name": "SLOAD"
										},
										{
											"begin": 16742,
											"end": 16758,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 16742,
											"end": 16758,
											"name": "SWAP1"
										},
										{
											"begin": 16742,
											"end": 16766,
											"name": "SWAP2"
										},
										{
											"begin": 16742,
											"end": 16766,
											"name": "SWAP1"
										},
										{
											"begin": 16742,
											"end": 16766,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16742,
											"end": 16766,
											"name": "AND"
										},
										{
											"begin": 16742,
											"end": 16766,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16742,
											"end": 16766,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 16742,
											"end": 16766,
											"name": "JUMPDEST"
										},
										{
											"begin": 16727,
											"end": 16739,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 16727,
											"end": 16766,
											"name": "DUP2"
										},
										{
											"begin": 16727,
											"end": 16766,
											"name": "SWAP1"
										},
										{
											"begin": 16727,
											"end": 16766,
											"name": "SSTORE"
										},
										{
											"begin": 16727,
											"end": 16766,
											"name": "POP"
										},
										{
											"begin": 16793,
											"end": 16823,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 16816,
											"end": 16822,
											"name": "DUP2"
										},
										{
											"begin": 16793,
											"end": 16802,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16793,
											"end": 16811,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16803,
											"end": 16810,
											"name": "DUP6"
										},
										{
											"begin": 16793,
											"end": 16811,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16793,
											"end": 16811,
											"name": "AND"
										},
										{
											"begin": 16793,
											"end": 16811,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16793,
											"end": 16811,
											"name": "AND"
										},
										{
											"begin": 16793,
											"end": 16811,
											"name": "DUP2"
										},
										{
											"begin": 16793,
											"end": 16811,
											"name": "MSTORE"
										},
										{
											"begin": 16793,
											"end": 16811,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16793,
											"end": 16811,
											"name": "ADD"
										},
										{
											"begin": 16793,
											"end": 16811,
											"name": "SWAP1"
										},
										{
											"begin": 16793,
											"end": 16811,
											"name": "DUP2"
										},
										{
											"begin": 16793,
											"end": 16811,
											"name": "MSTORE"
										},
										{
											"begin": 16793,
											"end": 16811,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16793,
											"end": 16811,
											"name": "ADD"
										},
										{
											"begin": 16793,
											"end": 16811,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16793,
											"end": 16811,
											"name": "KECCAK256"
										},
										{
											"begin": 16793,
											"end": 16811,
											"name": "SLOAD"
										},
										{
											"begin": 16793,
											"end": 16815,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 16793,
											"end": 16815,
											"name": "SWAP1"
										},
										{
											"begin": 16793,
											"end": 16823,
											"name": "SWAP2"
										},
										{
											"begin": 16793,
											"end": 16823,
											"name": "SWAP1"
										},
										{
											"begin": 16793,
											"end": 16823,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16793,
											"end": 16823,
											"name": "AND"
										},
										{
											"begin": 16793,
											"end": 16823,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16793,
											"end": 16823,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 16793,
											"end": 16823,
											"name": "JUMPDEST"
										},
										{
											"begin": 16772,
											"end": 16781,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16772,
											"end": 16790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16782,
											"end": 16789,
											"name": "DUP5"
										},
										{
											"begin": 16772,
											"end": 16790,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16772,
											"end": 16790,
											"name": "AND"
										},
										{
											"begin": 16772,
											"end": 16790,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16772,
											"end": 16790,
											"name": "AND"
										},
										{
											"begin": 16772,
											"end": 16790,
											"name": "DUP2"
										},
										{
											"begin": 16772,
											"end": 16790,
											"name": "MSTORE"
										},
										{
											"begin": 16772,
											"end": 16790,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16772,
											"end": 16790,
											"name": "ADD"
										},
										{
											"begin": 16772,
											"end": 16790,
											"name": "SWAP1"
										},
										{
											"begin": 16772,
											"end": 16790,
											"name": "DUP2"
										},
										{
											"begin": 16772,
											"end": 16790,
											"name": "MSTORE"
										},
										{
											"begin": 16772,
											"end": 16790,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16772,
											"end": 16790,
											"name": "ADD"
										},
										{
											"begin": 16772,
											"end": 16790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16772,
											"end": 16790,
											"name": "KECCAK256"
										},
										{
											"begin": 16772,
											"end": 16823,
											"name": "DUP2"
										},
										{
											"begin": 16772,
											"end": 16823,
											"name": "SWAP1"
										},
										{
											"begin": 16772,
											"end": 16823,
											"name": "SSTORE"
										},
										{
											"begin": 16772,
											"end": 16823,
											"name": "POP"
										},
										{
											"begin": 16855,
											"end": 16862,
											"name": "DUP2"
										},
										{
											"begin": 16834,
											"end": 16871,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16834,
											"end": 16871,
											"name": "AND"
										},
										{
											"begin": 16851,
											"end": 16852,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16834,
											"end": 16871,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16834,
											"end": 16871,
											"name": "AND"
										},
										{
											"begin": 16834,
											"end": 16871,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16864,
											"end": 16870,
											"name": "DUP4"
										},
										{
											"begin": 16834,
											"end": 16871,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16834,
											"end": 16871,
											"name": "MLOAD"
										},
										{
											"begin": 16834,
											"end": 16871,
											"name": "DUP1"
										},
										{
											"begin": 16834,
											"end": 16871,
											"name": "DUP3"
										},
										{
											"begin": 16834,
											"end": 16871,
											"name": "DUP2"
										},
										{
											"begin": 16834,
											"end": 16871,
											"name": "MSTORE"
										},
										{
											"begin": 16834,
											"end": 16871,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16834,
											"end": 16871,
											"name": "ADD"
										},
										{
											"begin": 16834,
											"end": 16871,
											"name": "SWAP2"
										},
										{
											"begin": 16834,
											"end": 16871,
											"name": "POP"
										},
										{
											"begin": 16834,
											"end": 16871,
											"name": "POP"
										},
										{
											"begin": 16834,
											"end": 16871,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16834,
											"end": 16871,
											"name": "MLOAD"
										},
										{
											"begin": 16834,
											"end": 16871,
											"name": "DUP1"
										},
										{
											"begin": 16834,
											"end": 16871,
											"name": "SWAP2"
										},
										{
											"begin": 16834,
											"end": 16871,
											"name": "SUB"
										},
										{
											"begin": 16834,
											"end": 16871,
											"name": "SWAP1"
										},
										{
											"begin": 16834,
											"end": 16871,
											"name": "LOG3"
										},
										{
											"begin": 16592,
											"end": 16876,
											"name": "POP"
										},
										{
											"begin": 16592,
											"end": 16876,
											"name": "POP"
										},
										{
											"begin": 16592,
											"end": 16876,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10819,
											"end": 11030,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 10819,
											"end": 11030,
											"name": "JUMPDEST"
										},
										{
											"begin": 10908,
											"end": 10909,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10888,
											"end": 10910,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10888,
											"end": 10910,
											"name": "AND"
										},
										{
											"begin": 10888,
											"end": 10896,
											"name": "DUP2"
										},
										{
											"begin": 10888,
											"end": 10910,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10888,
											"end": 10910,
											"name": "AND"
										},
										{
											"begin": 10888,
											"end": 10910,
											"name": "EQ"
										},
										{
											"begin": 10888,
											"end": 10910,
											"name": "ISZERO"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "JUMPI"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "MLOAD"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "DUP2"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "MSTORE"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "ADD"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "DUP1"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "DUP1"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "ADD"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "DUP3"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "DUP2"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "SUB"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "DUP3"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "MSTORE"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "DUP2"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "MSTORE"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "ADD"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "DUP1"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "SWAP2"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "CODECOPY"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "ADD"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "SWAP2"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "POP"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "POP"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "MLOAD"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "DUP1"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "SWAP2"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "SUB"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "SWAP1"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "REVERT"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "JUMPDEST"
										},
										{
											"begin": 10993,
											"end": 11001,
											"name": "DUP1"
										},
										{
											"begin": 10964,
											"end": 11002,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10964,
											"end": 11002,
											"name": "AND"
										},
										{
											"begin": 10985,
											"end": 10991,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10985,
											"end": 10991,
											"name": "DUP1"
										},
										{
											"begin": 10985,
											"end": 10991,
											"name": "SWAP1"
										},
										{
											"begin": 10985,
											"end": 10991,
											"name": "SLOAD"
										},
										{
											"begin": 10985,
											"end": 10991,
											"name": "SWAP1"
										},
										{
											"begin": 10985,
											"end": 10991,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10985,
											"end": 10991,
											"name": "EXP"
										},
										{
											"begin": 10985,
											"end": 10991,
											"name": "SWAP1"
										},
										{
											"begin": 10985,
											"end": 10991,
											"name": "DIV"
										},
										{
											"begin": 10985,
											"end": 10991,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10985,
											"end": 10991,
											"name": "AND"
										},
										{
											"begin": 10964,
											"end": 11002,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10964,
											"end": 11002,
											"name": "AND"
										},
										{
											"begin": 10964,
											"end": 11002,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10964,
											"end": 11002,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10964,
											"end": 11002,
											"name": "MLOAD"
										},
										{
											"begin": 10964,
											"end": 11002,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10964,
											"end": 11002,
											"name": "MLOAD"
										},
										{
											"begin": 10964,
											"end": 11002,
											"name": "DUP1"
										},
										{
											"begin": 10964,
											"end": 11002,
											"name": "SWAP2"
										},
										{
											"begin": 10964,
											"end": 11002,
											"name": "SUB"
										},
										{
											"begin": 10964,
											"end": 11002,
											"name": "SWAP1"
										},
										{
											"begin": 10964,
											"end": 11002,
											"name": "LOG3"
										},
										{
											"begin": 11017,
											"end": 11025,
											"name": "DUP1"
										},
										{
											"begin": 11008,
											"end": 11014,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11008,
											"end": 11014,
											"name": "DUP1"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "EXP"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "DUP2"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "SLOAD"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "DUP2"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "MUL"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "NOT"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "AND"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "SWAP1"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "DUP4"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "AND"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "MUL"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "OR"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "SWAP1"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "SSTORE"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "POP"
										},
										{
											"begin": 10819,
											"end": 11030,
											"name": "POP"
										},
										{
											"begin": 10819,
											"end": 11030,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}.   * Requirements:   * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.   * Requirements   * - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}.   * Requirements:   * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}.   * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};   * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/smctoken18.sol\":\"Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/smctoken18.sol\":{\"keccak256\":\"0x8b425ae86fabe5f57d53239b1ab87677b0d89dee209680848d97d136431f8221\",\"urls\":[\"bzz-raw://a65dce80b9d14dec5bb07812d52bab8fce1987c7c3f997a6885a84fb4e9004a5\",\"dweb:/ipfs/QmVsDALxGj3hisc46sYQnvqJo9Bo3kNKSvVyKcNBe6Whnp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "contracts/smctoken18.sol:Token",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 417,
								"contract": "contracts/smctoken18.sol:Token",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 423,
								"contract": "contracts/smctoken18.sol:Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 425,
								"contract": "contracts/smctoken18.sol:Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 427,
								"contract": "contracts/smctoken18.sol:Token",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 429,
								"contract": "contracts/smctoken18.sol:Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 431,
								"contract": "contracts/smctoken18.sol:Token",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/smctoken18.sol": {
				"ast": {
					"absolutePath": "contracts/smctoken18.sol",
					"exportedSymbols": {
						"Context": [
							113
						],
						"IBEP20": [
							88
						],
						"Ownable": [
							404
						],
						"SafeMath": [
							298
						],
						"Token": [
							903
						]
					},
					"id": 904,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "66:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "197:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "223:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "222:9:0"
									},
									"scope": 88,
									"src": "177:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token decimals.",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "329:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 8,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "329:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "328:7:0"
									},
									"scope": 88,
									"src": "286:50:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token symbol.",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "403:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "429:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "429:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "428:15:0"
									},
									"scope": 88,
									"src": "388:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token name.",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "505:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "531:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "531:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "530:15:0"
									},
									"scope": 88,
									"src": "492:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the bep token owner.",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "618:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "644:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "643:9:0"
									},
									"scope": 88,
									"src": "601:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "747:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "746:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "787:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "786:9:0"
									},
									"scope": 88,
									"src": "728:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1018:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1037:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1037:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1017:35:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1071:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1071:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1070:6:0"
									},
									"scope": 88,
									"src": "1000:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n   * This value changes when {approve} or {transferFrom} are called.",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1355:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1371:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1371:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1354:33:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1411:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1410:9:0"
									},
									"scope": 88,
									"src": "1336:84:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * Emits an {Approval} event.",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2060:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2077:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2059:33:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2111:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 57,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2111:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2110:6:0"
									},
									"scope": 88,
									"src": "2043:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2426:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2442:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2461:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2425:51:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2495:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2495:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2494:6:0"
									},
									"scope": 88,
									"src": "2404:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n   * Note that `value` may be zero.",
									"id": 79,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2671:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2671:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2693:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2713:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2670:57:0"
									},
									"src": "2656:72:0"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 87,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2892:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2915:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2940:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2891:63:0"
									},
									"src": "2877:78:0"
								}
							],
							"scope": 904,
							"src": "91:2866:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3654:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3642:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3654:0:0"
									},
									"scope": 113,
									"src": "3630:27:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "3723:28:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 97,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "3736:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3736:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 96,
												"id": 99,
												"nodeType": "Return",
												"src": "3729:17:0"
											}
										]
									},
									"documentation": null,
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3680:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3706:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3706:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3705:17:0"
									},
									"scope": 113,
									"src": "3661:90:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "3812:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 934,
													"src": "3818:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$113",
														"typeString": "contract Context"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "3818:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 108,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "3954:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3954:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 105,
												"id": 110,
												"nodeType": "Return",
												"src": "3947:15:0"
											}
										]
									},
									"documentation": null,
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3772:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3798:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3798:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3797:14:0"
									},
									"scope": 113,
									"src": "3755:212:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 904,
							"src": "3459:510:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "4827:95:0",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "4833:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4833:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 127,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "4845:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 125,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "4849:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4845:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4833:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 129,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "4864:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 130,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "4869:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4864:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4872:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															922
														],
														"referencedDeclaration": 922,
														"src": "4856:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4856:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4856:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 135,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "4916:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 121,
												"id": 136,
												"nodeType": "Return",
												"src": "4909:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `+` operator.\n   * Requirements:\n- Addition cannot overflow.",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4773:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4773:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4784:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4784:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4772:22:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4818:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4817:9:0"
									},
									"scope": 298,
									"src": "4760:162:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "5233:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 148,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5250:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 149,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5253:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 147,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															154,
															181
														],
														"referencedDeclaration": 181,
														"src": "5246:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5246:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 146,
												"id": 152,
												"nodeType": "Return",
												"src": "5239:50:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5179:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5179:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5190:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5178:22:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5224:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5223:9:0"
									},
									"scope": 298,
									"src": "5166:128:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5653:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 166,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "5667:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 167,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "5672:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5667:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 169,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5675:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															922
														],
														"referencedDeclaration": 922,
														"src": "5659:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5659:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "5659:29:0"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5694:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5694:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "5706:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "5710:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5706:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5694:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "5725:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 179,
												"nodeType": "Return",
												"src": "5718:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5571:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5571:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5582:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5582:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5593:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5593:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5570:50:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5644:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5644:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5643:9:0"
									},
									"scope": 298,
									"src": "5558:173:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "6018:352:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6234:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6239:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6234:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 196,
												"nodeType": "IfStatement",
												"src": "6230:35:0",
												"trueBody": {
													"id": 195,
													"nodeType": "Block",
													"src": "6242:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6257:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 189,
															"id": 194,
															"nodeType": "Return",
															"src": "6250:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 214,
														"src": "6271:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6271:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6283:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "6287:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6283:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6271:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "6302:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 205,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "6306:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6302:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 207,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "6311:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6302:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6314:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															922
														],
														"referencedDeclaration": 922,
														"src": "6294:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6294:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "6294:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 212,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 198,
													"src": "6364:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 189,
												"id": 213,
												"nodeType": "Return",
												"src": "6357:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `*` operator.\n   * Requirements:\n- Multiplication cannot overflow.",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5964:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5975:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5975:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5963:22:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6009:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6009:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6008:9:0"
									},
									"scope": 298,
									"src": "5951:419:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "6868:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 225,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6885:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 226,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "6888:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6891:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 224,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															231,
															258
														],
														"referencedDeclaration": 258,
														"src": "6881:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6881:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 223,
												"id": 229,
												"nodeType": "Return",
												"src": "6874:46:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6814:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6814:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6825:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6825:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6813:22:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6859:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6859:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6858:9:0"
									},
									"scope": 298,
									"src": "6801:124:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "7471:221:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "7547:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7551:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7547:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 246,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7554:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															922
														],
														"referencedDeclaration": 922,
														"src": "7539:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7539:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "7539:28:0"
											},
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "7573:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7573:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 251,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "7585:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "7589:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7585:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7573:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 255,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "7686:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 256,
												"nodeType": "Return",
												"src": "7679:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7389:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7400:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7411:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7411:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7388:50:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7462:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7462:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7461:9:0"
									},
									"scope": 298,
									"src": "7376:316:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "8179:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 268,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "8196:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 269,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "8199:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8202:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 267,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															297
														],
														"referencedDeclaration": 297,
														"src": "8192:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8192:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 272,
												"nodeType": "Return",
												"src": "8185:44:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8125:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8136:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8124:22:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8170:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8169:9:0"
									},
									"scope": 298,
									"src": "8112:122:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "8769:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 286,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "8783:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8788:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8783:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 289,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "8791:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															922
														],
														"referencedDeclaration": 922,
														"src": "8775:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8775:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "8775:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "8817:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 293,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "8821:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8817:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 284,
												"id": 295,
												"nodeType": "Return",
												"src": "8810:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8687:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8698:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8709:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8709:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8686:50:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8760:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8760:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8759:9:0"
									},
									"scope": 298,
									"src": "8674:153:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 904,
							"src": "4535:4294:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 299,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "9346:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 300,
									"nodeType": "InheritanceSpecifier",
									"src": "9346:7:0"
								}
							],
							"contractDependencies": [
								113
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 404,
							"linearizedBaseContracts": [
								404,
								113
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 302,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 404,
									"src": "9358:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 301,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9358:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 308,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9412:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9412:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9443:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9443:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9411:57:0"
									},
									"src": "9385:84:0"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "9587:121:0",
										"statements": [
											{
												"assignments": [
													312
												],
												"declarations": [
													{
														"constant": false,
														"id": 312,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 327,
														"src": "9593:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 311,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9593:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 313,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "9613:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9613:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9593:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 316,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "9631:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 317,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "9640:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9631:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "9631:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9689:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9681:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9681:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 324,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "9693:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 320,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "9660:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9660:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "EmitStatement",
												"src": "9655:48:0"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 328,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9575:2:0"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9587:0:0"
									},
									"scope": 404,
									"src": "9563:145:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "9823:24:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 333,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "9836:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "9829:13:0"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9790:2:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9814:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9814:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9813:9:0"
									},
									"scope": 404,
									"src": "9776:71:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "9948:85:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "9962:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 340,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "9972:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9972:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9962:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9986:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															922
														],
														"referencedDeclaration": 922,
														"src": "9954:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9954:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "9954:67:0"
											},
											{
												"id": 346,
												"nodeType": "PlaceholderStatement",
												"src": "10027:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 348,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9945:2:0"
									},
									"src": "9927:106:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "10405:81:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 354,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10437:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10453:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10445:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10445:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 353,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10416:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10416:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "EmitStatement",
												"src": "10411:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 360,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "10462:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10479:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10471:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10471:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "10462:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "10462:19:0"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 351,
											"modifierName": {
												"argumentTypes": null,
												"id": 350,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10395:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10395:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10385:2:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10405:0:0"
									},
									"scope": 404,
									"src": "10359:127:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "10687:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 375,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "10712:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 374,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "10693:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10693:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "10693:28:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 372,
											"modifierName": {
												"argumentTypes": null,
												"id": 371,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10677:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10677:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "10652:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10651:18:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10687:0:0"
									},
									"scope": 404,
									"src": "10625:101:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "10874:156:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 385,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "10888:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10908:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10900:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10900:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10888:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10912:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															922
														],
														"referencedDeclaration": 922,
														"src": "10880:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10880:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "10880:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 394,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10985:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 395,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "10993:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 393,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10964:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10964:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "EmitStatement",
												"src": "10959:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 398,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "11008:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 399,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "11017:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11008:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "11008:17:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "10847:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10847:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10846:18:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10874:0:0"
									},
									"scope": 404,
									"src": "10819:211:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 904,
							"src": "9326:1706:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 405,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "11052:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 406,
									"nodeType": "InheritanceSpecifier",
									"src": "11052:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 407,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 88,
										"src": "11061:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$88",
											"typeString": "contract IBEP20"
										}
									},
									"id": 408,
									"nodeType": "InheritanceSpecifier",
									"src": "11061:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 409,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 404,
										"src": "11069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$404",
											"typeString": "contract Ownable"
										}
									},
									"id": 410,
									"nodeType": "InheritanceSpecifier",
									"src": "11069:7:0"
								}
							],
							"contractDependencies": [
								88,
								113,
								404
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								404,
								88,
								113
							],
							"name": "Token",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 413,
									"libraryName": {
										"contractScope": null,
										"id": 411,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "11087:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$298",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "11081:27:0",
									"typeName": {
										"id": 412,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11100:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 417,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 903,
									"src": "11112:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 416,
										"keyType": {
											"id": 414,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11121:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11112:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 415,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11132:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 903,
									"src": "11163:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 422,
										"keyType": {
											"id": 418,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11172:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11163:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 421,
											"keyType": {
												"id": 419,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11192:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11183:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 420,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11203:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 425,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 903,
									"src": "11237:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11237:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 903,
									"src": "11269:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 426,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11269:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 429,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 903,
									"src": "11296:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 428,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11296:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 431,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 903,
									"src": "11322:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 430,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11322:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "11368:213:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 434,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "11374:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "534d415254204d4f4e455920434f494e",
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11382:18:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_f308e75dca32d9e39d7db3ab6dfc887f647eda4ca014e3a497618dd78fab9c8e",
															"typeString": "literal_string \"SMART MONEY COIN\""
														},
														"value": "SMART MONEY COIN"
													},
													"src": "11374:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "11374:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 438,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "11406:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "534d43",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11416:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c962501fc19a264289df458401069a4297a1167b0630c661fd88f1dfebb2cc1a",
															"typeString": "literal_string \"SMC\""
														},
														"value": "SMC"
													},
													"src": "11406:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "11406:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 442,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "11427:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11439:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "11427:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "11427:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 446,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11447:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_5000000000000000000000000_by_1",
															"typeString": "int_const 5000000000000000000000000"
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "35303030303030",
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11462:7:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5000000_by_1",
																"typeString": "int_const 5000000"
															},
															"value": "5000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11470:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3138",
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11474:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "11470:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "11462:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5000000000000000000000000_by_1",
															"typeString": "int_const 5000000000000000000000000"
														}
													},
													"src": "11447:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "11447:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 454,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "11482:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 457,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 455,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "11492:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11492:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11482:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 458,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11506:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11482:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "11482:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11547:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11539:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11539:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 465,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "11551:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11551:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 467,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "11563:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 461,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "11530:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11530:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "EmitStatement",
												"src": "11525:51:0"
											}
										]
									},
									"documentation": null,
									"id": 471,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11358:2:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11368:0:0"
									},
									"scope": 903,
									"src": "11347:234:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "11688:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 476,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "11701:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 475,
												"id": 478,
												"nodeType": "Return",
												"src": "11694:14:0"
											}
										]
									},
									"documentation": "@dev Returns the bep token owner.",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11653:2:0"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "11679:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11678:9:0"
									},
									"scope": 903,
									"src": "11636:77:0",
									"stateMutability": "view",
									"superFunction": 26,
									"visibility": "external"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "11817:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 485,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "11830:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 484,
												"id": 486,
												"nodeType": "Return",
												"src": "11823:16:0"
											}
										]
									},
									"documentation": "@dev Returns the token decimals.",
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11784:2:0"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "11810:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 482,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11810:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11809:7:0"
									},
									"scope": 903,
									"src": "11767:77:0",
									"stateMutability": "view",
									"superFunction": 11,
									"visibility": "external"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "11952:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 493,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 429,
													"src": "11965:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 492,
												"id": 494,
												"nodeType": "Return",
												"src": "11958:14:0"
											}
										]
									},
									"documentation": "@dev Returns the token symbol.",
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11911:2:0"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "11937:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 490,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11937:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11936:15:0"
									},
									"scope": 903,
									"src": "11896:81:0",
									"stateMutability": "view",
									"superFunction": 16,
									"visibility": "external"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "12079:23:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 501,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 431,
													"src": "12092:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 500,
												"id": 502,
												"nodeType": "Return",
												"src": "12085:12:0"
											}
										]
									},
									"documentation": "@dev Returns the token name.",
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12038:2:0"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "12064:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 498,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12064:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12063:15:0"
									},
									"scope": 903,
									"src": "12025:77:0",
									"stateMutability": "view",
									"superFunction": 21,
									"visibility": "external"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "12208:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 509,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "12221:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 508,
												"id": 510,
												"nodeType": "Return",
												"src": "12214:19:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-totalSupply}.",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12173:2:0"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "12199:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12198:9:0"
									},
									"scope": 903,
									"src": "12153:85:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "external"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "12355:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 519,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "12368:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 521,
													"indexExpression": {
														"argumentTypes": null,
														"id": 520,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "12378:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12368:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 518,
												"id": 522,
												"nodeType": "Return",
												"src": "12361:25:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-balanceOf}.",
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "12306:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12305:17:0"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "12346:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12345:9:0"
									},
									"scope": 903,
									"src": "12287:104:0",
									"stateMutability": "view",
									"superFunction": 33,
									"visibility": "external"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "12652:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 534,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "12668:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12668:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 536,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "12682:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 537,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "12693:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 533,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "12658:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12658:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "12658:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12713:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 532,
												"id": 541,
												"nodeType": "Return",
												"src": "12706:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transfer}.\n   * Requirements:\n   * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "12593:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12593:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "12612:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12592:35:0"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "12646:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 530,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12646:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12645:6:0"
									},
									"scope": 903,
									"src": "12575:147:0",
									"stateMutability": "nonpayable",
									"superFunction": 42,
									"visibility": "external"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "12854:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 552,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "12867:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 554,
														"indexExpression": {
															"argumentTypes": null,
															"id": 553,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "12879:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12867:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 556,
													"indexExpression": {
														"argumentTypes": null,
														"id": 555,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "12886:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12867:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 551,
												"id": 557,
												"nodeType": "Return",
												"src": "12860:34:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-allowance}.",
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "12790:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12790:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "12805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12789:32:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "12845:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12845:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12844:9:0"
									},
									"scope": 903,
									"src": "12771:128:0",
									"stateMutability": "view",
									"superFunction": 51,
									"visibility": "external"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "13094:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 569,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13109:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13109:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 571,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "13123:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 572,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "13132:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 568,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "13100:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13100:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "13100:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13152:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 567,
												"id": 576,
												"nodeType": "Return",
												"src": "13145:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-approve}.\n   * Requirements:\n   * - `spender` cannot be the zero address.",
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "13037:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13037:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "13054:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13054:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13036:33:0"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "13088:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13088:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13087:6:0"
									},
									"scope": 903,
									"src": "13020:141:0",
									"stateMutability": "nonpayable",
									"superFunction": 60,
									"visibility": "external"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "13689:191:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 590,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "13705:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 591,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "13713:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 592,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "13724:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 589,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "13695:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13695:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "13695:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 596,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "13746:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 597,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13754:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13754:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 606,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "13806:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13814:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 599,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "13768:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 601,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 600,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "13780:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13768:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 604,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 602,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "13788:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13788:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13768:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "13768:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13768:89:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 595,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "13737:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13737:121:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "13737:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13871:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 588,
												"id": 612,
												"nodeType": "Return",
												"src": "13864:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transferFrom}.\n   * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {BEP20};\n   * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "13614:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "13630:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13630:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "13649:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13649:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13613:51:0"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "13683:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 586,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13683:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13682:6:0"
									},
									"scope": 903,
									"src": "13592:288:0",
									"stateMutability": "nonpayable",
									"superFunction": 71,
									"visibility": "external"
								},
								{
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "14334:111:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 624,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14349:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14349:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 626,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "14363:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 634,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "14411:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 627,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "14372:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 630,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 628,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "14384:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14384:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14372:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 632,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 631,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "14398:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14372:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 138,
																"src": "14372:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14372:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 623,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "14340:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14340:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "14340:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14436:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 622,
												"id": 639,
												"nodeType": "Return",
												"src": "14429:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n   * Emits an {Approval} event indicating the updated allowance.\n   * Requirements:\n   * - `spender` cannot be the zero address.",
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "14275:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "14292:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14274:37:0"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "14328:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 620,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14328:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14327:6:0"
									},
									"scope": 903,
									"src": "14248:197:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "14992:157:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 651,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15007:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15007:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 653,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "15021:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 661,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "15069:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15086:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 654,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "15030:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 657,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 655,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "15042:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15042:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15030:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 659,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 658,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "15056:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15030:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "15030:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15030:96:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 650,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "14998:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14998:129:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "14998:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15140:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 649,
												"id": 667,
												"nodeType": "Return",
												"src": "15133:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n   * Emits an {Approval} event indicating the updated allowance.\n   * Requirements:\n   * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "14928:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "14945:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14927:42:0"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "14986:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14986:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14985:6:0"
									},
									"scope": 903,
									"src": "14901:248:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "15401:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 679,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15413:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15413:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 681,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "15427:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 678,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "15407:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15407:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "15407:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15447:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 677,
												"id": 685,
												"nodeType": "Return",
												"src": "15440:11:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\nthe total supply.\n   * Requirements\n   * - `msg.sender` must be the token owner",
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 674,
											"modifierName": {
												"argumentTypes": null,
												"id": 673,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "15376:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15376:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "15353:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15352:16:0"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "15395:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 675,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15395:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15394:6:0"
									},
									"scope": 903,
									"src": "15339:117:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "15979:363:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 697,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "15993:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16011:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16003:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16003:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "15993:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16015:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 696,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															922
														],
														"referencedDeclaration": 922,
														"src": "15985:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15985:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "15985:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 706,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "16069:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16090:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16082:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16082:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16069:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16094:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 705,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															922
														],
														"referencedDeclaration": 922,
														"src": "16061:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16061:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "16061:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 714,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16139:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 716,
														"indexExpression": {
															"argumentTypes": null,
															"id": 715,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "16149:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16139:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 721,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "16181:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16189:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 717,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16159:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 719,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 718,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "16169:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16159:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "16159:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16159:71:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16139:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "16139:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 726,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16236:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 728,
														"indexExpression": {
															"argumentTypes": null,
															"id": 727,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "16246:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16236:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 733,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "16284:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 729,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16259:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 731,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 730,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 691,
																	"src": "16269:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16259:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16259:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16259:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16236:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 736,
												"nodeType": "ExpressionStatement",
												"src": "16236:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 738,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "16311:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 739,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "16319:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 740,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "16330:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 737,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "16302:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16302:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "EmitStatement",
												"src": "16297:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n   * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n   * Emits a {Transfer} event.\n   * Requirements:\n   * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "15919:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15919:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "15935:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15935:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "15954:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15954:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15918:51:0"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15979:0:0"
									},
									"scope": 903,
									"src": "15900:442:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "16649:227:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 752,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "16663:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16682:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16674:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16674:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16663:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16686:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															922
														],
														"referencedDeclaration": 922,
														"src": "16655:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16655:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "16655:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 760,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "16727:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 763,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "16759:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 761,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "16742:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16742:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16742:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16727:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "16727:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 767,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16772:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 769,
														"indexExpression": {
															"argumentTypes": null,
															"id": 768,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "16782:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16772:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 774,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "16816:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 770,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16793:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 772,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 771,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "16803:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16793:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16793:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16793:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16772:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "16772:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16851:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16843:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16843:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 782,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "16855:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 783,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "16864:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 778,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "16834:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16834:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "EmitStatement",
												"src": "16829:42:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n   * Emits a {Transfer} event with `from` set to the zero address.\n   * Requirements\n   * - `to` cannot be the zero address.",
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "16607:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16607:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "16624:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16606:33:0"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16649:0:0"
									},
									"scope": 903,
									"src": "16592:284:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 830,
										"nodeType": "Block",
										"src": "17228:267:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 795,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "17242:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17261:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17253:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17253:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17242:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17265:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 794,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															922
														],
														"referencedDeclaration": 922,
														"src": "17234:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17234:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 802,
												"nodeType": "ExpressionStatement",
												"src": "17234:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 803,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "17308:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 805,
														"indexExpression": {
															"argumentTypes": null,
															"id": 804,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "17318:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17308:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 810,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "17352:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17360:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 806,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "17329:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 808,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 807,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "17339:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17329:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "17329:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17329:68:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17308:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "17308:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 815,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "17403:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 818,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "17435:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 816,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "17418:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "17418:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17418:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17403:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "17403:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 823,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "17462:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17479:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17471:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17471:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 827,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "17483:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 822,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "17453:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17453:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 829,
												"nodeType": "EmitStatement",
												"src": "17448:42:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n   * Emits a {Transfer} event with `to` set to the zero address.\n   * Requirements\n   * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "17186:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17186:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "17203:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17203:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17185:33:0"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17228:0:0"
									},
									"scope": 903,
									"src": "17171:324:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "17967:239:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 841,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "17981:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17998:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17990:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17990:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17981:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18002:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 840,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															922
														],
														"referencedDeclaration": 922,
														"src": "17973:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17973:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "17973:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 850,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 835,
																"src": "18055:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18074:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18066:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18066:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18055:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18078:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 849,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															922
														],
														"referencedDeclaration": 922,
														"src": "18047:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18047:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "18047:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 858,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "18122:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 861,
															"indexExpression": {
																"argumentTypes": null,
																"id": 859,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "18134:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18122:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 862,
														"indexExpression": {
															"argumentTypes": null,
															"id": 860,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "18141:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18122:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 863,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "18152:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18122:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "18122:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 867,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "18178:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 868,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "18185:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 869,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "18194:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 866,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "18169:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18169:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "EmitStatement",
												"src": "18164:37:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n   * Emits an {Approval} event.\n   * Requirements:\n   * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "17910:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17910:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "17925:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "17942:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17942:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17909:48:0"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17967:0:0"
									},
									"scope": 903,
									"src": "17892:314:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "18431:158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 881,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "18443:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 882,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "18452:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 880,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "18437:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18437:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "18437:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 886,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "18474:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 887,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "18483:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18483:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 896,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "18536:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18544:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 889,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "18497:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 891,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 890,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 875,
																			"src": "18509:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "18497:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 894,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 892,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "18518:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18518:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18497:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "18497:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18497:86:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 885,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "18465:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18465:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "18465:119:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n   * See {_burn} and {_approve}.",
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "18389:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18389:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "18406:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18388:33:0"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18431:0:0"
									},
									"scope": 903,
									"src": "18370:219:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 904,
							"src": "11034:7557:0"
						}
					],
					"src": "66:18525:0"
				},
				"id": 0
			}
		}
	}
}