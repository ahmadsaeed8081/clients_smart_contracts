{
	"id": "778c576a799b87eac1d087ca68af980b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/fund_transfer.sol": {
				"content": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\ncontract NFT {\n\n    address payable owner;\n    uint gold = 2 ;\n\n    uint Silver = 1 ;\n\n    uint Diamond = 3 ;\n\n\n\n\n    function NFT_Funds(uint  nft) public payable {\n\n        if(nft==0)\n        {\n\n        }\n        else if(nft==1)\n        {\n\n        }\n        else if(nft==2)\n        owner.transfer(msg.value);\n\n    }\n\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/fund_transfer.sol": {
				"NFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								}
							],
							"name": "NFT_Funds",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/fund_transfer.sol\":57:377  contract NFT {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/fund_transfer.sol\":116:117  2 */\n  0x02\n    /* \"contracts/fund_transfer.sol\":104:117  uint gold = 2 */\n  0x01\n  sstore\n    /* \"contracts/fund_transfer.sol\":139:140  1 */\n  0x01\n    /* \"contracts/fund_transfer.sol\":125:140  uint Silver = 1 */\n  0x02\n  sstore\n    /* \"contracts/fund_transfer.sol\":163:164  3 */\n  0x03\n    /* \"contracts/fund_transfer.sol\":148:164  uint Diamond = 3 */\n  dup1\n  sstore\n    /* \"contracts/fund_transfer.sol\":57:377  contract NFT {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/fund_transfer.sol\":57:377  contract NFT {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xac2bcce4\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/fund_transfer.sol\":175:373  function NFT_Funds(uint  nft) public payable {... */\n    tag_2:\n      tag_3\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_4\n      swap2\n      swap1\n      tag_5\n      jump\t// in\n    tag_4:\n      tag_6\n      jump\t// in\n    tag_3:\n      stop\n    tag_6:\n        /* \"contracts/fund_transfer.sol\":239:240  0 */\n      0x00\n        /* \"contracts/fund_transfer.sol\":234:237  nft */\n      dup2\n        /* \"contracts/fund_transfer.sol\":234:240  nft==0 */\n      eq\n        /* \"contracts/fund_transfer.sol\":231:365  if(nft==0)... */\n      iszero\n      tag_8\n      jumpi\n      jump(tag_9)\n    tag_8:\n        /* \"contracts/fund_transfer.sol\":284:285  1 */\n      0x01\n        /* \"contracts/fund_transfer.sol\":279:282  nft */\n      dup2\n        /* \"contracts/fund_transfer.sol\":279:285  nft==1 */\n      eq\n        /* \"contracts/fund_transfer.sol\":276:365  if(nft==1)... */\n      iszero\n      tag_10\n      jumpi\n      jump(tag_11)\n    tag_10:\n        /* \"contracts/fund_transfer.sol\":329:330  2 */\n      0x02\n        /* \"contracts/fund_transfer.sol\":324:327  nft */\n      dup2\n        /* \"contracts/fund_transfer.sol\":324:330  nft==2 */\n      eq\n        /* \"contracts/fund_transfer.sol\":321:365  if(nft==2)... */\n      iszero\n      tag_12\n      jumpi\n        /* \"contracts/fund_transfer.sol\":340:345  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fund_transfer.sol\":340:354  owner.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fund_transfer.sol\":340:365  owner.transfer(msg.value) */\n      0x08fc\n        /* \"contracts/fund_transfer.sol\":355:364  msg.value */\n      callvalue\n        /* \"contracts/fund_transfer.sol\":340:365  owner.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_14\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_14:\n      pop\n        /* \"contracts/fund_transfer.sol\":321:365  if(nft==2)... */\n    tag_12:\n        /* \"contracts/fund_transfer.sol\":276:365  if(nft==1)... */\n    tag_11:\n        /* \"contracts/fund_transfer.sol\":231:365  if(nft==0)... */\n    tag_9:\n        /* \"contracts/fund_transfer.sol\":175:373  function NFT_Funds(uint  nft) public payable {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_16:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_18\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_5:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_21\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":228:347   */\n    tag_21:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_24\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_16\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:645   */\n    tag_27:\n        /* \"#utility.yul\":605:612   */\n      0x00\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":623:639   */\n      swap1\n      pop\n        /* \"#utility.yul\":568:645   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":774:891   */\n    tag_23:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":880:881   */\n      dup1\n        /* \"#utility.yul\":873:885   */\n      revert\n        /* \"#utility.yul\":897:1019   */\n    tag_19:\n        /* \"#utility.yul\":970:994   */\n      tag_33\n        /* \"#utility.yul\":988:993   */\n      dup2\n        /* \"#utility.yul\":970:994   */\n      tag_27\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":963:968   */\n      dup2\n        /* \"#utility.yul\":960:995   */\n      eq\n        /* \"#utility.yul\":950:1013   */\n      tag_34\n      jumpi\n        /* \"#utility.yul\":1009:1010   */\n      0x00\n        /* \"#utility.yul\":1006:1007   */\n      dup1\n        /* \"#utility.yul\":999:1011   */\n      revert\n        /* \"#utility.yul\":950:1013   */\n    tag_34:\n        /* \"#utility.yul\":897:1019   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b0fb49e93b501453a8b80516d16015854f829ac9b920c98bf07113c9ee11aade64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600260015560016002556003805534801561001e57600080fd5b5061016f8061002e6000396000f3fe60806040526004361061001e5760003560e01c8063ac2bcce414610023575b600080fd5b61003d600480360381019061003891906100e6565b61003f565b005b600081141561004d576100ce565b600181141561005b576100cd565b60028114156100cc5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156100ca573d6000803e3d6000fd5b505b5b5b50565b6000813590506100e081610122565b92915050565b6000602082840312156100fc576100fb61011d565b5b600061010a848285016100d1565b91505092915050565b6000819050919050565b600080fd5b61012b81610113565b811461013657600080fd5b5056fea2646970667358221220b0fb49e93b501453a8b80516d16015854f829ac9b920c98bf07113c9ee11aade64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x2 SSTORE PUSH1 0x3 DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F DUP1 PUSH2 0x2E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAC2BCCE4 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38 SWAP2 SWAP1 PUSH2 0xE6 JUMP JUMPDEST PUSH2 0x3F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x4D JUMPI PUSH2 0xCE JUMP JUMPDEST PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x5B JUMPI PUSH2 0xCD JUMP JUMPDEST PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0 DUP2 PUSH2 0x122 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC JUMPI PUSH2 0xFB PUSH2 0x11D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10A DUP5 DUP3 DUP6 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12B DUP2 PUSH2 0x113 JUMP JUMPDEST DUP2 EQ PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xFB 0x49 0xE9 EXTCODESIZE POP EQ MSTORE8 0xA8 0xB8 SDIV AND 0xD1 PUSH1 0x15 DUP6 0x4F DUP3 SWAP11 0xC9 0xB9 KECCAK256 0xC9 DUP12 CREATE PUSH18 0x13C9EE11AADE64736F6C6343000807003300 ",
							"sourceMap": "57:320:0:-:0;;;116:1;104:13;;139:1;125:15;;163:1;148:16;;57:320;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@NFT_Funds_39": {
									"entryPoint": 63,
									"id": 39,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 285,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1022:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "527:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "537:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "547:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "547:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "520:6:1",
														"type": ""
													}
												],
												"src": "487:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "613:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "623:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "634:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "623:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "595:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "605:7:1",
														"type": ""
													}
												],
												"src": "568:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "740:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "760:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "750:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "750:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "651:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "863:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "873:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "873:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "873:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "774:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "940:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "997:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1006:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1009:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "999:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "999:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "999:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "963:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "988:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "970:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "960:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "960:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "953:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "953:43:1"
															},
															"nodeType": "YulIf",
															"src": "950:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "933:5:1",
														"type": ""
													}
												],
												"src": "897:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061001e5760003560e01c8063ac2bcce414610023575b600080fd5b61003d600480360381019061003891906100e6565b61003f565b005b600081141561004d576100ce565b600181141561005b576100cd565b60028114156100cc5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156100ca573d6000803e3d6000fd5b505b5b5b50565b6000813590506100e081610122565b92915050565b6000602082840312156100fc576100fb61011d565b5b600061010a848285016100d1565b91505092915050565b6000819050919050565b600080fd5b61012b81610113565b811461013657600080fd5b5056fea2646970667358221220b0fb49e93b501453a8b80516d16015854f829ac9b920c98bf07113c9ee11aade64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAC2BCCE4 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38 SWAP2 SWAP1 PUSH2 0xE6 JUMP JUMPDEST PUSH2 0x3F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x4D JUMPI PUSH2 0xCE JUMP JUMPDEST PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x5B JUMPI PUSH2 0xCD JUMP JUMPDEST PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0 DUP2 PUSH2 0x122 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC JUMPI PUSH2 0xFB PUSH2 0x11D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10A DUP5 DUP3 DUP6 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12B DUP2 PUSH2 0x113 JUMP JUMPDEST DUP2 EQ PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xFB 0x49 0xE9 EXTCODESIZE POP EQ MSTORE8 0xA8 0xB8 SDIV AND 0xD1 PUSH1 0x15 DUP6 0x4F DUP3 SWAP11 0xC9 0xB9 KECCAK256 0xC9 DUP12 CREATE PUSH18 0x13C9EE11AADE64736F6C6343000807003300 ",
							"sourceMap": "57:320:0:-:0;;;;;;;;;;;;;;;;;;;;;175:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;239:1;234:3;:6;231:134;;;;;;284:1;279:3;:6;276:89;;;;;;329:1;324:3;:6;321:44;;;340:5;;;;;;;;;;:14;;:25;355:9;340:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;321:44;276:89;231:134;175:198;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;568:77::-;605:7;634:5;623:16;;568:77;;;:::o;774:117::-;883:1;880;873:12;897:122;970:24;988:5;970:24;:::i;:::-;963:5;960:35;950:63;;1009:1;1006;999:12;950:63;897:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "73400",
								"executionCost": "66441",
								"totalCost": "139841"
							},
							"external": {
								"NFT_Funds(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 377,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 377,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 377,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 116,
									"end": 117,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 104,
									"end": 117,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 104,
									"end": 117,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 125,
									"end": 140,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 125,
									"end": 140,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 163,
									"end": 164,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 148,
									"end": 164,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 148,
									"end": 164,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 377,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 377,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 377,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 377,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 377,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 377,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 377,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 377,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 377,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 377,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 377,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 377,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 377,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 377,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 377,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 377,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 377,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b0fb49e93b501453a8b80516d16015854f829ac9b920c98bf07113c9ee11aade64736f6c63430008070033",
									".code": [
										{
											"begin": 57,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 377,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 377,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 377,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 377,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 377,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "AC2BCCE4"
										},
										{
											"begin": 57,
											"end": 377,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 377,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 377,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 377,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 175,
											"end": 373,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 175,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 175,
											"end": 373,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 373,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 175,
											"end": 373,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 175,
											"end": 373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 175,
											"end": 373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 175,
											"end": 373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 175,
											"end": 373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 175,
											"end": 373,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 175,
											"end": 373,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 175,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 175,
											"end": 373,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 175,
											"end": 373,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 175,
											"end": 373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 175,
											"end": 373,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 175,
											"end": 373,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 175,
											"end": 373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 239,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 234,
											"end": 240,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 231,
											"end": 365,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 231,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 231,
											"end": 365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 231,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 231,
											"end": 365,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 231,
											"end": 365,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 231,
											"end": 365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 279,
											"end": 282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 279,
											"end": 285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 276,
											"end": 365,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 276,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 276,
											"end": 365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 276,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 276,
											"end": 365,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 276,
											"end": 365,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 276,
											"end": 365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 324,
											"end": 330,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 321,
											"end": 365,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 321,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 321,
											"end": 365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 340,
											"end": 345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 345,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 340,
											"end": 345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 345,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 340,
											"end": 345,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 345,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 340,
											"end": 345,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 340,
											"end": 345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 340,
											"end": 354,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 340,
											"end": 354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 355,
											"end": 364,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 340,
											"end": 365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 365,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 340,
											"end": 365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 340,
											"end": 365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 321,
											"end": 365,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 321,
											"end": 365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 276,
											"end": 365,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 276,
											"end": 365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 231,
											"end": 365,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 231,
											"end": 365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 175,
											"end": 373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 175,
											"end": 373,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 645,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 568,
											"end": 645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 623,
											"end": 639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 623,
											"end": 639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 645,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 568,
											"end": 645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 568,
											"end": 645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 645,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 774,
											"end": 891,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 774,
											"end": 891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 881,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 873,
											"end": 885,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 897,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 970,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 988,
											"end": 993,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 970,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 970,
											"end": 994,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 970,
											"end": 994,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 970,
											"end": 994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 963,
											"end": 968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 960,
											"end": 995,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 950,
											"end": 1013,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1009,
											"end": 1010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 1007,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1011,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1013,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 950,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1019,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"NFT_Funds(uint256)": "ac2bcce4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"NFT_Funds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fund_transfer.sol\":\"NFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/fund_transfer.sol\":{\"keccak256\":\"0xd23660d1a51d24cc011f17c02f74a3642e41556770541ae34c631afae7fa7513\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e8bc3cfe234dfd774b1bbc714c50e226384e223dd13b9b157eba3104225bf3f\",\"dweb:/ipfs/QmPauSQWKsES6hmx1RZyHMY5KSKAwaTEujexuHLHzn35JM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/fund_transfer.sol:NFT",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 6,
								"contract": "contracts/fund_transfer.sol:NFT",
								"label": "gold",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 9,
								"contract": "contracts/fund_transfer.sol:NFT",
								"label": "Silver",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 12,
								"contract": "contracts/fund_transfer.sol:NFT",
								"label": "Diamond",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/fund_transfer.sol": {
				"ast": {
					"absolutePath": "contracts/fund_transfer.sol",
					"exportedSymbols": {
						"NFT": [
							40
						]
					},
					"id": 41,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 40,
							"linearizedBaseContracts": [
								40
							],
							"name": "NFT",
							"nameLocation": "66:3:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "93:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 40,
									"src": "77:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "77:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 6,
									"mutability": "mutable",
									"name": "gold",
									"nameLocation": "109:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 40,
									"src": "104:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "104:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 5,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "116:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "Silver",
									"nameLocation": "130:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 40,
									"src": "125:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 7,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "125:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 8,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "139:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "Diamond",
									"nameLocation": "153:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 40,
									"src": "148:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "148:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "163:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "220:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 17,
														"name": "nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "234:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "239:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "234:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 21,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "279:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "284:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "279:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 25,
																"name": "nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "324:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "329:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "324:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 35,
														"nodeType": "IfStatement",
														"src": "321:44:0",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 31,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "355:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 32,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "355:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 28,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "340:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 30,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "340:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "340:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 34,
															"nodeType": "ExpressionStatement",
															"src": "340:25:0"
														}
													},
													"id": 36,
													"nodeType": "IfStatement",
													"src": "276:89:0",
													"trueBody": {
														"id": 24,
														"nodeType": "Block",
														"src": "295:12:0",
														"statements": []
													}
												},
												"id": 37,
												"nodeType": "IfStatement",
												"src": "231:134:0",
												"trueBody": {
													"id": 20,
													"nodeType": "Block",
													"src": "250:12:0",
													"statements": []
												}
											}
										]
									},
									"functionSelector": "ac2bcce4",
									"id": 39,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "NFT_Funds",
									"nameLocation": "184:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "200:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "194:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "194:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "193:11:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "220:0:0"
									},
									"scope": 40,
									"src": "175:198:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 41,
							"src": "57:320:0",
							"usedErrors": []
						}
					],
					"src": "32:345:0"
				},
				"id": 0
			}
		}
	}
}