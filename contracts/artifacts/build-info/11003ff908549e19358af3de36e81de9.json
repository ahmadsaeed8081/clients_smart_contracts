{
	"id": "11003ff908549e19358af3de36e81de9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/fund_transfer.sol": {
				"content": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\ncontract NFT {\n\n    address  payable owner;\n    uint public gold = 2 ether;\n\n    uint public Silver = 1 ether;\n\n    uint public Diamond = 3 ether;\n\n\n\n\n    function NFT_Funds(uint  nft) public payable {\n\n        if(nft==0)\n        {\n            require(msg.value==Silver);\n            owner.transfer(msg.value);\n\n        }\n        else if(nft==1)\n        {\n            require(msg.value==gold);\n\n            owner.transfer(msg.value);\n\n        }\n        else if(nft==2)\n        {\n            require(msg.value==Diamond);\n\n            owner.transfer(msg.value);\n\n        }\n\n    }\n\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/fund_transfer.sol": {
				"NFT": {
					"abi": [
						{
							"inputs": [],
							"name": "Diamond",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								}
							],
							"name": "NFT_Funds",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Silver",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/fund_transfer.sol\":57:638  contract NFT {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/fund_transfer.sol\":124:131  2 ether */\n  0x1bc16d674ec80000\n    /* \"contracts/fund_transfer.sol\":105:131  uint public gold = 2 ether */\n  0x01\n  sstore\n    /* \"contracts/fund_transfer.sol\":159:166  1 ether */\n  0x0de0b6b3a7640000\n    /* \"contracts/fund_transfer.sol\":138:166  uint public Silver = 1 ether */\n  0x02\n  sstore\n    /* \"contracts/fund_transfer.sol\":195:202  3 ether */\n  0x29a2241af62c0000\n    /* \"contracts/fund_transfer.sol\":173:202  uint public Diamond = 3 ether */\n  0x03\n  sstore\n    /* \"contracts/fund_transfer.sol\":57:638  contract NFT {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/fund_transfer.sol\":57:638  contract NFT {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6b7d5205\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xac2bcce4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xfbec6f21\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfe275280\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/fund_transfer.sol\":173:202  uint public Diamond = 3 ether */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      pop\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fund_transfer.sol\":212:634  function NFT_Funds(uint  nft) public payable {... */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/fund_transfer.sol\":105:131  uint public gold = 2 ether */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fund_transfer.sol\":138:166  uint public Silver = 1 ether */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fund_transfer.sol\":173:202  uint public Diamond = 3 ether */\n    tag_8:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/fund_transfer.sol\":212:634  function NFT_Funds(uint  nft) public payable {... */\n    tag_14:\n        /* \"contracts/fund_transfer.sol\":276:277  0 */\n      0x00\n        /* \"contracts/fund_transfer.sol\":271:274  nft */\n      dup2\n        /* \"contracts/fund_transfer.sol\":271:277  nft==0 */\n      eq\n        /* \"contracts/fund_transfer.sol\":268:627  if(nft==0)... */\n      iszero\n      tag_24\n      jumpi\n        /* \"contracts/fund_transfer.sol\":320:326  Silver */\n      sload(0x02)\n        /* \"contracts/fund_transfer.sol\":309:318  msg.value */\n      callvalue\n        /* \"contracts/fund_transfer.sol\":309:326  msg.value==Silver */\n      eq\n        /* \"contracts/fund_transfer.sol\":301:327  require(msg.value==Silver) */\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n        /* \"contracts/fund_transfer.sol\":341:346  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fund_transfer.sol\":341:355  owner.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fund_transfer.sol\":341:366  owner.transfer(msg.value) */\n      0x08fc\n        /* \"contracts/fund_transfer.sol\":356:365  msg.value */\n      callvalue\n        /* \"contracts/fund_transfer.sol\":341:366  owner.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_27:\n      pop\n        /* \"contracts/fund_transfer.sol\":268:627  if(nft==0)... */\n      jump(tag_28)\n    tag_24:\n        /* \"contracts/fund_transfer.sol\":400:401  1 */\n      0x01\n        /* \"contracts/fund_transfer.sol\":395:398  nft */\n      dup2\n        /* \"contracts/fund_transfer.sol\":395:401  nft==1 */\n      eq\n        /* \"contracts/fund_transfer.sol\":392:627  if(nft==1)... */\n      iszero\n      tag_29\n      jumpi\n        /* \"contracts/fund_transfer.sol\":444:448  gold */\n      sload(0x01)\n        /* \"contracts/fund_transfer.sol\":433:442  msg.value */\n      callvalue\n        /* \"contracts/fund_transfer.sol\":433:448  msg.value==gold */\n      eq\n        /* \"contracts/fund_transfer.sol\":425:449  require(msg.value==gold) */\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n        /* \"contracts/fund_transfer.sol\":464:469  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fund_transfer.sol\":464:478  owner.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fund_transfer.sol\":464:489  owner.transfer(msg.value) */\n      0x08fc\n        /* \"contracts/fund_transfer.sol\":479:488  msg.value */\n      callvalue\n        /* \"contracts/fund_transfer.sol\":464:489  owner.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_32:\n      pop\n        /* \"contracts/fund_transfer.sol\":392:627  if(nft==1)... */\n      jump(tag_33)\n    tag_29:\n        /* \"contracts/fund_transfer.sol\":523:524  2 */\n      0x02\n        /* \"contracts/fund_transfer.sol\":518:521  nft */\n      dup2\n        /* \"contracts/fund_transfer.sol\":518:524  nft==2 */\n      eq\n        /* \"contracts/fund_transfer.sol\":515:627  if(nft==2)... */\n      iszero\n      tag_34\n      jumpi\n        /* \"contracts/fund_transfer.sol\":567:574  Diamond */\n      sload(0x03)\n        /* \"contracts/fund_transfer.sol\":556:565  msg.value */\n      callvalue\n        /* \"contracts/fund_transfer.sol\":556:574  msg.value==Diamond */\n      eq\n        /* \"contracts/fund_transfer.sol\":548:575  require(msg.value==Diamond) */\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n        /* \"contracts/fund_transfer.sol\":590:595  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fund_transfer.sol\":590:604  owner.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fund_transfer.sol\":590:615  owner.transfer(msg.value) */\n      0x08fc\n        /* \"contracts/fund_transfer.sol\":605:614  msg.value */\n      callvalue\n        /* \"contracts/fund_transfer.sol\":590:615  owner.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_37:\n      pop\n        /* \"contracts/fund_transfer.sol\":515:627  if(nft==2)... */\n    tag_34:\n        /* \"contracts/fund_transfer.sol\":392:627  if(nft==1)... */\n    tag_33:\n        /* \"contracts/fund_transfer.sol\":268:627  if(nft==0)... */\n    tag_28:\n        /* \"contracts/fund_transfer.sol\":212:634  function NFT_Funds(uint  nft) public payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/fund_transfer.sol\":105:131  uint public gold = 2 ether */\n    tag_17:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/fund_transfer.sol\":138:166  uint public Silver = 1 ether */\n    tag_21:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_39:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_41\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_13:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_44\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":228:347   */\n    tag_44:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_47\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_39\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_48:\n        /* \"#utility.yul\":574:598   */\n      tag_50\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:833   */\n    tag_10:\n        /* \"#utility.yul\":704:708   */\n      0x00\n        /* \"#utility.yul\":742:744   */\n      0x20\n        /* \"#utility.yul\":731:740   */\n      dup3\n        /* \"#utility.yul\":727:745   */\n      add\n        /* \"#utility.yul\":719:745   */\n      swap1\n      pop\n        /* \"#utility.yul\":755:826   */\n      tag_53\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":812:821   */\n      dup4\n        /* \"#utility.yul\":808:825   */\n      add\n        /* \"#utility.yul\":799:805   */\n      dup5\n        /* \"#utility.yul\":755:826   */\n      tag_48\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":611:833   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":920:997   */\n    tag_51:\n        /* \"#utility.yul\":957:964   */\n      0x00\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":975:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":920:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1126:1243   */\n    tag_46:\n        /* \"#utility.yul\":1235:1236   */\n      0x00\n        /* \"#utility.yul\":1232:1233   */\n      dup1\n        /* \"#utility.yul\":1225:1237   */\n      revert\n        /* \"#utility.yul\":1249:1371   */\n    tag_42:\n        /* \"#utility.yul\":1322:1346   */\n      tag_61\n        /* \"#utility.yul\":1340:1345   */\n      dup2\n        /* \"#utility.yul\":1322:1346   */\n      tag_51\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1315:1320   */\n      dup2\n        /* \"#utility.yul\":1312:1347   */\n      eq\n        /* \"#utility.yul\":1302:1365   */\n      tag_62\n      jumpi\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1358:1359   */\n      dup1\n        /* \"#utility.yul\":1351:1363   */\n      revert\n        /* \"#utility.yul\":1302:1365   */\n    tag_62:\n        /* \"#utility.yul\":1249:1371   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208a8b7b9a1c34eb0fb84a42152464244f75043f91140f95c0fe7956ac492a8e4664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052671bc16d674ec80000600155670de0b6b3a76400006002556729a2241af62c000060035534801561003457600080fd5b50610345806100446000396000f3fe60806040526004361061003f5760003560e01c80636b7d520514610044578063ac2bcce41461006f578063fbec6f211461008b578063fe275280146100b6575b600080fd5b34801561005057600080fd5b506100596100e1565b60405161006691906102ce565b60405180910390f35b61008960048036038101906100849190610292565b6100e7565b005b34801561009757600080fd5b506100a0610271565b6040516100ad91906102ce565b60405180910390f35b3480156100c257600080fd5b506100cb610277565b6040516100d891906102ce565b60405180910390f35b60035481565b600081141561016a5760025434146100fe57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610164573d6000803e3d6000fd5b5061026e565b60018114156101ed57600154341461018157600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156101e7573d6000803e3d6000fd5b5061026d565b600281141561026c57600354341461020457600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561026a573d6000803e3d6000fd5b505b5b5b50565b60015481565b60025481565b60008135905061028c816102f8565b92915050565b6000602082840312156102a8576102a76102f3565b5b60006102b68482850161027d565b91505092915050565b6102c8816102e9565b82525050565b60006020820190506102e360008301846102bf565b92915050565b6000819050919050565b600080fd5b610301816102e9565b811461030c57600080fd5b5056fea26469706673582212208a8b7b9a1c34eb0fb84a42152464244f75043f91140f95c0fe7956ac492a8e4664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0x1BC16D674EC80000 PUSH1 0x1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SSTORE PUSH8 0x29A2241AF62C0000 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x345 DUP1 PUSH2 0x44 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B7D5205 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0xAC2BCCE4 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0xFBEC6F21 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xFE275280 EQ PUSH2 0xB6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xE7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x271 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x16A JUMPI PUSH1 0x2 SLOAD CALLVALUE EQ PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x164 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x26E JUMP JUMPDEST PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1ED JUMPI PUSH1 0x1 SLOAD CALLVALUE EQ PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x26D JUMP JUMPDEST PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0x26C JUMPI PUSH1 0x3 SLOAD CALLVALUE EQ PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x26A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28C DUP2 PUSH2 0x2F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A8 JUMPI PUSH2 0x2A7 PUSH2 0x2F3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B6 DUP5 DUP3 DUP6 ADD PUSH2 0x27D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C8 DUP2 PUSH2 0x2E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x301 DUP2 PUSH2 0x2E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 DUP12 PUSH28 0x9A1C34EB0FB84A42152464244F75043F91140F95C0FE7956AC492A8E CHAINID PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "57:581:0:-:0;;;124:7;105:26;;159:7;138:28;;195:7;173:29;;57:581;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Diamond_12": {
									"entryPoint": 225,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NFT_Funds_75": {
									"entryPoint": 231,
									"id": 75,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@Silver_9": {
									"entryPoint": 631,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@gold_6": {
									"entryPoint": 625,
									"id": 6,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 755,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1374:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:1",
														"type": ""
													}
												],
												"src": "487:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "719:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "731:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "742:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "727:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "727:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "719:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "799:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "812:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "823:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "808:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "808:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "755:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "755:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "755:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "681:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "693:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "704:4:1",
														"type": ""
													}
												],
												"src": "611:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "879:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "889:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "905:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "899:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "899:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "889:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "872:6:1",
														"type": ""
													}
												],
												"src": "839:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "965:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "975:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "986:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "975:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "947:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "957:7:1",
														"type": ""
													}
												],
												"src": "920:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1092:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1109:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1112:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1102:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1102:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1102:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1003:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1215:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1232:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1235:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1225:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1225:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1126:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1349:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1358:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1361:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1351:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1351:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1351:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1315:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1340:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1322:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1322:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1312:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1312:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1305:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1305:43:1"
															},
															"nodeType": "YulIf",
															"src": "1302:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1285:5:1",
														"type": ""
													}
												],
												"src": "1249:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061003f5760003560e01c80636b7d520514610044578063ac2bcce41461006f578063fbec6f211461008b578063fe275280146100b6575b600080fd5b34801561005057600080fd5b506100596100e1565b60405161006691906102ce565b60405180910390f35b61008960048036038101906100849190610292565b6100e7565b005b34801561009757600080fd5b506100a0610271565b6040516100ad91906102ce565b60405180910390f35b3480156100c257600080fd5b506100cb610277565b6040516100d891906102ce565b60405180910390f35b60035481565b600081141561016a5760025434146100fe57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610164573d6000803e3d6000fd5b5061026e565b60018114156101ed57600154341461018157600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156101e7573d6000803e3d6000fd5b5061026d565b600281141561026c57600354341461020457600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561026a573d6000803e3d6000fd5b505b5b5b50565b60015481565b60025481565b60008135905061028c816102f8565b92915050565b6000602082840312156102a8576102a76102f3565b5b60006102b68482850161027d565b91505092915050565b6102c8816102e9565b82525050565b60006020820190506102e360008301846102bf565b92915050565b6000819050919050565b600080fd5b610301816102e9565b811461030c57600080fd5b5056fea26469706673582212208a8b7b9a1c34eb0fb84a42152464244f75043f91140f95c0fe7956ac492a8e4664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B7D5205 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0xAC2BCCE4 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0xFBEC6F21 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xFE275280 EQ PUSH2 0xB6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xE7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x271 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x16A JUMPI PUSH1 0x2 SLOAD CALLVALUE EQ PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x164 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x26E JUMP JUMPDEST PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1ED JUMPI PUSH1 0x1 SLOAD CALLVALUE EQ PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x26D JUMP JUMPDEST PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0x26C JUMPI PUSH1 0x3 SLOAD CALLVALUE EQ PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x26A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28C DUP2 PUSH2 0x2F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A8 JUMPI PUSH2 0x2A7 PUSH2 0x2F3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B6 DUP5 DUP3 DUP6 ADD PUSH2 0x27D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C8 DUP2 PUSH2 0x2E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x301 DUP2 PUSH2 0x2E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 DUP12 PUSH28 0x9A1C34EB0FB84A42152464244F75043F91140F95C0FE7956AC492A8E CHAINID PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "57:581:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;173:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;212:422;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;105:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;138:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;173:29;;;;:::o;212:422::-;276:1;271:3;:6;268:359;;;320:6;;309:9;:17;301:26;;;;;;341:5;;;;;;;;;;:14;;:25;356:9;341:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;268:359;;;400:1;395:3;:6;392:235;;;444:4;;433:9;:15;425:24;;;;;;464:5;;;;;;;;;;:14;;:25;479:9;464:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;392:235;;;523:1;518:3;:6;515:112;;;567:7;;556:9;:18;548:27;;;;;;590:5;;;;;;;;;;:14;;:25;605:9;590:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;515:112;392:235;268:359;212:422;:::o;105:26::-;;;;:::o;138:28::-;;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:222::-;704:4;742:2;731:9;727:18;719:26;;755:71;823:1;812:9;808:17;799:6;755:71;:::i;:::-;611:222;;;;:::o;920:77::-;957:7;986:5;975:16;;920:77;;;:::o;1126:117::-;1235:1;1232;1225:12;1249:122;1322:24;1340:5;1322:24;:::i;:::-;1315:5;1312:35;1302:63;;1361:1;1358;1351:12;1302:63;1249:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "167400",
								"executionCost": "66532",
								"totalCost": "233932"
							},
							"external": {
								"Diamond()": "2407",
								"NFT_Funds(uint256)": "infinite",
								"Silver()": "2473",
								"gold()": "2451"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 638,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 638,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 638,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 124,
									"end": 131,
									"name": "PUSH",
									"source": 0,
									"value": "1BC16D674EC80000"
								},
								{
									"begin": 105,
									"end": 131,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 105,
									"end": 131,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 159,
									"end": 166,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 138,
									"end": 166,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 138,
									"end": 166,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 195,
									"end": 202,
									"name": "PUSH",
									"source": 0,
									"value": "29A2241AF62C0000"
								},
								{
									"begin": 173,
									"end": 202,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 173,
									"end": 202,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 638,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 638,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 638,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 638,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 638,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 638,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 638,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 638,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 638,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 638,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 638,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 638,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 638,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 638,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 638,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208a8b7b9a1c34eb0fb84a42152464244f75043f91140f95c0fe7956ac492a8e4664736f6c63430008070033",
									".code": [
										{
											"begin": 57,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 638,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 638,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 638,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 638,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "6B7D5205"
										},
										{
											"begin": 57,
											"end": 638,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "AC2BCCE4"
										},
										{
											"begin": 57,
											"end": 638,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "FBEC6F21"
										},
										{
											"begin": 57,
											"end": 638,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "FE275280"
										},
										{
											"begin": 57,
											"end": 638,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 638,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 638,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 173,
											"end": 202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 173,
											"end": 202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 173,
											"end": 202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 173,
											"end": 202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 173,
											"end": 202,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 173,
											"end": 202,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 173,
											"end": 202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 173,
											"end": 202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 173,
											"end": 202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 173,
											"end": 202,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 173,
											"end": 202,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 173,
											"end": 202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 173,
											"end": 202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 212,
											"end": 634,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 212,
											"end": 634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 212,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 212,
											"end": 634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 634,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 212,
											"end": 634,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 212,
											"end": 634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 212,
											"end": 634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 212,
											"end": 634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 212,
											"end": 634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 212,
											"end": 634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 212,
											"end": 634,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 212,
											"end": 634,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 212,
											"end": 634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 212,
											"end": 634,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 212,
											"end": 634,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 212,
											"end": 634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 634,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 105,
											"end": 131,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 105,
											"end": 131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 105,
											"end": 131,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 105,
											"end": 131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 105,
											"end": 131,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 105,
											"end": 131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 105,
											"end": 131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 105,
											"end": 131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 105,
											"end": 131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 105,
											"end": 131,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 105,
											"end": 131,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 105,
											"end": 131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 105,
											"end": 131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 105,
											"end": 131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 105,
											"end": 131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 105,
											"end": 131,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 105,
											"end": 131,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 105,
											"end": 131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 105,
											"end": 131,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 105,
											"end": 131,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 105,
											"end": 131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 105,
											"end": 131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 105,
											"end": 131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 105,
											"end": 131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 105,
											"end": 131,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 105,
											"end": 131,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 105,
											"end": 131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 105,
											"end": 131,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 105,
											"end": 131,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 105,
											"end": 131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 105,
											"end": 131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 105,
											"end": 131,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 105,
											"end": 131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 105,
											"end": 131,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 138,
											"end": 166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 138,
											"end": 166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 138,
											"end": 166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 138,
											"end": 166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 138,
											"end": 166,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 138,
											"end": 166,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 138,
											"end": 166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 138,
											"end": 166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 138,
											"end": 166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 138,
											"end": 166,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 138,
											"end": 166,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 138,
											"end": 166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 138,
											"end": 166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 173,
											"end": 202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 173,
											"end": 202,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 173,
											"end": 202,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 212,
											"end": 634,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 212,
											"end": 634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 276,
											"end": 277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 271,
											"end": 274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 271,
											"end": 277,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 268,
											"end": 627,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 268,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 268,
											"end": 627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 320,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 320,
											"end": 326,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 309,
											"end": 318,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 309,
											"end": 326,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 301,
											"end": 327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 327,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 327,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 301,
											"end": 327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 346,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 341,
											"end": 346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 341,
											"end": 346,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 341,
											"end": 346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 346,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 341,
											"end": 346,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 341,
											"end": 355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 341,
											"end": 355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 356,
											"end": 365,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 341,
											"end": 366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 341,
											"end": 366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 341,
											"end": 366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 366,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 341,
											"end": 366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 341,
											"end": 366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 268,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 268,
											"end": 627,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 268,
											"end": 627,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 268,
											"end": 627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 400,
											"end": 401,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 395,
											"end": 398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 392,
											"end": 627,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 392,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 392,
											"end": 627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 444,
											"end": 448,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 444,
											"end": 448,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 433,
											"end": 442,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 433,
											"end": 448,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 425,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 425,
											"end": 449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 425,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 449,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 425,
											"end": 449,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 425,
											"end": 449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 464,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 469,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 464,
											"end": 469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 464,
											"end": 469,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 464,
											"end": 469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 469,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 464,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 464,
											"end": 469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 464,
											"end": 478,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 464,
											"end": 478,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 479,
											"end": 488,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 464,
											"end": 489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 489,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 464,
											"end": 489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 464,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 392,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 392,
											"end": 627,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 392,
											"end": 627,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 392,
											"end": 627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 523,
											"end": 524,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 518,
											"end": 521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 518,
											"end": 524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 515,
											"end": 627,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 515,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 515,
											"end": 627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 567,
											"end": 574,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 567,
											"end": 574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 556,
											"end": 565,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 556,
											"end": 574,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 548,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 548,
											"end": 575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 548,
											"end": 575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 575,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 548,
											"end": 575,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 548,
											"end": 575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 590,
											"end": 595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 590,
											"end": 595,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 590,
											"end": 595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 590,
											"end": 595,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 590,
											"end": 595,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 590,
											"end": 595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 590,
											"end": 595,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 590,
											"end": 595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 590,
											"end": 595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 590,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 605,
											"end": 614,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 590,
											"end": 615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 590,
											"end": 615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 590,
											"end": 615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 615,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 590,
											"end": 615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 515,
											"end": 627,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 515,
											"end": 627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 392,
											"end": 627,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 392,
											"end": 627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 268,
											"end": 627,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 268,
											"end": 627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 634,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 105,
											"end": 131,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 105,
											"end": 131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 105,
											"end": 131,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 105,
											"end": 131,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 105,
											"end": 131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 105,
											"end": 131,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 138,
											"end": 166,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 138,
											"end": 166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 138,
											"end": 166,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 833,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 611,
											"end": 833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 704,
											"end": 708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 744,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 731,
											"end": 740,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 727,
											"end": 745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 719,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 719,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 755,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 821,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 808,
											"end": 825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 799,
											"end": 805,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 755,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 755,
											"end": 826,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 755,
											"end": 826,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 755,
											"end": 826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 920,
											"end": 997,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 920,
											"end": 997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 957,
											"end": 964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 975,
											"end": 991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 975,
											"end": 991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 920,
											"end": 997,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 920,
											"end": 997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 920,
											"end": 997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 920,
											"end": 997,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1126,
											"end": 1243,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1126,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1233,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1237,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1249,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1249,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1340,
											"end": 1345,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1322,
											"end": 1346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1322,
											"end": 1346,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1322,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1347,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1302,
											"end": 1365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1359,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1363,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1365,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1302,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1249,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1249,
											"end": 1371,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"Diamond()": "6b7d5205",
							"NFT_Funds(uint256)": "ac2bcce4",
							"Silver()": "fe275280",
							"gold()": "fbec6f21"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Diamond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"NFT_Funds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Silver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fund_transfer.sol\":\"NFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/fund_transfer.sol\":{\"keccak256\":\"0xd071f3f64d5a616a36a38a6164085a86b5b5093ad6bce33ea4aee087fb738acc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd12997d928f4f5a905868a60bd665af9a1c4297e123bf66c869deb5cb8d919a\",\"dweb:/ipfs/QmW1oarvBVGtf48mkWxWjPMbGNGhL11SRQu9ZTwNyHbpN9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/fund_transfer.sol:NFT",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 6,
								"contract": "contracts/fund_transfer.sol:NFT",
								"label": "gold",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 9,
								"contract": "contracts/fund_transfer.sol:NFT",
								"label": "Silver",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 12,
								"contract": "contracts/fund_transfer.sol:NFT",
								"label": "Diamond",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/fund_transfer.sol": {
				"ast": {
					"absolutePath": "contracts/fund_transfer.sol",
					"exportedSymbols": {
						"NFT": [
							76
						]
					},
					"id": 77,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 76,
							"linearizedBaseContracts": [
								76
							],
							"name": "NFT",
							"nameLocation": "66:3:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "94:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 76,
									"src": "77:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "77:16:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "fbec6f21",
									"id": 6,
									"mutability": "mutable",
									"name": "gold",
									"nameLocation": "117:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 76,
									"src": "105:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "105:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 5,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "124:7:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2000000000000000000_by_1",
											"typeString": "int_const 2000000000000000000"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fe275280",
									"id": 9,
									"mutability": "mutable",
									"name": "Silver",
									"nameLocation": "150:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 76,
									"src": "138:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 7,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "138:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 8,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "159:7:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6b7d5205",
									"id": 12,
									"mutability": "mutable",
									"name": "Diamond",
									"nameLocation": "185:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 76,
									"src": "173:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "173:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "195:7:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3000000000000000000_by_1",
											"typeString": "int_const 3000000000000000000"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "257:377:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 17,
														"name": "nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "271:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "276:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "271:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 35,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "395:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "400:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "395:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 53,
																"name": "nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "518:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "523:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "518:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 71,
														"nodeType": "IfStatement",
														"src": "515:112:0",
														"trueBody": {
															"id": 70,
															"nodeType": "Block",
															"src": "534:93:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 60,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 57,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "556:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 58,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "value",
																					"nodeType": "MemberAccess",
																					"src": "556:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"id": 59,
																					"name": "Diamond",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 12,
																					"src": "567:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "556:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 56,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967278,
																				4294967278
																			],
																			"referencedDeclaration": 4294967278,
																			"src": "548:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																				"typeString": "function (bool) pure"
																			}
																		},
																		"id": 61,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "548:27:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 62,
																	"nodeType": "ExpressionStatement",
																	"src": "548:27:0"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 66,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "605:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 67,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "value",
																				"nodeType": "MemberAccess",
																				"src": "605:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 63,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3,
																				"src": "590:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"id": 65,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"src": "590:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																				"typeString": "function (uint256)"
																			}
																		},
																		"id": 68,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "590:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 69,
																	"nodeType": "ExpressionStatement",
																	"src": "590:25:0"
																}
															]
														}
													},
													"id": 72,
													"nodeType": "IfStatement",
													"src": "392:235:0",
													"trueBody": {
														"id": 52,
														"nodeType": "Block",
														"src": "411:90:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 42,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 39,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "433:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 40,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "value",
																				"nodeType": "MemberAccess",
																				"src": "433:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 41,
																				"name": "gold",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 6,
																				"src": "444:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "433:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"id": 38,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "425:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																			"typeString": "function (bool) pure"
																		}
																	},
																	"id": 43,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "425:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 44,
																"nodeType": "ExpressionStatement",
																"src": "425:24:0"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 48,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "479:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 49,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "479:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 45,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3,
																			"src": "464:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 47,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"src": "464:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																			"typeString": "function (uint256)"
																		}
																	},
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "464:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 51,
																"nodeType": "ExpressionStatement",
																"src": "464:25:0"
															}
														]
													}
												},
												"id": 73,
												"nodeType": "IfStatement",
												"src": "268:359:0",
												"trueBody": {
													"id": 34,
													"nodeType": "Block",
													"src": "287:91:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 21,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "309:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 22,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "309:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 23,
																			"name": "Silver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "320:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "309:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 20,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "301:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 25,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "301:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 26,
															"nodeType": "ExpressionStatement",
															"src": "301:26:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 30,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "356:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 31,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "356:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 27,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "341:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "341:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "341:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 33,
															"nodeType": "ExpressionStatement",
															"src": "341:25:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "ac2bcce4",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "NFT_Funds",
									"nameLocation": "221:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "237:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "231:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "231:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "230:11:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "257:0:0"
									},
									"scope": 76,
									"src": "212:422:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 77,
							"src": "57:581:0",
							"usedErrors": []
						}
					],
					"src": "32:606:0"
				},
				"id": 0
			}
		}
	}
}