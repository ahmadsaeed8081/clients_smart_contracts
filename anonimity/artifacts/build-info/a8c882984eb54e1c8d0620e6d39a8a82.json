{
	"id": "a8c882984eb54e1c8d0620e6d39a8a82",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"anonimity/1-ETH-Anonymity.sol": {
				"content": "// /**\n//  *Submitted for verification at Etherscan.io on 2022-07-02\n// */\n\n// /**\n//  *Submitted for verification at Etherscan.io on 2022-07-02\n// */\n\n// /**\n//  *Submitted for verification at Etherscan.io on 2022-07-01\n// */\n\n// // File: contracts/math/SafeMath.sol\n\n// pragma solidity <0.6 >=0.4.21;\n\n\n// /**\n//  * @title SafeMath\n//  * @dev Math operations with safety checks that throw on error\n//  */\n// library SafeMath {\n\n//   /**\n//   * @dev Multiplies two numbers, throws on overflow.\n//   */\n\n//   /*@CTK SafeMath_mul\n//     @tag spec\n//     @post __reverted == __has_assertion_failure\n//     @post __has_assertion_failure == __has_overflow\n//     @post __reverted == false -> c == a * b\n//     @post msg == msg__post\n//    */\n//   function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n//     if (a == 0) {\n//       return 0;\n//     }\n//     c = a * b;\n//     assert(c / a == b);\n//     return c;\n//   }\n\n//   /**\n//   * @dev Integer division of two numbers, truncating the quotient.\n//   */\n//   /*@CTK SafeMath_div\n//     @tag spec\n//     @pre b != 0\n//     @post __reverted == __has_assertion_failure\n//     @post __has_overflow == true -> __has_assertion_failure == true\n//     @post __reverted == false -> __return == a / b\n//     @post msg == msg__post\n//    */\n//   function div(uint256 a, uint256 b) internal pure returns (uint256) {\n//     // assert(b > 0); // Solidity automatically throws when dividing by 0\n//     // uint256 c = a / b;\n//     // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n//     return a / b;\n//   }\n\n//   /**\n//   * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n//   */\n//   /*@CTK SafeMath_sub\n//     @tag spec\n//     @post __reverted == __has_assertion_failure\n//     @post __has_overflow == true -> __has_assertion_failure == true\n//     @post __reverted == false -> __return == a - b\n//     @post msg == msg__post\n//    */\n//   function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n//     assert(b <= a);\n//     return a - b;\n//   }\n\n//   /**\n//   * @dev Adds two numbers, throws on overflow.\n//   */\n//   /*@CTK SafeMath_add\n//     @tag spec\n//     @post __reverted == __has_assertion_failure\n//     @post __has_assertion_failure == __has_overflow\n//     @post __reverted == false -> c == a + b\n//     @post msg == msg__post\n//    */\n//   function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n//     c = a + b;\n//     assert(c >= a);\n//     return c;\n//   }\n// }\n\n\n\n\n// /**\n//  * @title ERC20Basic\n//  * @dev Simpler version of ERC20 interface\n//  * @dev see https://github.com/ethereum/EIPs/issues/179\n//  */\n// contract IERC20Basic {\n//   function totalSupply() public view returns (uint256);\n//   function balanceOf(address who) public view returns (uint256);\n//   function transfer(address to, uint256 value) public returns (bool);\n//   event Transfer(address indexed from, address indexed to, uint256 value);\n// }\n\n// // File: contracts/token/IERC20.sol\n\n// pragma solidity <0.6 >=0.4.21;\n\n// /**\n//  * @title ERC20 interface\n//  * @dev see https://github.com/ethereum/EIPs/issues/20\n//  */\n// contract IERC20 is IERC20Basic {\n//   function name() external view returns (string memory);\n//   function symbol() external view returns (string memory);\n//   function allowance(address owner, address spender) public view returns (uint256);\n//   function transferFrom(address from, address to, uint256 value) public returns (bool);\n//   function approve(address spender, uint256 value) public returns (bool);\n//   event Approval(address indexed owner, address indexed spender, uint256 value);\n// }\n\n// // File: contracts/utils/Address.sol\n\n\n// /**\n//  * @dev Collection of functions related to the address type,\n//  */\n// library Address {\n//     /**\n//      * @dev Returns true if `account` is a contract.\n//      *\n//      * This test is non-exhaustive, and there may be false-negatives: during the\n//      * execution of a contract's constructor, its address will be reported as\n//      * not containing a contract.\n//      *\n//      * > It is unsafe to assume that an address for which this function returns\n//      * false is an externally-owned account (EOA) and not a contract.\n//      */\n//     function isContract(address account) internal view returns (bool) {\n//         // This method relies in extcodesize, which returns 0 for contracts in\n//         // construction, since the code is only stored at the end of the\n//         // constructor execution.\n\n//         uint256 size;\n//         // solhint-disable-next-line no-inline-assembly\n//         assembly { size := extcodesize(account) }\n//         return size > 0;\n//     }\n// }\n\n// // File: contracts/token/SafeERC20.sol\n\n// pragma solidity ^0.5.0;\n\n\n// /**\n//  * @title SafeERC20\n//  * @dev Wrappers around ERC20 operations that throw on failure (when the token\n//  * contract returns false). Tokens that return no value (and instead revert or\n//  * throw on failure) are also supported, non-reverting calls are assumed to be\n//  * successful.\n//  * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n//  * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n//  */\n// library SafeERC20 {\n//     using SafeMath for uint256;\n//     using Address for address;\n\n//     function safeTransfer(IERC20 token, address to, uint256 value) internal {\n//         callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n//     }\n\n//     function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n//         callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n//     }\n\n//     function safeApprove(IERC20 token, address spender, uint256 value) internal {\n//         // safeApprove should only be called when setting an initial allowance,\n//         // or when resetting it to zero. To increase and decrease it, use\n//         // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n//         // solhint-disable-next-line max-line-length\n//         require((value == 0) || (token.allowance(address(this), spender) == 0),\n//             \"SafeERC20: approve from non-zero to non-zero allowance\"\n//         );\n//         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n//     }\n\n//     function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n//         uint256 newAllowance = token.allowance(address(this), spender).add(value);\n//         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n//     }\n\n//     function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n//         uint256 newAllowance = token.allowance(address(this), spender).sub(value);\n//         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n//     }\n\n//     /**\n//      * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n//      * on the return value: the return value is optional (but if data is returned, it must not be false).\n//      * @param token The token targeted by the call.\n//      * @param data The call data (encoded using abi.encode or one of its variants).\n//      */\n//     function callOptionalReturn(IERC20 token, bytes memory data) private {\n//         // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n//         // we're implementing it ourselves.\n\n//         // A Solidity high level call has three parts:\n//         //  1. The target address is checked to verify it contains contract code\n//         //  2. The call itself is made, and success asserted\n//         //  3. The return value is decoded, which in turn checks the size of the returned data.\n//         // solhint-disable-next-line max-line-length\n//         require(address(token).isContract(), \"SafeERC20: call to non-contract\");\n\n//         // solhint-disable-next-line avoid-low-level-calls\n//         (bool success, bytes memory returndata) = address(token).call(data);\n//         require(success, \"SafeERC20: low-level call failed\");\n\n//         if (returndata.length > 0) { // Return data is optional\n//             // solhint-disable-next-line max-line-length\n//             require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n//         }\n//     }\n// }\n\n// File: contracts/zksnarklib/MerkleTreeWithHistory.sol\n\npragma solidity <0.6 >=0.4.24;\n\nlibrary Hasher {\n  function MiMCSponge(uint256 in_xL, uint256 in_xR) public pure returns (uint256 xL, uint256 xR);\n}\n\n// contract MerkleTreeWithHistory {\n//   uint256 public constant FIELD_SIZE = 21888242871839275222246405745257275088548364400416034343698204186575808495617;\n//   uint256 public constant ZERO_VALUE = 21663839004416932945382355908790599225266501822907911457504978515578255421292; // = keccak256(\"tornado\") % FIELD_SIZE\n\n//   uint32 public levels;\n\n//   // the following variables are made public for easier testing and debugging and\n//   // are not supposed to be accessed in regular code\n//   bytes32[] public filledSubtrees;\n//   bytes32[] public zeros;\n//   uint32 public currentRootIndex = 0;\n//   uint32 public nextIndex = 0;\n//   uint32 public constant ROOT_HISTORY_SIZE = 100;\n//   bytes32[ROOT_HISTORY_SIZE] public roots;\n\n//   constructor() public {\n//     levels = 20;\n\n//     bytes32 currentZero = bytes32(ZERO_VALUE);\n//     zeros.push(currentZero);\n//     filledSubtrees.push(currentZero);\n\n//     for (uint32 i = 1; i < levels; i++) {\n//       currentZero = hashLeftRight(currentZero, currentZero);\n//       zeros.push(currentZero);\n//       filledSubtrees.push(currentZero);\n//     }\n\n//     roots[0] = hashLeftRight(currentZero, currentZero);\n//   }\n\n//   /**\n//     @dev Hash 2 tree leaves, returns MiMC(_left, _right)\n//   */\n//   function hashLeftRight(bytes32 _left, bytes32 _right) public pure returns (bytes32) {\n//     require(uint256(_left) < FIELD_SIZE, \"_left should be inside the field\");\n//     require(uint256(_right) < FIELD_SIZE, \"_right should be inside the field\");\n//     uint256 R = uint256(_left);\n//     uint256 C = 0;\n//     (R, C) = Hasher.MiMCSponge(R, C);\n//     R = addmod(R, uint256(_right), FIELD_SIZE);\n//     (R, C) = Hasher.MiMCSponge(R, C);\n//     return bytes32(R);\n//   }\n\n//   function _insert(bytes32 _leaf) internal returns(uint32 index) {\n//     uint32 currentIndex = nextIndex;\n//     require(currentIndex != uint32(2)**levels, \"Merkle tree is full. No more leafs can be added\");\n//     nextIndex += 1;\n//     bytes32 currentLevelHash = _leaf;\n//     bytes32 left;\n//     bytes32 right;\n\n//     for (uint32 i = 0; i < levels; i++) {\n//       if (currentIndex % 2 == 0) {\n//         left = currentLevelHash;\n//         right = zeros[i];\n\n//         filledSubtrees[i] = currentLevelHash;\n//       } else {\n//         left = filledSubtrees[i];\n//         right = currentLevelHash;\n//       }\n\n//       currentLevelHash = hashLeftRight(left, right);\n\n//       currentIndex /= 2;\n//     }\n\n//     currentRootIndex = (currentRootIndex + 1) % ROOT_HISTORY_SIZE;\n//     roots[currentRootIndex] = currentLevelHash;\n//     return nextIndex - 1;\n//   }\n\n//   /**\n//     @dev Whether the root is present in the root history\n//   */\n//   function isKnownRoot(bytes32 _root) public view returns(bool) {\n//     if (_root == 0) {\n//       return false;\n//     }\n//     uint32 i = currentRootIndex;\n//     do {\n//       if (_root == roots[i]) {\n//         return true;\n//       }\n//       if (i == 0) {\n//         i = ROOT_HISTORY_SIZE;\n//       }\n//       i--;\n//     } while (i != currentRootIndex);\n//     return false;\n//   }\n\n//   /**\n//     @dev Returns the last root\n//   */\n//   function getLastRoot() public view returns(bytes32) {\n//     return roots[currentRootIndex];\n//   }\n// }\n\n// // File: contracts/zksnarklib/IVerifier.sol\n\n// // pragma solidity <0.6 >=0.4.24;\n\n// contract IVerifier {\n//   function verifyProof(bytes memory _proof, uint256[6] memory _input) public returns(bool);\n//   function verifyNullifier(bytes32 _nullifierHash) public;\n// }\n\n// File: @openzeppelin/contracts/utils/ReentrancyGuard.sol\n\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n */\ncontract ReentrancyGuard {\n    // counter to allow mutex lock with only one SSTORE operation\n    uint256 private _guardCounter;\n\n    constructor () internal {\n        // The counter starts at one to prevent changing it from zero to a non-zero\n        // value, which is a more expensive operation.\n        _guardCounter = 1;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _guardCounter += 1;\n        uint256 localCounter = _guardCounter;\n        _;\n        require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\");\n    }\n}\n\n\n \ninterface IUniswapV2Router02 {\n    function WETH() external pure returns (address);\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n}\n\n// File: contracts/MessierAnonymity.sol\n\ncontract MessierAnonymity {\n\n  // using SafeMath for uint256;\n  // using SafeERC20 for IERC20;\n\n  uint256 private constant MAX = ~uint256(0);\n\n  uint256 public tokenDenomination; \n  uint256 public coinDenomination;\n  uint256 public initM87Denomination;\n  mapping(bytes32 => bool) public commitments; // we store all commitments just to prevent accidental deposits with the same commitment\n  // IVerifier public verifier;\n  // IERC20 public token;\n  // IERC20 public M87Token;\n  address public treasury;\n  address public messier_owner;\n  uint256 public numOfShares;\n  uint256 public lastRewardBlock;\n  uint256 public rewardPerBlock;\n  uint256 public accumulateM87;\n  uint256 public anonymityFee = 0;\n  uint256 private duration = 365;\n  uint256 private numDurationBlocks = duration * 24 * 60 * 4;\n  uint256[5] public shareOfReward = [30, 0, 70, 0, 0];\n  address[4] public poolList;\n  uint256[4] public rewardAmounts;\n  uint256 public collectedFee;\n  uint256 public feeToCollectPercent = 4;\n  uint256 public feeToCollectAmount;\n  uint256 public overMinEth = 250000000000000000;\n  IUniswapV2Router02 public uniswapV2Router;\n  uint256 public curPoolIndex;\n\n  modifier onlyOwner {\n    require(msg.sender == messier_owner, \"Only Owner can call this function.\");\n    _;\n  }\n\n  event Deposit(bytes32 indexed commitment, uint32 leafIndex, uint256 timestamp, uint256 M87Denomination, uint256 anonymityFee);\n  event Withdrawal(address to, bytes32 nullifierHash, address indexed relayer, uint256 reward, uint256 relayerFee);\n  event RewardPerBlockUpdated(uint256 oldValue, uint256 newValue);\n  event AnonymityFeeUpdated(uint256 oldValue, uint256 newValue);\n\n  constructor() public {\n    // verifier = IVerifier(0x1a7578Ce0A6225CcE81406bA51C9168DFA99e912);\n    treasury = msg.sender;\n    // M87Token = IERC20(0x8AF5FedC0f263841C18F31D9DbCC97A47e1aB462);\n    // token = IERC20(0x0000000000000000000000000000000000000000);\n    // messier_owner = msg.sender;\n    // lastRewardBlock = block.number;\n    // initM87Denomination = 0;\n    // coinDenomination = 1000000000000000000;\n    // tokenDenomination = 0;\n    // IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\n    // uniswapV2Router = _uniswapV2Router;\n    // feeToCollectAmount = coinDenomination * feeToCollectPercent / uint256(1000);\n    // poolList = [address(0), address(0), address(0), address(0)];\n    // M87Token.approve(messier_owner, MAX);\n  }\n\n  // function calcAccumulateM87() internal view returns (uint256) {\n  //   uint256 reward = block.number.sub(lastRewardBlock).mul(rewardPerBlock);\n  //   uint256 remaining = M87Token.balanceOf(address(this)).sub(getAccumulateM87());\n  //   if (remaining < reward) {\n  //     reward = remaining;\n  //   }\n  //   return getAccumulateM87().add(reward);\n  // }\n\n  // function updateBlockReward() public {\n  //   uint256 blockNumber = block.number;\n  //   if (blockNumber <= lastRewardBlock) {\n  //     return;\n  //   }\n  //   rewardPerBlock = M87Token.balanceOf(address(this)).div(numDurationBlocks);\n  //   if (rewardPerBlock != 0) {\n  //     accumulateM87 = calcAccumulateM87();\n  //   }\n  //   // always update lastRewardBlock no matter there is sufficient reward or not\n  //   lastRewardBlock = blockNumber;\n  // }\n\n  // function getAccumulateM87() public view returns (uint256) {\n  //   uint256 curBalance = M87Token.balanceOf(address(this));\n  //   if( curBalance < accumulateM87 )\n  //     return curBalance;\n  //   return accumulateM87;\n  // }\n\n  // function M87Denomination() public view returns (uint256) {\n  //   if(collectedFee > overMinEth)\n  //     return 0;\n  //   if (numOfShares == 0) {\n  //     return initM87Denomination;\n  //   }\n  //   uint256 blockNumber = block.number;\n  //   uint256 accM87 = getAccumulateM87();\n  //   if (blockNumber > lastRewardBlock && rewardPerBlock > 0) {\n  //     accM87 = calcAccumulateM87();\n  //   }\n  //   return accM87.add(numOfShares - 1).div(numOfShares);\n  // }\n\n  /**\n    @dev Deposit funds into the contract. The caller must send (for Coin) or approve (for ERC20) value equal to or `denomination` of this instance.\n    @param _commitment the note commitment, which is PedersenHash(nullifier + secret)\n  */\n  // function deposit(bytes32 _commitment) external payable nonReentrant returns (bytes32 commitment, uint32 insertedIndex, uint256 blocktime, uint256 M87Deno, uint256 fee){\n  //   require(!commitments[_commitment], \"The commitment has been submitted\");\n  //   require(msg.value >= coinDenomination, \"insufficient coin amount\");\n\n  //   commitment = _commitment;\n  //   blocktime = block.timestamp;\n  //   uint256 refund = msg.value - coinDenomination;\n  //   insertedIndex = _insert(_commitment);\n  //   commitments[_commitment] = true;\n  //   M87Deno = M87Denomination();\n  //   fee = anonymityFee;\n  //   uint256 td = tokenDenomination;\n  //   if (td > 0) {\n  //     token.safeTransferFrom(msg.sender, address(this), td);\n  //   }\n  //   accumulateM87 += M87Deno;\n  //   numOfShares += 1;\n  //   if (refund > 0) {\n  //     (bool success, ) = msg.sender.call.value(refund)(\"\");\n  //     require(success, \"failed to refund\");\n  //   }\n\n  //   collectedFee += feeToCollectAmount;\n  //   if(collectedFee > overMinEth) {\n  //     // swapAndShare();\n  //   }\n\n  //   updateBlockReward();\n\n\n  //   emit Deposit(_commitment, insertedIndex, block.timestamp, M87Deno, fee);\n  // }\n\n//  function withdraw(bytes calldata _proof, bytes32 _root, bytes32 _nullifierHash, address payable _recipient, address payable _relayer, uint256 _relayerFee, uint256 _refund) external payable nonReentrant {\n//     require(_refund == 0, \"refund is not zero\");\n//     require(!Address.isContract(_recipient), \"recipient of cannot be contract\");\n//     require(isKnownRoot(_root), \"Cannot find your merkle root\"); // Make sure to use a recent one\n//     require(verifier.verifyProof(_proof, [uint256(_root), uint256(_nullifierHash), uint256(_recipient), uint256(_relayer), _relayerFee, _refund]), \"Invalid withdraw proof\");\n\n//     verifier.verifyNullifier(_nullifierHash);\n//     uint256 td = tokenDenomination;\n//     if (td > 0) {\n//       safeTransfer(token, _recipient, td);\n//     }\n//     updateBlockReward();\n//     uint256 relayerFee = 0;\n//     // numOfShares should be larger than 0\n//     uint256 M87Deno = getAccumulateM87().div(numOfShares);\n//     if (M87Deno > 0) {\n//       accumulateM87 -= M87Deno;\n//       safeTransfer(M87Token, _recipient, M87Deno);\n//     }\n//     uint256 cd = coinDenomination - feeToCollectAmount;\n//     if (_relayerFee > cd) {\n//       _relayerFee = cd;\n//     }\n//     if (_relayerFee > 0) {\n//       (bool success,) = _relayer.call.value(_relayerFee)(\"\");\n//       require(success, \"failed to send relayer fee\");\n//       cd -= _relayerFee;\n//     }\n//     if (cd > 0) {\n//       (bool success,) = _recipient.call.value(cd)(\"\");\n//       require(success, \"failed to withdraw coin\");\n//     }\n//     numOfShares -= 1;\n\n//     emit Withdrawal(_recipient, _nullifierHash, _relayer, M87Deno, relayerFee);\n//   }\n\n//   function updateVerifier(address _newVerifier) external onlyOwner {\n//     verifier = IVerifier(_newVerifier);\n//   }\n\n//   function updateM87Token(address _newToken) external onlyOwner {\n//     M87Token = IERC20(_newToken);\n//     M87Token.approve(messier_owner, MAX);\n//   }\n\n//   function changeMessierOwner(address _newOwner) external onlyOwner {\n//     messier_owner = _newOwner;\n//   }\n\n//   function changeTreasury(address _newTreasury) external onlyOwner {\n//     treasury = _newTreasury;\n//   }\n\n//   function setAnonymityFee(uint256 _fee) public onlyOwner {\n//     emit AnonymityFeeUpdated(anonymityFee, _fee);\n//     anonymityFee = _fee;\n//   }\n\n//   // Safe transfer function, just in case if rounding error causes pool to not have enough M87s.\n//   function safeTransfer(IERC20 _token, address _to, uint256 _amount) internal {\n//     uint256 balance = _token.balanceOf(address(this));\n//     if (_amount > balance) {\n//       _token.safeTransfer(_to, balance);\n//     } else {\n//       _token.safeTransfer(_to, _amount);\n//     }\n//   }\n\n//   function setPoolList(address addr1, address addr2, address addr3, address addr4) public onlyOwner {\n//     require( addr1 != address(0) && addr2 != address(0) && addr3 != address(0) && addr4 != address(0), \"Not Zero Address\");\n//     poolList = [addr1, addr2, addr3, addr4];\n//   }\n\n//   function setPoolFee(uint256 burnFee, uint256 fee1, uint256 fee2, uint256 fee3, uint256 fee4) public onlyOwner {\n//     require( burnFee + fee1 + fee2 + fee3 + fee4 == 100, \"Invalid\" );\n//     shareOfReward = [burnFee, fee1, fee2, fee3, fee4];\n//   }\n\n//   function setOverMinETH(uint256 _overMinEth) public onlyOwner {\n//     overMinEth = _overMinEth;\n//   }\n\n//   function swapAndShare() private {\n//     require(collectedFee > 0, \"Insufficient Amount\");\n//     uint256 initialBalance = M87Token.balanceOf(address(this));\n//     // generate the uniswap pair path\n//     address[] memory path = new address[](2);\n//     path[0] = uniswapV2Router.WETH();\n//     path[1] = address(M87Token);\n//     // make the swap\n//     uniswapV2Router.swapExactETHForTokensSupportingFeeOnTransferTokens.value(collectedFee)\n//     (\n//       0, // accept any amount of ETH\n//       path,\n//       address(this),\n//       block.timestamp.mul(2)\n//     );\n\n//     // set to origin\n//     collectedFee = 0;\n\n//     uint256 newBalance = M87Token.balanceOf(address(this)).sub(initialBalance);\n\n//     if( shareOfReward[0] > 0 ) {\n//       M87Token.transfer( address(0x000000000000000000000000000000000000dEaD), newBalance.mul(shareOfReward[0]).div(100) );\n//     }\n\n//     if( poolList[0] != address(0) && shareOfReward[1] > 0 && poolList[0] != address(this) ) {\n//       rewardAmounts[0] = rewardAmounts[0].add( newBalance.mul(shareOfReward[1]).div(100) );\n//       // M87Token.transfer( poolList[0], newBalance.mul(shareOfReward[1]).div(100) );\n//     }\n\n//     if( poolList[1] != address(0) && shareOfReward[2] > 0 && poolList[1] != address(this) ) {\n//       rewardAmounts[1] = rewardAmounts[1].add( newBalance.mul(shareOfReward[2]).div(100) );\n//       // M87Token.transfer( poolList[1], newBalance.mul(shareOfReward[2]).div(100) );\n//     }\n\n//     if( poolList[2] != address(0) && shareOfReward[3] > 0 && poolList[2] != address(this) ) {\n//       rewardAmounts[2] = rewardAmounts[2].add( newBalance.mul(shareOfReward[3]).div(100) );\n//       // M87Token.transfer( poolList[2], newBalance.mul(shareOfReward[3]).div(100) );\n//     }\n\n//     if( poolList[3] != address(0) && shareOfReward[4] > 0 && poolList[3] != address(this) ) {\n//       rewardAmounts[3] = rewardAmounts[3].add( newBalance.mul(shareOfReward[4]).div(100) );\n//       // M87Token.transfer( poolList[3], newBalance.mul(shareOfReward[4]).div(100) );\n//     }\n//   }\n\n//   function forceSwapAndShare() public onlyOwner {\n//     swapAndShare();\n//   }\n\n//   function setDuration(uint256 _duration) public onlyOwner {\n//     duration = _duration;\n//     numDurationBlocks = duration * 24 * 60 * 4;\n//   }\n\n//   function setFeePercent(uint256 _fee) public onlyOwner {\n//     require(_fee < 10, \"Fee can't exceed 1%\");\n//     feeToCollectPercent = _fee;\n//     feeToCollectAmount = coinDenomination * feeToCollectPercent / uint256(1000);\n//   }\n\n//   function version() public pure returns(string memory) {\n//     return \"2.3\";\n//   } \n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"anonimity/1-ETH-Anonymity.sol": {
				"Hasher": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "in_xL",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "in_xR",
									"type": "uint256"
								}
							],
							"name": "MiMCSponge",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "xL",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "xR",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MiMCSponge(uint256,uint256)": "f47d33b5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"in_xL\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"in_xR\",\"type\":\"uint256\"}],\"name\":\"MiMCSponge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"xL\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xR\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"anonimity/1-ETH-Anonymity.sol\":\"Hasher\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"anonimity/1-ETH-Anonymity.sol\":{\"keccak256\":\"0x1d69940ac1886f1b7b1801ef0a7f73bb6792fefc1c5b7df8d64be55b717ad091\",\"urls\":[\"bzz-raw://ef77ec3f5e95a342cd0c326ce1d22ce531dfd5238e6d8baf70af65d6854d02eb\",\"dweb:/ipfs/Qmf8TAvsXnCoTKdoN9QzEhS3A6DK2HAxBG2PmYJ2hzhUp8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IUniswapV2Router02": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"anonimity/1-ETH-Anonymity.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"anonimity/1-ETH-Anonymity.sol\":{\"keccak256\":\"0x1d69940ac1886f1b7b1801ef0a7f73bb6792fefc1c5b7df8d64be55b717ad091\",\"urls\":[\"bzz-raw://ef77ec3f5e95a342cd0c326ce1d22ce531dfd5238e6d8baf70af65d6854d02eb\",\"dweb:/ipfs/Qmf8TAvsXnCoTKdoN9QzEhS3A6DK2HAxBG2PmYJ2hzhUp8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"MessierAnonymity": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldValue",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newValue",
									"type": "uint256"
								}
							],
							"name": "AnonymityFeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "commitment",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "leafIndex",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "M87Denomination",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "anonymityFee",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldValue",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newValue",
									"type": "uint256"
								}
							],
							"name": "RewardPerBlockUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "nullifierHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "relayer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "relayerFee",
									"type": "uint256"
								}
							],
							"name": "Withdrawal",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "accumulateM87",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "anonymityFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "coinDenomination",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "collectedFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "commitments",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "curPoolIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeToCollectAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeToCollectPercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "initM87Denomination",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "lastRewardBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "messier_owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "numOfShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "overMinEth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolList",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "rewardAmounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "shareOfReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "tokenDenomination",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "treasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "uniswapV2Router",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"anonimity/1-ETH-Anonymity.sol\":14108:25468  contract MessierAnonymity {... */\n  mstore(0x40, 0x80)\n    /* \"anonimity/1-ETH-Anonymity.sol\":14804:14805  0 */\n  0x00\n    /* \"anonimity/1-ETH-Anonymity.sol\":14774:14805  uint256 public anonymityFee = 0 */\n  0x0a\n  sstore\n    /* \"anonimity/1-ETH-Anonymity.sol\":14836:14839  365 */\n  0x016d\n    /* \"anonimity/1-ETH-Anonymity.sol\":14809:14839  uint256 private duration = 365 */\n  0x0b\n  sstore\n    /* \"anonimity/1-ETH-Anonymity.sol\":14900:14901  4 */\n  0x04\n    /* \"anonimity/1-ETH-Anonymity.sol\":14895:14897  60 */\n  0x3c\n    /* \"anonimity/1-ETH-Anonymity.sol\":14890:14892  24 */\n  0x18\n    /* \"anonimity/1-ETH-Anonymity.sol\":14879:14887  duration */\n  sload(0x0b)\n    /* \"anonimity/1-ETH-Anonymity.sol\":14879:14892  duration * 24 */\n  mul\n    /* \"anonimity/1-ETH-Anonymity.sol\":14879:14897  duration * 24 * 60 */\n  mul\n    /* \"anonimity/1-ETH-Anonymity.sol\":14879:14901  duration * 24 * 60 * 4 */\n  mul\n    /* \"anonimity/1-ETH-Anonymity.sol\":14843:14901  uint256 private numDurationBlocks = duration * 24 * 60 * 4 */\n  0x0c\n  sstore\n    /* \"anonimity/1-ETH-Anonymity.sol\":14905:14956  uint256[5] public shareOfReward = [30, 0, 70, 0, 0] */\n  mload(0x40)\n  dup1\n  0xa0\n  add\n  0x40\n  mstore\n  dup1\n    /* \"anonimity/1-ETH-Anonymity.sol\":14940:14942  30 */\n  0x1e\n    /* \"anonimity/1-ETH-Anonymity.sol\":14905:14956  uint256[5] public shareOfReward = [30, 0, 70, 0, 0] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"anonimity/1-ETH-Anonymity.sol\":14944:14945  0 */\n  0x00\n    /* \"anonimity/1-ETH-Anonymity.sol\":14905:14956  uint256[5] public shareOfReward = [30, 0, 70, 0, 0] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"anonimity/1-ETH-Anonymity.sol\":14947:14949  70 */\n  0x46\n    /* \"anonimity/1-ETH-Anonymity.sol\":14905:14956  uint256[5] public shareOfReward = [30, 0, 70, 0, 0] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"anonimity/1-ETH-Anonymity.sol\":14951:14952  0 */\n  0x00\n    /* \"anonimity/1-ETH-Anonymity.sol\":14905:14956  uint256[5] public shareOfReward = [30, 0, 70, 0, 0] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"anonimity/1-ETH-Anonymity.sol\":14954:14955  0 */\n  0x00\n    /* \"anonimity/1-ETH-Anonymity.sol\":14905:14956  uint256[5] public shareOfReward = [30, 0, 70, 0, 0] */\n  0xff\n  and\n  dup2\n  mstore\n  pop\n  0x0d\n  swap1\n  0x05\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"anonimity/1-ETH-Anonymity.sol\":15093:15094  4 */\n  0x04\n    /* \"anonimity/1-ETH-Anonymity.sol\":15056:15094  uint256 public feeToCollectPercent = 4 */\n  0x1b\n  sstore\n    /* \"anonimity/1-ETH-Anonymity.sol\":15163:15181  250000000000000000 */\n  0x03782dace9d90000\n    /* \"anonimity/1-ETH-Anonymity.sol\":15135:15181  uint256 public overMinEth = 250000000000000000 */\n  0x1d\n  sstore\n    /* \"anonimity/1-ETH-Anonymity.sol\":15755:16550  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_3:\n    /* \"anonimity/1-ETH-Anonymity.sol\":15755:16550  constructor() public {... */\n  pop\n    /* \"anonimity/1-ETH-Anonymity.sol\":15866:15876  msg.sender */\n  caller\n    /* \"anonimity/1-ETH-Anonymity.sol\":15855:15863  treasury */\n  0x04\n  0x00\n    /* \"anonimity/1-ETH-Anonymity.sol\":15855:15876  treasury = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"anonimity/1-ETH-Anonymity.sol\":14108:25468  contract MessierAnonymity {... */\n  jump(tag_6)\ntag_2:\n  dup3\n  0x05\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_7\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_8:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_9\n  jumpi\n  dup3\n  mload\n  dup3\n  swap1\n  0xff\n  and\n  swap1\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_8)\ntag_9:\ntag_7:\n  pop\n  swap1\n  pop\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n  swap1\n  jump\t// out\ntag_11:\n  tag_12\n  swap2\n  swap1\ntag_13:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_14\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_13)\ntag_14:\n  pop\n  swap1\n  jump\ntag_12:\n  swap1\n  jump\t// out\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"anonimity/1-ETH-Anonymity.sol\":14108:25468  contract MessierAnonymity {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"anonimity/1-ETH-Anonymity.sol\":14108:25468  contract MessierAnonymity {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x839df945\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xb4a61faa\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xb4a61faa\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xca093047\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd27c1824\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe811f50a\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xecaa6503\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x839df945\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8ae39cac\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x997318ec\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9f8d181\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xaf324076\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x3b406fb7\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x3b406fb7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x445cd696\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5129b3e1\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x61d027b3\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6c23cd68\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x1694505e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2a48235b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2d0ec0ff\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3409038c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x34d6a7bf\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"anonimity/1-ETH-Anonymity.sol\":15185:15226  IUniswapV2Router02 public uniswapV2Router */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/1-ETH-Anonymity.sol\":14960:14986  address[4] public poolList */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_29:\n        /* \"anonimity/1-ETH-Anonymity.sol\":14960:14986  address[4] public poolList */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_30\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/1-ETH-Anonymity.sol\":15098:15131  uint256 public feeToCollectAmount */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/1-ETH-Anonymity.sol\":14645:14671  uint256 public numOfShares */\n    tag_6:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/1-ETH-Anonymity.sol\":14613:14641  address public messier_owner */\n    tag_7:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/1-ETH-Anonymity.sol\":14774:14805  uint256 public anonymityFee = 0 */\n    tag_8:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/1-ETH-Anonymity.sol\":14905:14956  uint256[5] public shareOfReward = [30, 0, 70, 0, 0] */\n    tag_9:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_40:\n        /* \"anonimity/1-ETH-Anonymity.sol\":14905:14956  uint256[5] public shareOfReward = [30, 0, 70, 0, 0] */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_41\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/1-ETH-Anonymity.sol\":14253:14285  uint256 public tokenDenomination */\n    tag_10:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/1-ETH-Anonymity.sol\":14586:14609  address public treasury */\n    tag_11:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/1-ETH-Anonymity.sol\":15230:15257  uint256 public curPoolIndex */\n    tag_12:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/1-ETH-Anonymity.sol\":14363:14406  mapping(bytes32 => bool) public commitments */\n    tag_13:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_49:\n        /* \"anonimity/1-ETH-Anonymity.sol\":14363:14406  mapping(bytes32 => bool) public commitments */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/1-ETH-Anonymity.sol\":14709:14738  uint256 public rewardPerBlock */\n    tag_14:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/1-ETH-Anonymity.sol\":14290:14321  uint256 public coinDenomination */\n    tag_15:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/1-ETH-Anonymity.sol\":14675:14705  uint256 public lastRewardBlock */\n    tag_16:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/1-ETH-Anonymity.sol\":14325:14359  uint256 public initM87Denomination */\n    tag_17:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/1-ETH-Anonymity.sol\":14742:14770  uint256 public accumulateM87 */\n    tag_18:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/1-ETH-Anonymity.sol\":14990:15021  uint256[4] public rewardAmounts */\n    tag_19:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_62:\n        /* \"anonimity/1-ETH-Anonymity.sol\":14990:15021  uint256[4] public rewardAmounts */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/1-ETH-Anonymity.sol\":15135:15181  uint256 public overMinEth = 250000000000000000 */\n    tag_20:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/1-ETH-Anonymity.sol\":15025:15052  uint256 public collectedFee */\n    tag_21:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/1-ETH-Anonymity.sol\":15056:15094  uint256 public feeToCollectPercent = 4 */\n    tag_22:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/1-ETH-Anonymity.sol\":15185:15226  IUniswapV2Router02 public uniswapV2Router */\n    tag_27:\n      0x1e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"anonimity/1-ETH-Anonymity.sol\":14960:14986  address[4] public poolList */\n    tag_30:\n      0x12\n      dup2\n      0x04\n      dup2\n      lt\n      tag_70\n      jumpi\n      invalid\n    tag_70:\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"anonimity/1-ETH-Anonymity.sol\":15098:15131  uint256 public feeToCollectAmount */\n    tag_32:\n      sload(0x1c)\n      dup2\n      jump\t// out\n        /* \"anonimity/1-ETH-Anonymity.sol\":14645:14671  uint256 public numOfShares */\n    tag_34:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"anonimity/1-ETH-Anonymity.sol\":14613:14641  address public messier_owner */\n    tag_36:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"anonimity/1-ETH-Anonymity.sol\":14774:14805  uint256 public anonymityFee = 0 */\n    tag_38:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"anonimity/1-ETH-Anonymity.sol\":14905:14956  uint256[5] public shareOfReward = [30, 0, 70, 0, 0] */\n    tag_41:\n      0x0d\n      dup2\n      0x05\n      dup2\n      lt\n      tag_72\n      jumpi\n      invalid\n    tag_72:\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"anonimity/1-ETH-Anonymity.sol\":14253:14285  uint256 public tokenDenomination */\n    tag_43:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"anonimity/1-ETH-Anonymity.sol\":14586:14609  address public treasury */\n    tag_45:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"anonimity/1-ETH-Anonymity.sol\":15230:15257  uint256 public curPoolIndex */\n    tag_47:\n      sload(0x1f)\n      dup2\n      jump\t// out\n        /* \"anonimity/1-ETH-Anonymity.sol\":14363:14406  mapping(bytes32 => bool) public commitments */\n    tag_50:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"anonimity/1-ETH-Anonymity.sol\":14709:14738  uint256 public rewardPerBlock */\n    tag_52:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"anonimity/1-ETH-Anonymity.sol\":14290:14321  uint256 public coinDenomination */\n    tag_54:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"anonimity/1-ETH-Anonymity.sol\":14675:14705  uint256 public lastRewardBlock */\n    tag_56:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"anonimity/1-ETH-Anonymity.sol\":14325:14359  uint256 public initM87Denomination */\n    tag_58:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"anonimity/1-ETH-Anonymity.sol\":14742:14770  uint256 public accumulateM87 */\n    tag_60:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"anonimity/1-ETH-Anonymity.sol\":14990:15021  uint256[4] public rewardAmounts */\n    tag_63:\n      0x16\n      dup2\n      0x04\n      dup2\n      lt\n      tag_74\n      jumpi\n      invalid\n    tag_74:\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"anonimity/1-ETH-Anonymity.sol\":15135:15181  uint256 public overMinEth = 250000000000000000 */\n    tag_65:\n      sload(0x1d)\n      dup2\n      jump\t// out\n        /* \"anonimity/1-ETH-Anonymity.sol\":15025:15052  uint256 public collectedFee */\n    tag_67:\n      sload(0x1a)\n      dup2\n      jump\t// out\n        /* \"anonimity/1-ETH-Anonymity.sol\":15056:15094  uint256 public feeToCollectPercent = 4 */\n    tag_69:\n      sload(0x1b)\n      dup2\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820a08d8bc3a8796614205bdfb3d2e303eb4901fd9bb69c5910055b6defb5548f3a64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526000600a5561016d600b556004603c6018600b54020202600c556040518060a00160405280601e60ff168152602001600060ff168152602001604660ff168152602001600060ff168152602001600060ff16815250600d9060056100699291906100ce565b506004601b556703782dace9d90000601d5534801561008757600080fd5b5033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610138565b8260058101928215610102579160200282015b82811115610101578251829060ff169055916020019190600101906100e1565b5b50905061010f9190610113565b5090565b61013591905b80821115610131576000816000905550600101610119565b5090565b90565b610645806101476000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063839df945116100ad578063b4a61faa11610071578063b4a61faa14610413578063ca09304714610431578063d27c182414610473578063e811f50a14610491578063ecaa6503146104af5761012c565b8063839df945146103555780638ae39cac1461039b578063997318ec146103b9578063a9f8d181146103d7578063af324076146103f55761012c565b80633b406fb7116100f45780633b406fb71461026f578063445cd6961461028d5780635129b3e1146102cf57806361d027b3146102ed5780636c23cd68146103375761012c565b80631694505e146101315780632a48235b1461017b5780632d0ec0ff146101e95780633409038c1461020757806334d6a7bf14610225575b600080fd5b6101396104cd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101a76004803603602081101561019157600080fd5b81019080803590602001909291905050506104f3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101f1610526565b6040518082815260200191505060405180910390f35b61020f61052c565b6040518082815260200191505060405180910390f35b61022d610532565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610277610558565b6040518082815260200191505060405180910390f35b6102b9600480360360208110156102a357600080fd5b810190808035906020019092919050505061055e565b6040518082815260200191505060405180910390f35b6102d7610576565b6040518082815260200191505060405180910390f35b6102f561057c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61033f6105a2565b6040518082815260200191505060405180910390f35b6103816004803603602081101561036b57600080fd5b81019080803590602001909291905050506105a8565b604051808215151515815260200191505060405180910390f35b6103a36105c8565b6040518082815260200191505060405180910390f35b6103c16105ce565b6040518082815260200191505060405180910390f35b6103df6105d4565b6040518082815260200191505060405180910390f35b6103fd6105da565b6040518082815260200191505060405180910390f35b61041b6105e0565b6040518082815260200191505060405180910390f35b61045d6004803603602081101561044757600080fd5b81019080803590602001909291905050506105e6565b6040518082815260200191505060405180910390f35b61047b6105fe565b6040518082815260200191505060405180910390f35b610499610604565b6040518082815260200191505060405180910390f35b6104b761060a565b6040518082815260200191505060405180910390f35b601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6012816004811061050057fe5b016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601c5481565b60065481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b600d816005811061056b57fe5b016000915090505481565b60005481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601f5481565b60036020528060005260406000206000915054906101000a900460ff1681565b60085481565b60015481565b60075481565b60025481565b60095481565b601681600481106105f357fe5b016000915090505481565b601d5481565b601a5481565b601b548156fea265627a7a72315820a08d8bc3a8796614205bdfb3d2e303eb4901fd9bb69c5910055b6defb5548f3a64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0xA SSTORE PUSH2 0x16D PUSH1 0xB SSTORE PUSH1 0x4 PUSH1 0x3C PUSH1 0x18 PUSH1 0xB SLOAD MUL MUL MUL PUSH1 0xC SSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x46 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP PUSH1 0xD SWAP1 PUSH1 0x5 PUSH2 0x69 SWAP3 SWAP2 SWAP1 PUSH2 0xCE JUMP JUMPDEST POP PUSH1 0x4 PUSH1 0x1B SSTORE PUSH8 0x3782DACE9D90000 PUSH1 0x1D SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x138 JUMP JUMPDEST DUP3 PUSH1 0x5 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x102 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x101 JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH1 0xFF AND SWAP1 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xE1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x113 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x135 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x119 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x645 DUP1 PUSH2 0x147 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x839DF945 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB4A61FAA GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB4A61FAA EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0xCA093047 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0xD27C1824 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0xE811F50A EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0xECAA6503 EQ PUSH2 0x4AF JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x839DF945 EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0x8AE39CAC EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x997318EC EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xA9F8D181 EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xAF324076 EQ PUSH2 0x3F5 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x3B406FB7 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x3B406FB7 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x445CD696 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x5129B3E1 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x6C23CD68 EQ PUSH2 0x337 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1694505E EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x2A48235B EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x2D0EC0FF EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x3409038C EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x34D6A7BF EQ PUSH2 0x225 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH2 0x526 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x55E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH2 0x576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH2 0x57C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33F PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A3 PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C1 PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DF PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FD PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41B PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47B PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x499 PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B7 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1E PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 PUSH1 0x4 DUP2 LT PUSH2 0x500 JUMPI INVALID JUMPDEST ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1C SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD DUP2 PUSH1 0x5 DUP2 LT PUSH2 0x56B JUMPI INVALID JUMPDEST ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1F SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 DUP2 PUSH1 0x4 DUP2 LT PUSH2 0x5F3 JUMPI INVALID JUMPDEST ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1D SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1B SLOAD DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 LOG0 DUP14 DUP12 0xC3 0xA8 PUSH26 0x6614205BDFB3D2E303EB4901FD9BB69C5910055B6DEFB5548F3A PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "14108:11360:0:-;;;14804:1;14774:31;;14836:3;14809:30;;14900:1;14895:2;14890;14879:8;;:13;:18;:22;14843:58;;14905:51;;;;;;;;14940:2;14905:51;;;;;;14944:1;14905:51;;;;;;14947:2;14905:51;;;;;;14951:1;14905:51;;;;;;14954:1;14905:51;;;;;;;;;;;;;:::i;:::-;;15093:1;15056:38;;15163:18;15135:46;;15755:795;8:9:-1;5:2;;;30:1;27;20:12;5:2;15755:795:0;15866:10;15855:8;;:21;;;;;;;;;;;;;;;;;;14108:11360;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c8063839df945116100ad578063b4a61faa11610071578063b4a61faa14610413578063ca09304714610431578063d27c182414610473578063e811f50a14610491578063ecaa6503146104af5761012c565b8063839df945146103555780638ae39cac1461039b578063997318ec146103b9578063a9f8d181146103d7578063af324076146103f55761012c565b80633b406fb7116100f45780633b406fb71461026f578063445cd6961461028d5780635129b3e1146102cf57806361d027b3146102ed5780636c23cd68146103375761012c565b80631694505e146101315780632a48235b1461017b5780632d0ec0ff146101e95780633409038c1461020757806334d6a7bf14610225575b600080fd5b6101396104cd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101a76004803603602081101561019157600080fd5b81019080803590602001909291905050506104f3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101f1610526565b6040518082815260200191505060405180910390f35b61020f61052c565b6040518082815260200191505060405180910390f35b61022d610532565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610277610558565b6040518082815260200191505060405180910390f35b6102b9600480360360208110156102a357600080fd5b810190808035906020019092919050505061055e565b6040518082815260200191505060405180910390f35b6102d7610576565b6040518082815260200191505060405180910390f35b6102f561057c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61033f6105a2565b6040518082815260200191505060405180910390f35b6103816004803603602081101561036b57600080fd5b81019080803590602001909291905050506105a8565b604051808215151515815260200191505060405180910390f35b6103a36105c8565b6040518082815260200191505060405180910390f35b6103c16105ce565b6040518082815260200191505060405180910390f35b6103df6105d4565b6040518082815260200191505060405180910390f35b6103fd6105da565b6040518082815260200191505060405180910390f35b61041b6105e0565b6040518082815260200191505060405180910390f35b61045d6004803603602081101561044757600080fd5b81019080803590602001909291905050506105e6565b6040518082815260200191505060405180910390f35b61047b6105fe565b6040518082815260200191505060405180910390f35b610499610604565b6040518082815260200191505060405180910390f35b6104b761060a565b6040518082815260200191505060405180910390f35b601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6012816004811061050057fe5b016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601c5481565b60065481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b600d816005811061056b57fe5b016000915090505481565b60005481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601f5481565b60036020528060005260406000206000915054906101000a900460ff1681565b60085481565b60015481565b60075481565b60025481565b60095481565b601681600481106105f357fe5b016000915090505481565b601d5481565b601a5481565b601b548156fea265627a7a72315820a08d8bc3a8796614205bdfb3d2e303eb4901fd9bb69c5910055b6defb5548f3a64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x839DF945 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB4A61FAA GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB4A61FAA EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0xCA093047 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0xD27C1824 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0xE811F50A EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0xECAA6503 EQ PUSH2 0x4AF JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x839DF945 EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0x8AE39CAC EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x997318EC EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xA9F8D181 EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xAF324076 EQ PUSH2 0x3F5 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x3B406FB7 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x3B406FB7 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x445CD696 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x5129B3E1 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x6C23CD68 EQ PUSH2 0x337 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1694505E EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x2A48235B EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x2D0EC0FF EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x3409038C EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x34D6A7BF EQ PUSH2 0x225 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH2 0x526 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x55E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH2 0x576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH2 0x57C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33F PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A3 PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C1 PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DF PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FD PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41B PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47B PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x499 PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B7 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1E PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 PUSH1 0x4 DUP2 LT PUSH2 0x500 JUMPI INVALID JUMPDEST ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1C SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD DUP2 PUSH1 0x5 DUP2 LT PUSH2 0x56B JUMPI INVALID JUMPDEST ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1F SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 DUP2 PUSH1 0x4 DUP2 LT PUSH2 0x5F3 JUMPI INVALID JUMPDEST ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1D SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1B SLOAD DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 LOG0 DUP14 DUP12 0xC3 0xA8 PUSH26 0x6614205BDFB3D2E303EB4901FD9BB69C5910055B6DEFB5548F3A PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "14108:11360:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14108:11360:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15185:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;14960:26;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14960:26:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;15098:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14645:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14613:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;14774:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14905:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14905:51:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14253:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14586:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;15230:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14363:43;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14363:43:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;14709:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14290:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14675:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14325:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14742:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14990:31;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14990:31:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15135:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15025:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15056:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15185:41;;;;;;;;;;;;;:::o;14960:26::-;;;;;;;;;;;;;;;;;;;;;;;:::o;15098:33::-;;;;:::o;14645:26::-;;;;:::o;14613:28::-;;;;;;;;;;;;;:::o;14774:31::-;;;;:::o;14905:51::-;;;;;;;;;;;;;;;;;;:::o;14253:32::-;;;;:::o;14586:23::-;;;;;;;;;;;;;:::o;15230:27::-;;;;:::o;14363:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;14709:29::-;;;;:::o;14290:31::-;;;;:::o;14675:30::-;;;;:::o;14325:34::-;;;;:::o;14742:28::-;;;;:::o;14990:31::-;;;;;;;;;;;;;;;;;;:::o;15135:46::-;;;;:::o;15025:27::-;;;;:::o;15056:38::-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "321000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"accumulateM87()": "1027",
								"anonymityFee()": "1028",
								"coinDenomination()": "1072",
								"collectedFee()": "1093",
								"commitments(bytes32)": "1223",
								"curPoolIndex()": "1116",
								"feeToCollectAmount()": "1073",
								"feeToCollectPercent()": "1115",
								"initM87Denomination()": "1116",
								"lastRewardBlock()": "1094",
								"messier_owner()": "1165",
								"numOfShares()": "1095",
								"overMinEth()": "1071",
								"poolList(uint256)": "1212",
								"rewardAmounts(uint256)": "1173",
								"rewardPerBlock()": "1050",
								"shareOfReward(uint256)": "1174",
								"tokenDenomination()": "1072",
								"treasury()": "1142",
								"uniswapV2Router()": "1077"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 14108,
									"end": 25468,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "MSTORE"
								},
								{
									"begin": 14804,
									"end": 14805,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 14774,
									"end": 14805,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 14774,
									"end": 14805,
									"name": "SSTORE"
								},
								{
									"begin": 14836,
									"end": 14839,
									"name": "PUSH",
									"value": "16D"
								},
								{
									"begin": 14809,
									"end": 14839,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 14809,
									"end": 14839,
									"name": "SSTORE"
								},
								{
									"begin": 14900,
									"end": 14901,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 14895,
									"end": 14897,
									"name": "PUSH",
									"value": "3C"
								},
								{
									"begin": 14890,
									"end": 14892,
									"name": "PUSH",
									"value": "18"
								},
								{
									"begin": 14879,
									"end": 14887,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 14879,
									"end": 14887,
									"name": "SLOAD"
								},
								{
									"begin": 14879,
									"end": 14892,
									"name": "MUL"
								},
								{
									"begin": 14879,
									"end": 14897,
									"name": "MUL"
								},
								{
									"begin": 14879,
									"end": 14901,
									"name": "MUL"
								},
								{
									"begin": 14843,
									"end": 14901,
									"name": "PUSH",
									"value": "C"
								},
								{
									"begin": 14843,
									"end": 14901,
									"name": "SSTORE"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "MLOAD"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "DUP1"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "ADD"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "MSTORE"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "DUP1"
								},
								{
									"begin": 14940,
									"end": 14942,
									"name": "PUSH",
									"value": "1E"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "AND"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "DUP2"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "MSTORE"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "ADD"
								},
								{
									"begin": 14944,
									"end": 14945,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "AND"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "DUP2"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "MSTORE"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "ADD"
								},
								{
									"begin": 14947,
									"end": 14949,
									"name": "PUSH",
									"value": "46"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "AND"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "DUP2"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "MSTORE"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "ADD"
								},
								{
									"begin": 14951,
									"end": 14952,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "AND"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "DUP2"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "MSTORE"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "ADD"
								},
								{
									"begin": 14954,
									"end": 14955,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "AND"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "DUP2"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "MSTORE"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "POP"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "PUSH",
									"value": "D"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "SWAP1"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "SWAP3"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "SWAP2"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "SWAP1"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "JUMPDEST"
								},
								{
									"begin": 14905,
									"end": 14956,
									"name": "POP"
								},
								{
									"begin": 15093,
									"end": 15094,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 15056,
									"end": 15094,
									"name": "PUSH",
									"value": "1B"
								},
								{
									"begin": 15056,
									"end": 15094,
									"name": "SSTORE"
								},
								{
									"begin": 15163,
									"end": 15181,
									"name": "PUSH",
									"value": "3782DACE9D90000"
								},
								{
									"begin": 15135,
									"end": 15181,
									"name": "PUSH",
									"value": "1D"
								},
								{
									"begin": 15135,
									"end": 15181,
									"name": "SSTORE"
								},
								{
									"begin": 15755,
									"end": 16550,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 15755,
									"end": 16550,
									"name": "POP"
								},
								{
									"begin": 15866,
									"end": 15876,
									"name": "CALLER"
								},
								{
									"begin": 15855,
									"end": 15863,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 15855,
									"end": 15863,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 15855,
									"end": 15876,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 15855,
									"end": 15876,
									"name": "EXP"
								},
								{
									"begin": 15855,
									"end": 15876,
									"name": "DUP2"
								},
								{
									"begin": 15855,
									"end": 15876,
									"name": "SLOAD"
								},
								{
									"begin": 15855,
									"end": 15876,
									"name": "DUP2"
								},
								{
									"begin": 15855,
									"end": 15876,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15855,
									"end": 15876,
									"name": "MUL"
								},
								{
									"begin": 15855,
									"end": 15876,
									"name": "NOT"
								},
								{
									"begin": 15855,
									"end": 15876,
									"name": "AND"
								},
								{
									"begin": 15855,
									"end": 15876,
									"name": "SWAP1"
								},
								{
									"begin": 15855,
									"end": 15876,
									"name": "DUP4"
								},
								{
									"begin": 15855,
									"end": 15876,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15855,
									"end": 15876,
									"name": "AND"
								},
								{
									"begin": 15855,
									"end": 15876,
									"name": "MUL"
								},
								{
									"begin": 15855,
									"end": 15876,
									"name": "OR"
								},
								{
									"begin": 15855,
									"end": 15876,
									"name": "SWAP1"
								},
								{
									"begin": 15855,
									"end": 15876,
									"name": "SSTORE"
								},
								{
									"begin": 15855,
									"end": 15876,
									"name": "POP"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "JUMP"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "JUMPDEST"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "DUP3"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "DUP2"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "ADD"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "SWAP3"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "DUP3"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "ISZERO"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "JUMPI"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "SWAP2"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "MUL"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "DUP3"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "ADD"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "JUMPDEST"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "DUP3"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "DUP2"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "GT"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "ISZERO"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "JUMPI"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "DUP3"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "MLOAD"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "DUP3"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "SWAP1"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "AND"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "SWAP1"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "SSTORE"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "SWAP2"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "ADD"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "SWAP2"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "SWAP1"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "ADD"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "SWAP1"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "JUMP"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "JUMPDEST"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "JUMPDEST"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "POP"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "SWAP1"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "POP"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "SWAP2"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "SWAP1"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "JUMPDEST"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "POP"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "SWAP1"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "JUMPDEST"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "SWAP2"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "SWAP1"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "JUMPDEST"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "DUP1"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "DUP3"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "GT"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "ISZERO"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "JUMPI"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "DUP2"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "SWAP1"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "SSTORE"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "POP"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "ADD"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "JUMP"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "JUMPDEST"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "POP"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "SWAP1"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "JUMP"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "JUMPDEST"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "SWAP1"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "JUMPDEST"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "DUP1"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "CODECOPY"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 14108,
									"end": 25468,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820a08d8bc3a8796614205bdfb3d2e303eb4901fd9bb69c5910055b6defb5548f3a64736f6c63430005110032",
									".code": [
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "MSTORE"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "LT"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "SHR"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "839DF945"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "GT"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "B4A61FAA"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "GT"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "B4A61FAA"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "EQ"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "CA093047"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "EQ"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "D27C1824"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "EQ"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "E811F50A"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "EQ"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "ECAA6503"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "EQ"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMP"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPDEST"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "839DF945"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "EQ"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "8AE39CAC"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "EQ"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "997318EC"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "EQ"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "A9F8D181"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "EQ"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "AF324076"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "EQ"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMP"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPDEST"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "3B406FB7"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "GT"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "3B406FB7"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "EQ"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "445CD696"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "EQ"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "5129B3E1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "EQ"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "61D027B3"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "EQ"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "6C23CD68"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "EQ"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMP"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPDEST"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "1694505E"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "EQ"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "2A48235B"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "EQ"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "2D0EC0FF"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "EQ"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "3409038C"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "EQ"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "34D6A7BF"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "EQ"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPI"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "JUMPDEST"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 25468,
											"name": "REVERT"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "JUMPDEST"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "JUMPDEST"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "MLOAD"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "DUP1"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "DUP3"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "AND"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "AND"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "DUP2"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "MSTORE"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "ADD"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "SWAP2"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "POP"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "POP"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "MLOAD"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "DUP1"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "SWAP2"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "SUB"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "SWAP1"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "RETURN"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "JUMPDEST"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "DUP1"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "DUP2"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "ADD"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "SWAP1"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "DUP1"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "DUP1"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "SWAP1"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "ADD"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "SWAP1"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "SWAP3"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "SWAP2"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "SWAP1"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "POP"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "POP"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "POP"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "JUMPDEST"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "MLOAD"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "DUP1"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "DUP3"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "AND"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "AND"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "DUP2"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "MSTORE"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "ADD"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "SWAP2"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "POP"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "POP"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "MLOAD"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "DUP1"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "SWAP2"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "SUB"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "SWAP1"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "RETURN"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "JUMPDEST"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "JUMPDEST"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "MLOAD"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "DUP1"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "DUP3"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "DUP2"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "MSTORE"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "ADD"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "SWAP2"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "POP"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "POP"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "MLOAD"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "DUP1"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "SWAP2"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "SUB"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "SWAP1"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "RETURN"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "JUMPDEST"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "JUMPDEST"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "MLOAD"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "DUP1"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "DUP3"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "DUP2"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "MSTORE"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "ADD"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "SWAP2"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "POP"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "POP"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "MLOAD"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "DUP1"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "SWAP2"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "SUB"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "SWAP1"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "RETURN"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "JUMPDEST"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "JUMPDEST"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "MLOAD"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "DUP1"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "DUP3"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "AND"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "AND"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "DUP2"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "MSTORE"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "ADD"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "SWAP2"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "POP"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "POP"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "MLOAD"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "DUP1"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "SWAP2"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "SUB"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "SWAP1"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "RETURN"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "JUMPDEST"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "JUMPDEST"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "MLOAD"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "DUP1"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "DUP3"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "DUP2"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "MSTORE"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "ADD"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "SWAP2"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "POP"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "POP"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "MLOAD"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "DUP1"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "SWAP2"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "SUB"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "SWAP1"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "RETURN"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "JUMPDEST"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "DUP1"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "DUP2"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "ADD"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "SWAP1"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "DUP1"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "DUP1"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "SWAP1"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "ADD"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "SWAP1"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "SWAP3"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "SWAP2"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "SWAP1"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "POP"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "POP"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "POP"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "JUMPDEST"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "MLOAD"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "DUP1"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "DUP3"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "DUP2"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "MSTORE"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "ADD"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "SWAP2"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "POP"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "POP"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "MLOAD"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "DUP1"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "SWAP2"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "SUB"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "SWAP1"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "RETURN"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "JUMPDEST"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "JUMPDEST"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "MLOAD"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "DUP1"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "DUP3"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "DUP2"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "MSTORE"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "ADD"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "SWAP2"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "POP"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "POP"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "MLOAD"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "DUP1"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "SWAP2"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "SUB"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "SWAP1"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "RETURN"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "JUMPDEST"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "JUMPDEST"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "MLOAD"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "DUP1"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "DUP3"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "AND"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "AND"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "DUP2"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "MSTORE"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "ADD"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "SWAP2"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "POP"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "POP"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "MLOAD"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "DUP1"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "SWAP2"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "SUB"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "SWAP1"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "RETURN"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "JUMPDEST"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "JUMPDEST"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "MLOAD"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "DUP1"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "DUP3"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "DUP2"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "MSTORE"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "ADD"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "SWAP2"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "POP"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "POP"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "MLOAD"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "DUP1"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "SWAP2"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "SUB"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "SWAP1"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "RETURN"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "JUMPDEST"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "DUP1"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "DUP2"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "ADD"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "SWAP1"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "DUP1"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "DUP1"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "SWAP1"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "ADD"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "SWAP1"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "SWAP3"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "SWAP2"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "SWAP1"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "POP"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "POP"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "POP"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "JUMPDEST"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "MLOAD"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "DUP1"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "DUP3"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "ISZERO"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "ISZERO"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "ISZERO"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "ISZERO"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "DUP2"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "MSTORE"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "ADD"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "SWAP2"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "POP"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "POP"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "MLOAD"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "DUP1"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "SWAP2"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "SUB"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "SWAP1"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "RETURN"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "JUMPDEST"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "JUMPDEST"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "MLOAD"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "DUP1"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "DUP3"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "DUP2"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "MSTORE"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "ADD"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "SWAP2"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "POP"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "POP"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "MLOAD"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "DUP1"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "SWAP2"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "SUB"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "SWAP1"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "RETURN"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "JUMPDEST"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "JUMPDEST"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "MLOAD"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "DUP1"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "DUP3"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "DUP2"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "MSTORE"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "ADD"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "SWAP2"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "POP"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "POP"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "MLOAD"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "DUP1"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "SWAP2"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "SUB"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "SWAP1"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "RETURN"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "JUMPDEST"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "JUMPDEST"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "MLOAD"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "DUP1"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "DUP3"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "DUP2"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "MSTORE"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "ADD"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "SWAP2"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "POP"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "POP"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "MLOAD"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "DUP1"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "SWAP2"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "SUB"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "SWAP1"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "RETURN"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "JUMPDEST"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "JUMPDEST"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "MLOAD"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "DUP1"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "DUP3"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "DUP2"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "MSTORE"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "ADD"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "SWAP2"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "POP"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "POP"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "MLOAD"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "DUP1"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "SWAP2"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "SUB"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "SWAP1"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "RETURN"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "JUMPDEST"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "JUMPDEST"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "MLOAD"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "DUP1"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "DUP3"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "DUP2"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "MSTORE"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "ADD"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "SWAP2"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "POP"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "POP"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "MLOAD"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "DUP1"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "SWAP2"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "SUB"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "SWAP1"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "RETURN"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "JUMPDEST"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "DUP1"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "DUP2"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "ADD"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "SWAP1"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "DUP1"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "DUP1"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "SWAP1"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "ADD"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "SWAP1"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "SWAP3"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "SWAP2"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "SWAP1"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "POP"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "POP"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "POP"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "JUMPDEST"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "MLOAD"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "DUP1"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "DUP3"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "DUP2"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "MSTORE"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "ADD"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "SWAP2"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "POP"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "POP"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "MLOAD"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "DUP1"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "SWAP2"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "SUB"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "SWAP1"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "RETURN"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "JUMPDEST"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "JUMPDEST"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "MLOAD"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "DUP1"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "DUP3"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "DUP2"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "MSTORE"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "ADD"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "SWAP2"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "POP"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "POP"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "MLOAD"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "DUP1"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "SWAP2"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "SUB"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "SWAP1"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "RETURN"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "JUMPDEST"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "JUMPDEST"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "MLOAD"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "DUP1"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "DUP3"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "DUP2"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "MSTORE"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "ADD"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "SWAP2"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "POP"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "POP"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "MLOAD"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "DUP1"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "SWAP2"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "SUB"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "SWAP1"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "RETURN"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "JUMPDEST"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "JUMPDEST"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "MLOAD"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "DUP1"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "DUP3"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "DUP2"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "MSTORE"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "ADD"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "SWAP2"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "POP"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "POP"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "MLOAD"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "DUP1"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "SWAP2"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "SUB"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "SWAP1"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "RETURN"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "JUMPDEST"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "SWAP1"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "SLOAD"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "SWAP1"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "EXP"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "SWAP1"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "DIV"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "AND"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "DUP2"
										},
										{
											"begin": 15185,
											"end": 15226,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "JUMPDEST"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "DUP2"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "DUP2"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "LT"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "JUMPI"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "INVALID"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "JUMPDEST"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "ADD"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "SWAP2"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "POP"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "SLOAD"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "SWAP1"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "EXP"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "SWAP1"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "DIV"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "AND"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "DUP2"
										},
										{
											"begin": 14960,
											"end": 14986,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "JUMPDEST"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "SLOAD"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "DUP2"
										},
										{
											"begin": 15098,
											"end": 15131,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "JUMPDEST"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "SLOAD"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "DUP2"
										},
										{
											"begin": 14645,
											"end": 14671,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "JUMPDEST"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "SWAP1"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "SLOAD"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "SWAP1"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "EXP"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "SWAP1"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "DIV"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "AND"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "DUP2"
										},
										{
											"begin": 14613,
											"end": 14641,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "JUMPDEST"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "SLOAD"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "DUP2"
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "JUMPDEST"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "DUP2"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "DUP2"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "LT"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "JUMPI"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "INVALID"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "JUMPDEST"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "ADD"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "SWAP2"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "POP"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "SWAP1"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "POP"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "SLOAD"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "DUP2"
										},
										{
											"begin": 14905,
											"end": 14956,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "JUMPDEST"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "SLOAD"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "DUP2"
										},
										{
											"begin": 14253,
											"end": 14285,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "JUMPDEST"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "SWAP1"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "SLOAD"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "SWAP1"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "EXP"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "SWAP1"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "DIV"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "AND"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "DUP2"
										},
										{
											"begin": 14586,
											"end": 14609,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "JUMPDEST"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "SLOAD"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "DUP2"
										},
										{
											"begin": 15230,
											"end": 15257,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "JUMPDEST"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "MSTORE"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "DUP1"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "MSTORE"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "KECCAK256"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "SWAP2"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "POP"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "SLOAD"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "SWAP1"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "EXP"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "SWAP1"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "DIV"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "AND"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "DUP2"
										},
										{
											"begin": 14363,
											"end": 14406,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "JUMPDEST"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "SLOAD"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "DUP2"
										},
										{
											"begin": 14709,
											"end": 14738,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "JUMPDEST"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "SLOAD"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "DUP2"
										},
										{
											"begin": 14290,
											"end": 14321,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "JUMPDEST"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "SLOAD"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "DUP2"
										},
										{
											"begin": 14675,
											"end": 14705,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "JUMPDEST"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "SLOAD"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "DUP2"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "JUMPDEST"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "SLOAD"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "DUP2"
										},
										{
											"begin": 14742,
											"end": 14770,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "JUMPDEST"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "PUSH",
											"value": "16"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "DUP2"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "DUP2"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "LT"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "JUMPI"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "INVALID"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "JUMPDEST"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "ADD"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "SWAP2"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "POP"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "SWAP1"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "POP"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "SLOAD"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "DUP2"
										},
										{
											"begin": 14990,
											"end": 15021,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "JUMPDEST"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "PUSH",
											"value": "1D"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "SLOAD"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "DUP2"
										},
										{
											"begin": 15135,
											"end": 15181,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "JUMPDEST"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "SLOAD"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "DUP2"
										},
										{
											"begin": 15025,
											"end": 15052,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "JUMPDEST"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "SLOAD"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "DUP2"
										},
										{
											"begin": 15056,
											"end": 15094,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"accumulateM87()": "b4a61faa",
							"anonymityFee()": "3b406fb7",
							"coinDenomination()": "997318ec",
							"collectedFee()": "e811f50a",
							"commitments(bytes32)": "839df945",
							"curPoolIndex()": "6c23cd68",
							"feeToCollectAmount()": "2d0ec0ff",
							"feeToCollectPercent()": "ecaa6503",
							"initM87Denomination()": "af324076",
							"lastRewardBlock()": "a9f8d181",
							"messier_owner()": "34d6a7bf",
							"numOfShares()": "3409038c",
							"overMinEth()": "d27c1824",
							"poolList(uint256)": "2a48235b",
							"rewardAmounts(uint256)": "ca093047",
							"rewardPerBlock()": "8ae39cac",
							"shareOfReward(uint256)": "445cd696",
							"tokenDenomination()": "5129b3e1",
							"treasury()": "61d027b3",
							"uniswapV2Router()": "1694505e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"AnonymityFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"leafIndex\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"M87Denomination\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"anonymityFee\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"RewardPerBlockUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"nullifierHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"relayerFee\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"accumulateM87\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"anonymityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coinDenomination\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"collectedFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"commitments\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"curPoolIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeToCollectAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeToCollectPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initM87Denomination\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastRewardBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"messier_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numOfShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"overMinEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewardAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"shareOfReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenDenomination\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"anonimity/1-ETH-Anonymity.sol\":\"MessierAnonymity\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"anonimity/1-ETH-Anonymity.sol\":{\"keccak256\":\"0x1d69940ac1886f1b7b1801ef0a7f73bb6792fefc1c5b7df8d64be55b717ad091\",\"urls\":[\"bzz-raw://ef77ec3f5e95a342cd0c326ce1d22ce531dfd5238e6d8baf70af65d6854d02eb\",\"dweb:/ipfs/Qmf8TAvsXnCoTKdoN9QzEhS3A6DK2HAxBG2PmYJ2hzhUp8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 69,
								"contract": "anonimity/1-ETH-Anonymity.sol:MessierAnonymity",
								"label": "tokenDenomination",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 71,
								"contract": "anonimity/1-ETH-Anonymity.sol:MessierAnonymity",
								"label": "coinDenomination",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 73,
								"contract": "anonimity/1-ETH-Anonymity.sol:MessierAnonymity",
								"label": "initM87Denomination",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 77,
								"contract": "anonimity/1-ETH-Anonymity.sol:MessierAnonymity",
								"label": "commitments",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_bytes32,t_bool)"
							},
							{
								"astId": 79,
								"contract": "anonimity/1-ETH-Anonymity.sol:MessierAnonymity",
								"label": "treasury",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 81,
								"contract": "anonimity/1-ETH-Anonymity.sol:MessierAnonymity",
								"label": "messier_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 83,
								"contract": "anonimity/1-ETH-Anonymity.sol:MessierAnonymity",
								"label": "numOfShares",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 85,
								"contract": "anonimity/1-ETH-Anonymity.sol:MessierAnonymity",
								"label": "lastRewardBlock",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 87,
								"contract": "anonimity/1-ETH-Anonymity.sol:MessierAnonymity",
								"label": "rewardPerBlock",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 89,
								"contract": "anonimity/1-ETH-Anonymity.sol:MessierAnonymity",
								"label": "accumulateM87",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 92,
								"contract": "anonimity/1-ETH-Anonymity.sol:MessierAnonymity",
								"label": "anonymityFee",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 95,
								"contract": "anonimity/1-ETH-Anonymity.sol:MessierAnonymity",
								"label": "duration",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 104,
								"contract": "anonimity/1-ETH-Anonymity.sol:MessierAnonymity",
								"label": "numDurationBlocks",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 114,
								"contract": "anonimity/1-ETH-Anonymity.sol:MessierAnonymity",
								"label": "shareOfReward",
								"offset": 0,
								"slot": "13",
								"type": "t_array(t_uint256)5_storage"
							},
							{
								"astId": 118,
								"contract": "anonimity/1-ETH-Anonymity.sol:MessierAnonymity",
								"label": "poolList",
								"offset": 0,
								"slot": "18",
								"type": "t_array(t_address)4_storage"
							},
							{
								"astId": 122,
								"contract": "anonimity/1-ETH-Anonymity.sol:MessierAnonymity",
								"label": "rewardAmounts",
								"offset": 0,
								"slot": "22",
								"type": "t_array(t_uint256)4_storage"
							},
							{
								"astId": 124,
								"contract": "anonimity/1-ETH-Anonymity.sol:MessierAnonymity",
								"label": "collectedFee",
								"offset": 0,
								"slot": "26",
								"type": "t_uint256"
							},
							{
								"astId": 127,
								"contract": "anonimity/1-ETH-Anonymity.sol:MessierAnonymity",
								"label": "feeToCollectPercent",
								"offset": 0,
								"slot": "27",
								"type": "t_uint256"
							},
							{
								"astId": 129,
								"contract": "anonimity/1-ETH-Anonymity.sol:MessierAnonymity",
								"label": "feeToCollectAmount",
								"offset": 0,
								"slot": "28",
								"type": "t_uint256"
							},
							{
								"astId": 132,
								"contract": "anonimity/1-ETH-Anonymity.sol:MessierAnonymity",
								"label": "overMinEth",
								"offset": 0,
								"slot": "29",
								"type": "t_uint256"
							},
							{
								"astId": 134,
								"contract": "anonimity/1-ETH-Anonymity.sol:MessierAnonymity",
								"label": "uniswapV2Router",
								"offset": 0,
								"slot": "30",
								"type": "t_contract(IUniswapV2Router02)61"
							},
							{
								"astId": 136,
								"contract": "anonimity/1-ETH-Anonymity.sol:MessierAnonymity",
								"label": "curPoolIndex",
								"offset": 0,
								"slot": "31",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)4_storage": {
								"base": "t_address",
								"encoding": "inplace",
								"label": "address[4]",
								"numberOfBytes": "128"
							},
							"t_array(t_uint256)4_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[4]",
								"numberOfBytes": "128"
							},
							"t_array(t_uint256)5_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[5]",
								"numberOfBytes": "160"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IUniswapV2Router02)61": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_bytes32,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. * Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them.",
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. * Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"anonimity/1-ETH-Anonymity.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"anonimity/1-ETH-Anonymity.sol\":{\"keccak256\":\"0x1d69940ac1886f1b7b1801ef0a7f73bb6792fefc1c5b7df8d64be55b717ad091\",\"urls\":[\"bzz-raw://ef77ec3f5e95a342cd0c326ce1d22ce531dfd5238e6d8baf70af65d6854d02eb\",\"dweb:/ipfs/Qmf8TAvsXnCoTKdoN9QzEhS3A6DK2HAxBG2PmYJ2hzhUp8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "anonimity/1-ETH-Anonymity.sol:ReentrancyGuard",
								"label": "_guardCounter",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"anonimity/1-ETH-Anonymity.sol": {
				"ast": {
					"absolutePath": "anonimity/1-ETH-Anonymity.sol",
					"exportedSymbols": {
						"Hasher": [
							13
						],
						"IUniswapV2Router02": [
							61
						],
						"MessierAnonymity": [
							194
						],
						"ReentrancyGuard": [
							43
						]
					},
					"id": 195,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"<",
								"0.6",
								">=",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "8633:30:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": false,
							"id": 13,
							"linearizedBaseContracts": [
								13
							],
							"name": "Hasher",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MiMCSponge",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "in_xL",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "8704:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8704:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "in_xR",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "8719:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8703:30:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "xL",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "8755:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"name": "xR",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "8767:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8767:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8754:24:0"
									},
									"scope": 13,
									"src": "8684:95:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 195,
							"src": "8665:116:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@dev Contract module that helps prevent reentrant calls to a function.\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\navailable, which can be applied to functions to make sure there are no nested\n(reentrant) calls to them.\n * Note that because there is a single `nonReentrant` guard, functions marked as\n`nonReentrant` may not call one another. This can be worked around by making\nthose functions `private`, and then adding `external` `nonReentrant` entry\npoints to them.",
							"fullyImplemented": true,
							"id": 43,
							"linearizedBaseContracts": [
								43
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 15,
									"name": "_guardCounter",
									"nodeType": "VariableDeclaration",
									"scope": 43,
									"src": "12975:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 14,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12975:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "13035:173:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 18,
														"name": "_guardCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "13184:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 19,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13200:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "13184:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "13184:17:0"
											}
										]
									},
									"documentation": null,
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13023:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13035:0:0"
									},
									"scope": 43,
									"src": "13011:197:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "13607:175:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 25,
														"name": "_guardCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "13617:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13634:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "13617:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "13617:18:0"
											},
											{
												"assignments": [
													30
												],
												"declarations": [
													{
														"constant": false,
														"id": 30,
														"name": "localCounter",
														"nodeType": "VariableDeclaration",
														"scope": 41,
														"src": "13645:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 29,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13645:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 32,
												"initialValue": {
													"argumentTypes": null,
													"id": 31,
													"name": "_guardCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 15,
													"src": "13668:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13645:36:0"
											},
											{
												"id": 33,
												"nodeType": "PlaceholderStatement",
												"src": "13691:1:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 35,
																"name": "localCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "13710:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 36,
																"name": "_guardCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "13726:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13710:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13741:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 34,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															212,
															213
														],
														"referencedDeclaration": 213,
														"src": "13702:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13702:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "13702:73:0"
											}
										]
									},
									"documentation": "@dev Prevents a contract from calling itself, directly or indirectly.\nCalling a `nonReentrant` function from another `nonReentrant`\nfunction is not supported. It is possible to prevent this from happening\nby making the `nonReentrant` function external, and make it call a\n`private` function that does the actual work.",
									"id": 42,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13604:2:0"
									},
									"src": "13583:199:0",
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "12878:906:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 61,
							"linearizedBaseContracts": [
								61
							],
							"name": "IUniswapV2Router02",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13837:2:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "13863:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13863:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13862:9:0"
									},
									"scope": 61,
									"src": "13824:48:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "13946:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13946:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "13973:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 51,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "13973:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 52,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "13973:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "14006:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14006:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "14026:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14026:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13936:109:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14062:0:0"
									},
									"scope": 61,
									"src": "13877:186:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 195,
							"src": "13789:276:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194
							],
							"name": "MessierAnonymity",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 67,
									"name": "MAX",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "14206:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 62,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "14206:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"id": 66,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "14237:11:0",
										"subExpression": {
											"argumentTypes": null,
											"arguments": [
												{
													"argumentTypes": null,
													"hexValue": "30",
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14246:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 63,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "14238:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint256_$",
													"typeString": "type(uint256)"
												},
												"typeName": "uint256"
											},
											"id": 65,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "14238:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 69,
									"name": "tokenDenomination",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "14253:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 68,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "14253:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 71,
									"name": "coinDenomination",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "14290:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 70,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "14290:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 73,
									"name": "initM87Denomination",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "14325:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 72,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "14325:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 77,
									"name": "commitments",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "14363:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
										"typeString": "mapping(bytes32 => bool)"
									},
									"typeName": {
										"id": 76,
										"keyType": {
											"id": 74,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "14371:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "14363:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
											"typeString": "mapping(bytes32 => bool)"
										},
										"valueType": {
											"id": 75,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "14382:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 79,
									"name": "treasury",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "14586:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 78,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "14586:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 81,
									"name": "messier_owner",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "14613:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 80,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "14613:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 83,
									"name": "numOfShares",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "14645:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 82,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "14645:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 85,
									"name": "lastRewardBlock",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "14675:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 84,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "14675:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 87,
									"name": "rewardPerBlock",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "14709:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 86,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "14709:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 89,
									"name": "accumulateM87",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "14742:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 88,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "14742:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 92,
									"name": "anonymityFee",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "14774:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 90,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "14774:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 91,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14804:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 95,
									"name": "duration",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "14809:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "14809:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "333635",
										"id": 94,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14836:3:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_365_by_1",
											"typeString": "int_const 365"
										},
										"value": "365"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 104,
									"name": "numDurationBlocks",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "14843:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "14843:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 103,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 101,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"argumentTypes": null,
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 99,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"argumentTypes": null,
													"id": 97,
													"name": "duration",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 95,
													"src": "14879:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"argumentTypes": null,
													"hexValue": "3234",
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14890:2:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_24_by_1",
														"typeString": "int_const 24"
													},
													"value": "24"
												},
												"src": "14879:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"argumentTypes": null,
												"hexValue": "3630",
												"id": 100,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "14895:2:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_60_by_1",
													"typeString": "int_const 60"
												},
												"value": "60"
											},
											"src": "14879:18:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "34",
											"id": 102,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "14900:1:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_4_by_1",
												"typeString": "int_const 4"
											},
											"value": "4"
										},
										"src": "14879:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 114,
									"name": "shareOfReward",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "14905:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$5_storage",
										"typeString": "uint256[5]"
									},
									"typeName": {
										"baseType": {
											"id": 105,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "14905:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 107,
										"length": {
											"argumentTypes": null,
											"hexValue": "35",
											"id": 106,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "14913:1:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_5_by_1",
												"typeString": "int_const 5"
											},
											"value": "5"
										},
										"nodeType": "ArrayTypeName",
										"src": "14905:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
											"typeString": "uint256[5]"
										}
									},
									"value": {
										"argumentTypes": null,
										"components": [
											{
												"argumentTypes": null,
												"hexValue": "3330",
												"id": 108,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "14940:2:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_30_by_1",
													"typeString": "int_const 30"
												},
												"value": "30"
											},
											{
												"argumentTypes": null,
												"hexValue": "30",
												"id": 109,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "14944:1:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											},
											{
												"argumentTypes": null,
												"hexValue": "3730",
												"id": 110,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "14947:2:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_70_by_1",
													"typeString": "int_const 70"
												},
												"value": "70"
											},
											{
												"argumentTypes": null,
												"hexValue": "30",
												"id": 111,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "14951:1:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											},
											{
												"argumentTypes": null,
												"hexValue": "30",
												"id": 112,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "14954:1:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"id": 113,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "14939:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
											"typeString": "uint8[5] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 118,
									"name": "poolList",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "14960:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$4_storage",
										"typeString": "address[4]"
									},
									"typeName": {
										"baseType": {
											"id": 115,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "14960:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 117,
										"length": {
											"argumentTypes": null,
											"hexValue": "34",
											"id": 116,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "14968:1:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_4_by_1",
												"typeString": "int_const 4"
											},
											"value": "4"
										},
										"nodeType": "ArrayTypeName",
										"src": "14960:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$4_storage_ptr",
											"typeString": "address[4]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 122,
									"name": "rewardAmounts",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "14990:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$4_storage",
										"typeString": "uint256[4]"
									},
									"typeName": {
										"baseType": {
											"id": 119,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "14990:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 121,
										"length": {
											"argumentTypes": null,
											"hexValue": "34",
											"id": 120,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "14998:1:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_4_by_1",
												"typeString": "int_const 4"
											},
											"value": "4"
										},
										"nodeType": "ArrayTypeName",
										"src": "14990:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
											"typeString": "uint256[4]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 124,
									"name": "collectedFee",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "15025:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 123,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "15025:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 127,
									"name": "feeToCollectPercent",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "15056:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 125,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "15056:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "34",
										"id": 126,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "15093:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 129,
									"name": "feeToCollectAmount",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "15098:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 128,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "15098:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 132,
									"name": "overMinEth",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "15135:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 130,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "15135:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "323530303030303030303030303030303030",
										"id": 131,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "15163:18:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_250000000000000000_by_1",
											"typeString": "int_const 250000000000000000"
										},
										"value": "250000000000000000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 134,
									"name": "uniswapV2Router",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "15185:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$61",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"contractScope": null,
										"id": 133,
										"name": "IUniswapV2Router02",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 61,
										"src": "15185:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$61",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 136,
									"name": "curPoolIndex",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "15230:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 135,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "15230:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "15281:92:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 139,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "15295:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "15295:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 141,
																"name": "messier_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 81,
																"src": "15309:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15295:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f6e6c79204f776e65722063616e2063616c6c20746869732066756e6374696f6e2e",
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15324:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0e71a241197b393744b5df81fa847ab1c2bee75202755ee59d1abfcc113d1380",
																"typeString": "literal_string \"Only Owner can call this function.\""
															},
															"value": "Only Owner can call this function."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0e71a241197b393744b5df81fa847ab1c2bee75202755ee59d1abfcc113d1380",
																"typeString": "literal_string \"Only Owner can call this function.\""
															}
														],
														"id": 138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															212,
															213
														],
														"referencedDeclaration": 213,
														"src": "15287:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15287:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "15287:74:0"
											},
											{
												"id": 146,
												"nodeType": "PlaceholderStatement",
												"src": "15367:1:0"
											}
										]
									},
									"documentation": null,
									"id": 148,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15281:0:0"
									},
									"src": "15262:111:0",
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 160,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"indexed": true,
												"name": "commitment",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "15391:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"indexed": false,
												"name": "leafIndex",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "15419:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 151,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15419:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"indexed": false,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "15437:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"indexed": false,
												"name": "M87Denomination",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "15456:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15456:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"indexed": false,
												"name": "anonymityFee",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "15481:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15390:112:0"
									},
									"src": "15377:126:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 172,
									"name": "Withdrawal",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": false,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "15523:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15523:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": false,
												"name": "nullifierHash",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "15535:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 163,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15535:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": true,
												"name": "relayer",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "15558:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15558:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"indexed": false,
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "15583:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"name": "relayerFee",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "15599:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15522:96:0"
									},
									"src": "15506:113:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 178,
									"name": "RewardPerBlockUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"indexed": false,
												"name": "oldValue",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "15650:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15650:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": false,
												"name": "newValue",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "15668:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15649:36:0"
									},
									"src": "15622:64:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 184,
									"name": "AnonymityFeeUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"indexed": false,
												"name": "oldValue",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "15715:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"indexed": false,
												"name": "newValue",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "15733:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15714:36:0"
									},
									"src": "15689:62:0"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "15776:774:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 187,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "15855:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 188,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "15866:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15866:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "15855:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "15855:21:0"
											}
										]
									},
									"documentation": null,
									"id": 193,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15766:2:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15776:0:0"
									},
									"scope": 194,
									"src": "15755:795:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 195,
							"src": "14108:11360:0"
						}
					],
					"src": "8633:16836:0"
				},
				"id": 0
			}
		}
	}
}