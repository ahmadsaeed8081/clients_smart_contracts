{
	"id": "1b512c0300b366d95555c6e87e9ddef0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"anonimity/0.1-ETH-Router.sol": {
				"content": "/**\n *Submitted for verification at Etherscan.io on 2021-04-23\n*/\n\n// File: contracts/token/IERC20Basic.sol\n\npragma solidity <0.6 >=0.4.21;\n\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract IERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n// File: contracts/token/IERC20.sol\n\npragma solidity <0.6 >=0.4.21;\n\n\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract IERC20 is IERC20Basic {\n  function name() external view returns (string memory);\n  function symbol() external view returns (string memory);\n  function allowance(address owner, address spender) public view returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// File: contracts/IMessierV2dot2.sol\n\npragma solidity <0.6 >=0.4.24;\n\n\ninterface IMessierV2dot2 {\n\n  function coinDenomination() external view returns (uint256);\n  function tokenDenomination() external view returns (uint256);\n  function M87Denomination() external view returns (uint256);\n  function token() external view returns (IERC20);\n  function M87Token() external view returns (IERC20);\n  function deposit(bytes32 _commitment) external payable returns (bytes32, uint32, uint256, uint256, uint256);\n  function withdraw(bytes calldata _proof, bytes32 _root, bytes32 _nullifierHash, address payable _recipient, address payable _relayer, uint256 _fee, uint256 _refund) external payable;\n  function anonymityFee() external view returns (uint256);\n}\n\n// File: contracts/math/SafeMath.sol\n\npragma solidity <0.6 >=0.4.21;\n\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n\n  /*@CTK SafeMath_mul\n    @tag spec\n    @post __reverted == __has_assertion_failure\n    @post __has_assertion_failure == __has_overflow\n    @post __reverted == false -> c == a * b\n    @post msg == msg__post\n   */\n  /* CertiK Smart Labelling, for more details visit: https://certik.org */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    if (a == 0) {\n      return 0;\n    }\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  /*@CTK SafeMath_div\n    @tag spec\n    @pre b != 0\n    @post __reverted == __has_assertion_failure\n    @post __has_overflow == true -> __has_assertion_failure == true\n    @post __reverted == false -> __return == a / b\n    @post msg == msg__post\n   */\n  /* CertiK Smart Labelling, for more details visit: https://certik.org */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  /*@CTK SafeMath_sub\n    @tag spec\n    @post __reverted == __has_assertion_failure\n    @post __has_overflow == true -> __has_assertion_failure == true\n    @post __reverted == false -> __return == a - b\n    @post msg == msg__post\n   */\n  /* CertiK Smart Labelling, for more details visit: https://certik.org */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  /*@CTK SafeMath_add\n    @tag spec\n    @post __reverted == __has_assertion_failure\n    @post __has_assertion_failure == __has_overflow\n    @post __reverted == false -> c == a + b\n    @post msg == msg__post\n   */\n  /* CertiK Smart Labelling, for more details visit: https://certik.org */\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n// File: contracts/utils/Address.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @dev Collection of functions related to the address type,\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * This test is non-exhaustive, and there may be false-negatives: during the\n     * execution of a contract's constructor, its address will be reported as\n     * not containing a contract.\n     *\n     * > It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies in extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n}\n\n// File: contracts/token/SafeERC20.sol\n\npragma solidity ^0.5.0;\n\n\n\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value);\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves.\n\n        // A Solidity high level call has three parts:\n        //  1. The target address is checked to verify it contains contract code\n        //  2. The call itself is made, and success asserted\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\n        // solhint-disable-next-line max-line-length\n        require(address(token).isContract(), \"SafeERC20: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = address(token).call(data);\n        require(success, \"SafeERC20: low-level call failed\");\n\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n\n// File: contracts/uniswapv2/IRouter.sol\n\npragma solidity >=0.5.0 <0.8.0;\n\ninterface IRouter {\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function swapETHForExactTokens(\n        uint amountOut,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable returns (uint[] memory amounts);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function getAmountsIn(uint256 amountOut, address[] calldata path) external view returns (uint256[] memory amounts);\n}\n\n// File: contracts/uniswapv2/MessierWrapper.sol\n\npragma solidity <0.6 >=0.4.24;\n\n\n\n\n\ncontract MessierWrapper {\n  using SafeMath for uint256;\n  using SafeERC20 for IERC20;\n  IRouter public router;\n  address public wrappedCoin;\n  address public messierAddr;\n  mapping(address => bool) public whitelisted;\n\n  event Deposit(bytes32 indexed commitment, uint32 leafIndex, uint256 timestamp, uint256 M87Denomination, uint256 anonymityFee);\n\n  constructor(IRouter _router, address _wrappedCoin, address _messierAddr) public {\n    router = _router;\n    wrappedCoin = _wrappedCoin;\n    messierAddr = _messierAddr;\n    IMessierV2dot2 _messier = IMessierV2dot2(messierAddr);\n    IERC20 token = _messier.token();\n    if (address(token) != address(0)) {\n        token.safeApprove(messierAddr, uint256(-1));\n    }\n  }\n\n  function () external payable {}\n\n  function purchaseCost(IMessierV2dot2 _messier) external view returns (uint256) {\n    uint256 M87Amount = _messier.M87Denomination().add(_messier.anonymityFee());\n    if (M87Amount == 0) {\n        return 0;\n    }\n    address[] memory paths = new address[](2);\n    paths[0] = wrappedCoin;\n    paths[1] = address(_messier.M87Token());\n    uint256[] memory amounts = router.getAmountsIn(M87Amount, paths);\n    return amounts[0];\n  }\n\n  function deposit(IMessierV2dot2 _messier, bytes32 _commitment, bool _buyM87) external payable {\n    require(address(_messier) == messierAddr, \"not whitelisted\");\n    uint256 coinAmount = _messier.coinDenomination();\n    require(msg.value >= coinAmount, \"MessierWrapper: insufficient coin!\");\n    uint256 tokenAmount = _messier.tokenDenomination();\n    uint256 M87Amount = _messier.M87Denomination().add(_messier.anonymityFee());\n    uint256 remainingCoin = msg.value.sub(coinAmount);\n    if (tokenAmount > 0) {\n      _messier.token().safeTransferFrom(msg.sender, address(this), tokenAmount);\n    }\n    if (M87Amount > 0) {\n      if (_buyM87) {\n        address[] memory path = new address[](2);\n        path[0] = wrappedCoin;\n        path[1] = address(_messier.M87Token());\n        uint256[] memory amounts = router.swapETHForExactTokens.value(remainingCoin)(M87Amount, path, address(_messier), block.timestamp.mul(2));\n        require(remainingCoin >= amounts[0], \"MessierWrapper: unexpected status\");\n        remainingCoin -= amounts[0];\n      } else {\n        _messier.M87Token().safeTransferFrom(msg.sender, address(_messier), M87Amount);\n      }\n    }\n    bytes32 commitment;\n    uint32 insertedIndex;\n    uint256 blocktime;\n    uint256 M87Deno;\n    uint256 fee;\n    (commitment, insertedIndex, blocktime, M87Deno, fee) = _messier.deposit.value(coinAmount)(_commitment);\n    emit Deposit( commitment, insertedIndex, blocktime, M87Deno, fee );\n    if (remainingCoin > 0) {\n      (bool success,) = msg.sender.call.value(remainingCoin)(\"\");\n      require(success, 'MessierWrapper: refund');\n    }\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"anonimity/0.1-ETH-Router.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type,",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"anonimity/0.1-ETH-Router.sol\":4479:5342  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"anonimity/0.1-ETH-Router.sol\":4479:5342  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820869f88e294d0cc1b8b67b02ec1810d38b2ca3b6f962411acf732313780c91deb64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820869f88e294d0cc1b8b67b02ec1810d38b2ca3b6f962411acf732313780c91deb64736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP7 SWAP16 DUP9 0xE2 SWAP5 0xD0 0xCC SHL DUP12 PUSH8 0xB02EC1810D38B2CA EXTCODESIZE PUSH16 0x962411ACF732313780C91DEB64736F6C PUSH4 0x43000511 STOP ORIGIN ",
							"sourceMap": "4479:863:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820869f88e294d0cc1b8b67b02ec1810d38b2ca3b6f962411acf732313780c91deb64736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP7 SWAP16 DUP9 0xE2 SWAP5 0xD0 0xCC SHL DUP12 PUSH8 0xB02EC1810D38B2CA EXTCODESIZE PUSH16 0x962411ACF732313780C91DEB64736F6C PUSH4 0x43000511 STOP ORIGIN ",
							"sourceMap": "4479:863:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"isContract(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4479,
									"end": 5342,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4479,
									"end": 5342,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820869f88e294d0cc1b8b67b02ec1810d38b2ca3b6f962411acf732313780c91deb64736f6c63430005110032",
									".code": [
										{
											"begin": 4479,
											"end": 5342,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 4479,
											"end": 5342,
											"name": "ADDRESS"
										},
										{
											"begin": 4479,
											"end": 5342,
											"name": "EQ"
										},
										{
											"begin": 4479,
											"end": 5342,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4479,
											"end": 5342,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4479,
											"end": 5342,
											"name": "MSTORE"
										},
										{
											"begin": 4479,
											"end": 5342,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4479,
											"end": 5342,
											"name": "DUP1"
										},
										{
											"begin": 4479,
											"end": 5342,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type,\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"anonimity/0.1-ETH-Router.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"anonimity/0.1-ETH-Router.sol\":{\"keccak256\":\"0xff19fdab0a07eef184173a7aac970d44703447d9efe26f3c8633cc687f06cb3c\",\"urls\":[\"bzz-raw://5a7d92d95142aa363cc68c443f2f48a5b274d07d546e902644d28b4c2bc719a4\",\"dweb:/ipfs/QmcN7s1Xo93rrdL4Y3pyWPxbegmr8nHNV7kxTSnFjwcX4r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "see https://github.com/ethereum/EIPs/issues/20",
						"methods": {},
						"title": "ERC20 interface"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"see https://github.com/ethereum/EIPs/issues/20\",\"methods\":{},\"title\":\"ERC20 interface\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"anonimity/0.1-ETH-Router.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"anonimity/0.1-ETH-Router.sol\":{\"keccak256\":\"0xff19fdab0a07eef184173a7aac970d44703447d9efe26f3c8633cc687f06cb3c\",\"urls\":[\"bzz-raw://5a7d92d95142aa363cc68c443f2f48a5b274d07d546e902644d28b4c2bc719a4\",\"dweb:/ipfs/QmcN7s1Xo93rrdL4Y3pyWPxbegmr8nHNV7kxTSnFjwcX4r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IERC20Basic": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Simpler version of ERC20 interfacesee https://github.com/ethereum/EIPs/issues/179",
						"methods": {},
						"title": "ERC20Basic"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Simpler version of ERC20 interfacesee https://github.com/ethereum/EIPs/issues/179\",\"methods\":{},\"title\":\"ERC20Basic\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"anonimity/0.1-ETH-Router.sol\":\"IERC20Basic\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"anonimity/0.1-ETH-Router.sol\":{\"keccak256\":\"0xff19fdab0a07eef184173a7aac970d44703447d9efe26f3c8633cc687f06cb3c\",\"urls\":[\"bzz-raw://5a7d92d95142aa363cc68c443f2f48a5b274d07d546e902644d28b4c2bc719a4\",\"dweb:/ipfs/QmcN7s1Xo93rrdL4Y3pyWPxbegmr8nHNV7kxTSnFjwcX4r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IMessierV2dot2": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "M87Denomination",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "M87Token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "anonymityFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "coinDenomination",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_commitment",
									"type": "bytes32"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "tokenDenomination",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_proof",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "_root",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "_nullifierHash",
									"type": "bytes32"
								},
								{
									"internalType": "address payable",
									"name": "_recipient",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "_relayer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_refund",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"M87Denomination()": "22217cd3",
							"M87Token()": "75ddc9ed",
							"anonymityFee()": "3b406fb7",
							"coinDenomination()": "997318ec",
							"deposit(bytes32)": "b214faa5",
							"token()": "fc0c546a",
							"tokenDenomination()": "5129b3e1",
							"withdraw(bytes,bytes32,bytes32,address,address,uint256,uint256)": "21a0adb6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"M87Denomination\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"M87Token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"anonymityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coinDenomination\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_commitment\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenDenomination\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refund\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"anonimity/0.1-ETH-Router.sol\":\"IMessierV2dot2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"anonimity/0.1-ETH-Router.sol\":{\"keccak256\":\"0xff19fdab0a07eef184173a7aac970d44703447d9efe26f3c8633cc687f06cb3c\",\"urls\":[\"bzz-raw://5a7d92d95142aa363cc68c443f2f48a5b274d07d546e902644d28b4c2bc719a4\",\"dweb:/ipfs/QmcN7s1Xo93rrdL4Y3pyWPxbegmr8nHNV7kxTSnFjwcX4r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IRouter": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"anonimity/0.1-ETH-Router.sol\":\"IRouter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"anonimity/0.1-ETH-Router.sol\":{\"keccak256\":\"0xff19fdab0a07eef184173a7aac970d44703447d9efe26f3c8633cc687f06cb3c\",\"urls\":[\"bzz-raw://5a7d92d95142aa363cc68c443f2f48a5b274d07d546e902644d28b4c2bc719a4\",\"dweb:/ipfs/QmcN7s1Xo93rrdL4Y3pyWPxbegmr8nHNV7kxTSnFjwcX4r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"MessierWrapper": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IRouter",
									"name": "_router",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_wrappedCoin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_messierAddr",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "commitment",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "leafIndex",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "M87Denomination",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "anonymityFee",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "contract IMessierV2dot2",
									"name": "_messier",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_commitment",
									"type": "bytes32"
								},
								{
									"internalType": "bool",
									"name": "_buyM87",
									"type": "bool"
								}
							],
							"name": "deposit",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "messierAddr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "contract IMessierV2dot2",
									"name": "_messier",
									"type": "address"
								}
							],
							"name": "purchaseCost",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "router",
							"outputs": [
								{
									"internalType": "contract IRouter",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "wrappedCoin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"anonimity/0.1-ETH-Router.sol\":9968:12759  contract MessierWrapper {... */\n  mstore(0x40, 0x80)\n    /* \"anonimity/0.1-ETH-Router.sol\":10319:10685  constructor(IRouter _router, address _wrappedCoin, address _messierAddr) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"anonimity/0.1-ETH-Router.sol\":10319:10685  constructor(IRouter _router, address _wrappedCoin, address _messierAddr) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x60\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"anonimity/0.1-ETH-Router.sol\":10319:10685  constructor(IRouter _router, address _wrappedCoin, address _messierAddr) public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"anonimity/0.1-ETH-Router.sol\":10414:10421  _router */\n  dup3\n    /* \"anonimity/0.1-ETH-Router.sol\":10405:10411  router */\n  0x00\n  dup1\n    /* \"anonimity/0.1-ETH-Router.sol\":10405:10421  router = _router */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"anonimity/0.1-ETH-Router.sol\":10441:10453  _wrappedCoin */\n  dup2\n    /* \"anonimity/0.1-ETH-Router.sol\":10427:10438  wrappedCoin */\n  0x01\n  0x00\n    /* \"anonimity/0.1-ETH-Router.sol\":10427:10453  wrappedCoin = _wrappedCoin */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"anonimity/0.1-ETH-Router.sol\":10473:10485  _messierAddr */\n  dup1\n    /* \"anonimity/0.1-ETH-Router.sol\":10459:10470  messierAddr */\n  0x02\n  0x00\n    /* \"anonimity/0.1-ETH-Router.sol\":10459:10485  messierAddr = _messierAddr */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"anonimity/0.1-ETH-Router.sol\":10491:10514  IMessierV2dot2 _messier */\n  0x00\n    /* \"anonimity/0.1-ETH-Router.sol\":10532:10543  messierAddr */\n  0x02\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"anonimity/0.1-ETH-Router.sol\":10491:10544  IMessierV2dot2 _messier = IMessierV2dot2(messierAddr) */\n  swap1\n  pop\n    /* \"anonimity/0.1-ETH-Router.sol\":10550:10562  IERC20 token */\n  0x00\n    /* \"anonimity/0.1-ETH-Router.sol\":10565:10573  _messier */\n  dup2\n    /* \"anonimity/0.1-ETH-Router.sol\":10565:10579  _messier.token */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xfc0c546a\n    /* \"anonimity/0.1-ETH-Router.sol\":10565:10581  _messier.token() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_5\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_5:\n    /* \"anonimity/0.1-ETH-Router.sol\":10565:10581  _messier.token() */\n  pop\n  gas\n  staticcall\n  iszero\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_6\n  jumpi\n    /* \"--CODEGEN--\":45:61   */\n  returndatasize\n    /* \"--CODEGEN--\":42:43   */\n  0x00\n    /* \"--CODEGEN--\":39:40   */\n  dup1\n    /* \"--CODEGEN--\":24:62   */\n  returndatacopy\n    /* \"--CODEGEN--\":77:93   */\n  returndatasize\n    /* \"--CODEGEN--\":74:75   */\n  0x00\n    /* \"--CODEGEN--\":67:94   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_6:\n    /* \"anonimity/0.1-ETH-Router.sol\":10565:10581  _messier.token() */\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_7\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_7:\n    /* \"anonimity/0.1-ETH-Router.sol\":10565:10581  _messier.token() */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"anonimity/0.1-ETH-Router.sol\":10550:10581  IERC20 token = _messier.token() */\n  swap1\n  pop\n    /* \"anonimity/0.1-ETH-Router.sol\":10617:10618  0 */\n  0x00\n    /* \"anonimity/0.1-ETH-Router.sol\":10591:10619  address(token) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"anonimity/0.1-ETH-Router.sol\":10599:10604  token */\n  dup2\n    /* \"anonimity/0.1-ETH-Router.sol\":10591:10619  address(token) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"anonimity/0.1-ETH-Router.sol\":10587:10681  if (address(token) != address(0)) {... */\n  tag_8\n  jumpi\n    /* \"anonimity/0.1-ETH-Router.sol\":10631:10674  token.safeApprove(messierAddr, uint256(-1)) */\n  tag_9\n    /* \"anonimity/0.1-ETH-Router.sol\":10649:10660  messierAddr */\n  0x02\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"anonimity/0.1-ETH-Router.sol\":10670:10672  -1 */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"anonimity/0.1-ETH-Router.sol\":10631:10636  token */\n  dup4\n    /* \"anonimity/0.1-ETH-Router.sol\":10631:10648  token.safeApprove */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  or(tag_0_145, shl(0x20, tag_10))\n  swap1\n    /* \"anonimity/0.1-ETH-Router.sol\":10631:10674  token.safeApprove(messierAddr, uint256(-1)) */\n  swap3\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"anonimity/0.1-ETH-Router.sol\":10587:10681  if (address(token) != address(0)) {... */\ntag_8:\n    /* \"anonimity/0.1-ETH-Router.sol\":10319:10685  constructor(IRouter _router, address _wrappedCoin, address _messierAddr) public {... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"anonimity/0.1-ETH-Router.sol\":9968:12759  contract MessierWrapper {... */\n  jump(tag_11)\n    /* \"anonimity/0.1-ETH-Router.sol\":6345:6957  function safeApprove(IERC20 token, address spender, uint256 value) internal {... */\ntag_10:\n    /* \"anonimity/0.1-ETH-Router.sol\":6719:6720  0 */\n  0x00\n    /* \"anonimity/0.1-ETH-Router.sol\":6710:6715  value */\n  dup2\n    /* \"anonimity/0.1-ETH-Router.sol\":6710:6720  value == 0 */\n  eq\n    /* \"anonimity/0.1-ETH-Router.sol\":6709:6771  (value == 0) || (token.allowance(address(this), spender) == 0) */\n  dup1\n  tag_13\n  jumpi\n  pop\n    /* \"anonimity/0.1-ETH-Router.sol\":6769:6770  0 */\n  0x00\n    /* \"anonimity/0.1-ETH-Router.sol\":6726:6731  token */\n  dup4\n    /* \"anonimity/0.1-ETH-Router.sol\":6726:6741  token.allowance */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xdd62ed3e\n    /* \"anonimity/0.1-ETH-Router.sol\":6750:6754  this */\n  address\n    /* \"anonimity/0.1-ETH-Router.sol\":6757:6764  spender */\n  dup6\n    /* \"anonimity/0.1-ETH-Router.sol\":6726:6765  token.allowance(address(this), spender) */\n  mload(0x40)\n  dup4\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap3\n  pop\n  pop\n  pop\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_14\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_14:\n    /* \"anonimity/0.1-ETH-Router.sol\":6726:6765  token.allowance(address(this), spender) */\n  pop\n  gas\n  staticcall\n  iszero\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_15\n  jumpi\n    /* \"--CODEGEN--\":45:61   */\n  returndatasize\n    /* \"--CODEGEN--\":42:43   */\n  0x00\n    /* \"--CODEGEN--\":39:40   */\n  dup1\n    /* \"--CODEGEN--\":24:62   */\n  returndatacopy\n    /* \"--CODEGEN--\":77:93   */\n  returndatasize\n    /* \"--CODEGEN--\":74:75   */\n  0x00\n    /* \"--CODEGEN--\":67:94   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_15:\n    /* \"anonimity/0.1-ETH-Router.sol\":6726:6765  token.allowance(address(this), spender) */\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_16\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_16:\n    /* \"anonimity/0.1-ETH-Router.sol\":6726:6765  token.allowance(address(this), spender) */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"anonimity/0.1-ETH-Router.sol\":6726:6770  token.allowance(address(this), spender) == 0 */\n  eq\n    /* \"anonimity/0.1-ETH-Router.sol\":6709:6771  (value == 0) || (token.allowance(address(this), spender) == 0) */\ntag_13:\n    /* \"anonimity/0.1-ETH-Router.sol\":6701:6851  require((value == 0) || (token.allowance(address(this), spender) == 0),... */\n  tag_17\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x36\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25\n  0x36\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_17:\n    /* \"anonimity/0.1-ETH-Router.sol\":6861:6950  callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n  tag_18\n    /* \"anonimity/0.1-ETH-Router.sol\":6880:6885  token */\n  dup4\n    /* \"anonimity/0.1-ETH-Router.sol\":6910:6915  token */\n  dup5\n    /* \"anonimity/0.1-ETH-Router.sol\":6910:6923  token.approve */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x095ea7b3\n    /* \"anonimity/0.1-ETH-Router.sol\":6910:6932  token.approve.selector */\n  swap1\n  pop\n  0xe0\n  shl\n    /* \"anonimity/0.1-ETH-Router.sol\":6934:6941  spender */\n  dup5\n    /* \"anonimity/0.1-ETH-Router.sol\":6943:6948  value */\n  dup5\n    /* \"anonimity/0.1-ETH-Router.sol\":6887:6949  abi.encodeWithSelector(token.approve.selector, spender, value) */\n  add(0x24, mload(0x40))\n  dup1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n    /* \"--CODEGEN--\":49:53   */\n  0x20\n    /* \"--CODEGEN--\":39:46   */\n  dup2\n    /* \"--CODEGEN--\":30:37   */\n  dup4\n    /* \"--CODEGEN--\":26:47   */\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  sub\n    /* \"--CODEGEN--\":13:20   */\n  dup2\n    /* \"--CODEGEN--\":6:55   */\n  mstore\n    /* \"anonimity/0.1-ETH-Router.sol\":6887:6949  abi.encodeWithSelector(token.approve.selector, spender, value) */\n  swap1\n  0x40\n  mstore\n  swap1\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n    /* \"--CODEGEN--\":38:42   */\n  0x20\n    /* \"--CODEGEN--\":29:36   */\n  dup3\n    /* \"--CODEGEN--\":25:43   */\n  add\n    /* \"--CODEGEN--\":67:77   */\n  dup1\n    /* \"--CODEGEN--\":61:78   */\n  mload\n    /* \"--CODEGEN--\":96:154   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"--CODEGEN--\":199:207   */\n  dup4\n    /* \"--CODEGEN--\":192:196   */\n  dup2\n    /* \"--CODEGEN--\":186:190   */\n  dup4\n    /* \"--CODEGEN--\":182:197   */\n  and\n    /* \"--CODEGEN--\":179:208   */\n  or\n    /* \"--CODEGEN--\":167:177   */\n  dup4\n    /* \"--CODEGEN--\":160:209   */\n  mstore\n    /* \"--CODEGEN--\":0:215   */\n  pop\n  pop\n  pop\n    /* \"anonimity/0.1-ETH-Router.sol\":6887:6949  abi.encodeWithSelector(token.approve.selector, spender, value) */\n  pop\n    /* \"anonimity/0.1-ETH-Router.sol\":6861:6879  callOptionalReturn */\n  shl(0x20, tag_19)\n    /* \"anonimity/0.1-ETH-Router.sol\":6861:6950  callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"anonimity/0.1-ETH-Router.sol\":6345:6957  function safeApprove(IERC20 token, address spender, uint256 value) internal {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"anonimity/0.1-ETH-Router.sol\":7916:9011  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\ntag_19:\n    /* \"anonimity/0.1-ETH-Router.sol\":8511:8538  address(token).isContract() */\n  tag_21\n    /* \"anonimity/0.1-ETH-Router.sol\":8519:8524  token */\n  dup3\n    /* \"anonimity/0.1-ETH-Router.sol\":8511:8536  address(token).isContract */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  or(tag_0_133, shl(0x20, tag_22))\n    /* \"anonimity/0.1-ETH-Router.sol\":8511:8538  address(token).isContract() */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"anonimity/0.1-ETH-Router.sol\":8503:8574  require(address(token).isContract(), \"SafeERC20: call to non-contract\") */\n  tag_23\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1f\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_23:\n    /* \"anonimity/0.1-ETH-Router.sol\":8645:8657  bool success */\n  0x00\n    /* \"anonimity/0.1-ETH-Router.sol\":8659:8682  bytes memory returndata */\n  0x60\n    /* \"anonimity/0.1-ETH-Router.sol\":8694:8699  token */\n  dup4\n    /* \"anonimity/0.1-ETH-Router.sol\":8686:8705  address(token).call */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"anonimity/0.1-ETH-Router.sol\":8706:8710  data */\n  dup4\n    /* \"anonimity/0.1-ETH-Router.sol\":8686:8711  address(token).call(data) */\n  mload(0x40)\n  dup1\n  dup3\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":36:189   */\ntag_24:\n    /* \"--CODEGEN--\":66:68   */\n  0x20\n    /* \"--CODEGEN--\":61:64   */\n  dup4\n    /* \"--CODEGEN--\":58:69   */\n  lt\n    /* \"--CODEGEN--\":36:189   */\n  tag_26\n  jumpi\n    /* \"--CODEGEN--\":182:185   */\n  dup1\n    /* \"--CODEGEN--\":176:186   */\n  mload\n    /* \"--CODEGEN--\":171:174   */\n  dup3\n    /* \"--CODEGEN--\":164:187   */\n  mstore\n    /* \"--CODEGEN--\":98:100   */\n  0x20\n    /* \"--CODEGEN--\":93:96   */\n  dup3\n    /* \"--CODEGEN--\":89:101   */\n  add\n    /* \"--CODEGEN--\":82:101   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:125   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup2\n    /* \"--CODEGEN--\":114:126   */\n  add\n    /* \"--CODEGEN--\":107:126   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":148:150   */\n  0x20\n    /* \"--CODEGEN--\":143:146   */\n  dup4\n    /* \"--CODEGEN--\":139:151   */\n  sub\n    /* \"--CODEGEN--\":132:151   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":36:189   */\n  jump(tag_24)\ntag_26:\n    /* \"--CODEGEN--\":274:275   */\n  0x01\n    /* \"--CODEGEN--\":267:270   */\n  dup4\n    /* \"--CODEGEN--\":263:265   */\n  0x20\n    /* \"--CODEGEN--\":259:271   */\n  sub\n    /* \"--CODEGEN--\":254:257   */\n  0x0100\n    /* \"--CODEGEN--\":250:272   */\n  exp\n    /* \"--CODEGEN--\":246:276   */\n  sub\n    /* \"--CODEGEN--\":315:319   */\n  dup1\n    /* \"--CODEGEN--\":311:320   */\n  not\n    /* \"--CODEGEN--\":305:308   */\n  dup3\n    /* \"--CODEGEN--\":299:309   */\n  mload\n    /* \"--CODEGEN--\":295:321   */\n  and\n    /* \"--CODEGEN--\":356:360   */\n  dup2\n    /* \"--CODEGEN--\":350:353   */\n  dup5\n    /* \"--CODEGEN--\":344:354   */\n  mload\n    /* \"--CODEGEN--\":340:361   */\n  and\n    /* \"--CODEGEN--\":389:396   */\n  dup1\n    /* \"--CODEGEN--\":380:387   */\n  dup3\n    /* \"--CODEGEN--\":377:397   */\n  or\n    /* \"--CODEGEN--\":372:375   */\n  dup6\n    /* \"--CODEGEN--\":365:398   */\n  mstore\n    /* \"--CODEGEN--\":3:402   */\n  pop\n  pop\n  pop\n    /* \"anonimity/0.1-ETH-Router.sol\":8686:8711  address(token).call(data) */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  add\n  swap2\n  pop\n  pop\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup7\n  gas\n  call\n  swap2\n  pop\n  pop\n  returndatasize\n    /* \"--CODEGEN--\":14:15   */\n  dup1\n    /* \"--CODEGEN--\":21:22   */\n  0x00\n    /* \"--CODEGEN--\":16:47   */\n  dup2\n  eq\n  tag_28\n  jumpi\n    /* \"--CODEGEN--\":75:79   */\n  0x40\n    /* \"--CODEGEN--\":69:80   */\n  mload\n    /* \"--CODEGEN--\":64:80   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":144:148   */\n  0x1f\n    /* \"--CODEGEN--\":140:149   */\n  not\n    /* \"--CODEGEN--\":133:137   */\n  0x3f\n    /* \"--CODEGEN--\":115:131   */\n  returndatasize\n    /* \"--CODEGEN--\":111:138   */\n  add\n    /* \"--CODEGEN--\":107:150   */\n  and\n    /* \"--CODEGEN--\":104:105   */\n  dup3\n    /* \"--CODEGEN--\":100:151   */\n  add\n    /* \"--CODEGEN--\":94:98   */\n  0x40\n    /* \"--CODEGEN--\":87:152   */\n  mstore\n    /* \"--CODEGEN--\":169:185   */\n  returndatasize\n    /* \"--CODEGEN--\":166:167   */\n  dup3\n    /* \"--CODEGEN--\":159:186   */\n  mstore\n    /* \"--CODEGEN--\":225:241   */\n  returndatasize\n    /* \"--CODEGEN--\":222:223   */\n  0x00\n    /* \"--CODEGEN--\":215:219   */\n  0x20\n    /* \"--CODEGEN--\":212:213   */\n  dup5\n    /* \"--CODEGEN--\":208:220   */\n  add\n    /* \"--CODEGEN--\":193:242   */\n  returndatacopy\n    /* \"--CODEGEN--\":7:249   */\n  jump(tag_27)\n    /* \"--CODEGEN--\":16:47   */\ntag_28:\n    /* \"--CODEGEN--\":36:40   */\n  0x60\n    /* \"--CODEGEN--\":31:40   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":7:249   */\ntag_27:\n  pop\n    /* \"anonimity/0.1-ETH-Router.sol\":8644:8711  (bool success, bytes memory returndata) = address(token).call(data) */\n  swap2\n  pop\n  swap2\n  pop\n    /* \"anonimity/0.1-ETH-Router.sol\":8729:8736  success */\n  dup2\n    /* \"anonimity/0.1-ETH-Router.sol\":8721:8773  require(success, \"SafeERC20: low-level call failed\") */\n  tag_29\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x20\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_29:\n    /* \"anonimity/0.1-ETH-Router.sol\":8808:8809  0 */\n  0x00\n    /* \"anonimity/0.1-ETH-Router.sol\":8788:8798  returndata */\n  dup2\n    /* \"anonimity/0.1-ETH-Router.sol\":8788:8805  returndata.length */\n  mload\n    /* \"anonimity/0.1-ETH-Router.sol\":8788:8809  returndata.length > 0 */\n  gt\n    /* \"anonimity/0.1-ETH-Router.sol\":8784:9005  if (returndata.length > 0) { // Return data is optional... */\n  iszero\n  tag_30\n  jumpi\n    /* \"anonimity/0.1-ETH-Router.sol\":8928:8938  returndata */\n  dup1\n    /* \"anonimity/0.1-ETH-Router.sol\":8917:8947  abi.decode(returndata, (bool)) */\n  dup1\n  0x20\n  add\n  swap1\n  mload\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_31\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_31:\n    /* \"anonimity/0.1-ETH-Router.sol\":8917:8947  abi.decode(returndata, (bool)) */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"anonimity/0.1-ETH-Router.sol\":8909:8994  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n  tag_32\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x2a\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n  0x2a\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_32:\n    /* \"anonimity/0.1-ETH-Router.sol\":8784:9005  if (returndata.length > 0) { // Return data is optional... */\ntag_30:\n    /* \"anonimity/0.1-ETH-Router.sol\":7916:9011  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"anonimity/0.1-ETH-Router.sol\":4927:5340  function isContract(address account) internal view returns (bool) {... */\ntag_22:\n    /* \"anonimity/0.1-ETH-Router.sol\":4987:4991  bool */\n  0x00\n    /* \"anonimity/0.1-ETH-Router.sol\":5190:5202  uint256 size */\n  dup1\n    /* \"anonimity/0.1-ETH-Router.sol\":5299:5306  account */\n  dup3\n    /* \"anonimity/0.1-ETH-Router.sol\":5287:5307  extcodesize(account) */\n  extcodesize\n    /* \"anonimity/0.1-ETH-Router.sol\":5279:5307  size := extcodesize(account) */\n  swap1\n  pop\n    /* \"anonimity/0.1-ETH-Router.sol\":5332:5333  0 */\n  0x00\n    /* \"anonimity/0.1-ETH-Router.sol\":5325:5329  size */\n  dup2\n    /* \"anonimity/0.1-ETH-Router.sol\":5325:5333  size > 0 */\n  gt\n    /* \"anonimity/0.1-ETH-Router.sol\":5318:5333  return size > 0 */\n  swap2\n  pop\n  pop\n    /* \"anonimity/0.1-ETH-Router.sol\":4927:5340  function isContract(address account) internal view returns (bool) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"anonimity/0.1-ETH-Router.sol\":9968:12759  contract MessierWrapper {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\ndata_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25 5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365\n\nsub_0: assembly {\n        /* \"anonimity/0.1-ETH-Router.sol\":9968:12759  contract MessierWrapper {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x068f536f\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x31796919\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x527ba9af\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x65104a0c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd936547e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf887ea40\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      stop\n        /* \"anonimity/0.1-ETH-Router.sol\":11156:12757  function deposit(IMessierV2dot2 _messier, bytes32 _commitment, bool _buyM87) external payable {... */\n    tag_2:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_11:\n        /* \"anonimity/0.1-ETH-Router.sol\":11156:12757  function deposit(IMessierV2dot2 _messier, bytes32 _commitment, bool _buyM87) external payable {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_12\n      jump\t// in\n    tag_10:\n      stop\n        /* \"anonimity/0.1-ETH-Router.sol\":10111:10137  address public messierAddr */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_13:\n        /* \"anonimity/0.1-ETH-Router.sol\":10111:10137  address public messierAddr */\n      pop\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/0.1-ETH-Router.sol\":10081:10107  address public wrappedCoin */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"anonimity/0.1-ETH-Router.sol\":10081:10107  address public wrappedCoin */\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/0.1-ETH-Router.sol\":10724:11152  function purchaseCost(IMessierV2dot2 _messier) external view returns (uint256) {... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_19:\n        /* \"anonimity/0.1-ETH-Router.sol\":10724:11152  function purchaseCost(IMessierV2dot2 _messier) external view returns (uint256) {... */\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_21:\n        /* \"anonimity/0.1-ETH-Router.sol\":10724:11152  function purchaseCost(IMessierV2dot2 _messier) external view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_22\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/0.1-ETH-Router.sol\":10141:10184  mapping(address => bool) public whitelisted */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_23:\n        /* \"anonimity/0.1-ETH-Router.sol\":10141:10184  mapping(address => bool) public whitelisted */\n      pop\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n        /* \"anonimity/0.1-ETH-Router.sol\":10141:10184  mapping(address => bool) public whitelisted */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/0.1-ETH-Router.sol\":10056:10077  IRouter public router */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_27:\n        /* \"anonimity/0.1-ETH-Router.sol\":10056:10077  IRouter public router */\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"anonimity/0.1-ETH-Router.sol\":11156:12757  function deposit(IMessierV2dot2 _messier, bytes32 _commitment, bool _buyM87) external payable {... */\n    tag_12:\n        /* \"anonimity/0.1-ETH-Router.sol\":11285:11296  messierAddr */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"anonimity/0.1-ETH-Router.sol\":11264:11296  address(_messier) == messierAddr */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"anonimity/0.1-ETH-Router.sol\":11272:11280  _messier */\n      dup4\n        /* \"anonimity/0.1-ETH-Router.sol\":11264:11296  address(_messier) == messierAddr */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"anonimity/0.1-ETH-Router.sol\":11256:11316  require(address(_messier) == messierAddr, \"not whitelisted\") */\n      tag_31\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6e6f742077686974656c69737465640000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_31:\n        /* \"anonimity/0.1-ETH-Router.sol\":11322:11340  uint256 coinAmount */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":11343:11351  _messier */\n      dup4\n        /* \"anonimity/0.1-ETH-Router.sol\":11343:11368  _messier.coinDenomination */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x997318ec\n        /* \"anonimity/0.1-ETH-Router.sol\":11343:11370  _messier.coinDenomination() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_32:\n        /* \"anonimity/0.1-ETH-Router.sol\":11343:11370  _messier.coinDenomination() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_33:\n        /* \"anonimity/0.1-ETH-Router.sol\":11343:11370  _messier.coinDenomination() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n        /* \"anonimity/0.1-ETH-Router.sol\":11343:11370  _messier.coinDenomination() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11322:11370  uint256 coinAmount = _messier.coinDenomination() */\n      swap1\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11397:11407  coinAmount */\n      dup1\n        /* \"anonimity/0.1-ETH-Router.sol\":11384:11393  msg.value */\n      callvalue\n        /* \"anonimity/0.1-ETH-Router.sol\":11384:11407  msg.value >= coinAmount */\n      lt\n      iszero\n        /* \"anonimity/0.1-ETH-Router.sol\":11376:11446  require(msg.value >= coinAmount, \"MessierWrapper: insufficient coin!\") */\n      tag_35\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_57308f09d5629392b8f7d9e16798d0401751415aab39e9bf210ce0719fbb2edf\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_35:\n        /* \"anonimity/0.1-ETH-Router.sol\":11452:11471  uint256 tokenAmount */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":11474:11482  _messier */\n      dup5\n        /* \"anonimity/0.1-ETH-Router.sol\":11474:11500  _messier.tokenDenomination */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5129b3e1\n        /* \"anonimity/0.1-ETH-Router.sol\":11474:11502  _messier.tokenDenomination() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_36:\n        /* \"anonimity/0.1-ETH-Router.sol\":11474:11502  _messier.tokenDenomination() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_37:\n        /* \"anonimity/0.1-ETH-Router.sol\":11474:11502  _messier.tokenDenomination() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_38:\n        /* \"anonimity/0.1-ETH-Router.sol\":11474:11502  _messier.tokenDenomination() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11452:11502  uint256 tokenAmount = _messier.tokenDenomination() */\n      swap1\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11508:11525  uint256 M87Amount */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":11528:11583  _messier.M87Denomination().add(_messier.anonymityFee()) */\n      tag_39\n        /* \"anonimity/0.1-ETH-Router.sol\":11559:11567  _messier */\n      dup7\n        /* \"anonimity/0.1-ETH-Router.sol\":11559:11580  _messier.anonymityFee */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3b406fb7\n        /* \"anonimity/0.1-ETH-Router.sol\":11559:11582  _messier.anonymityFee() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_40:\n        /* \"anonimity/0.1-ETH-Router.sol\":11559:11582  _messier.anonymityFee() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_41:\n        /* \"anonimity/0.1-ETH-Router.sol\":11559:11582  _messier.anonymityFee() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"anonimity/0.1-ETH-Router.sol\":11559:11582  _messier.anonymityFee() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11528:11536  _messier */\n      dup8\n        /* \"anonimity/0.1-ETH-Router.sol\":11528:11552  _messier.M87Denomination */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x22217cd3\n        /* \"anonimity/0.1-ETH-Router.sol\":11528:11554  _messier.M87Denomination() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_43:\n        /* \"anonimity/0.1-ETH-Router.sol\":11528:11554  _messier.M87Denomination() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_44:\n        /* \"anonimity/0.1-ETH-Router.sol\":11528:11554  _messier.M87Denomination() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_45:\n        /* \"anonimity/0.1-ETH-Router.sol\":11528:11554  _messier.M87Denomination() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11528:11558  _messier.M87Denomination().add */\n      tag_46\n      swap1\n        /* \"anonimity/0.1-ETH-Router.sol\":11528:11583  _messier.M87Denomination().add(_messier.anonymityFee()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_39:\n        /* \"anonimity/0.1-ETH-Router.sol\":11508:11583  uint256 M87Amount = _messier.M87Denomination().add(_messier.anonymityFee()) */\n      swap1\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11589:11610  uint256 remainingCoin */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":11613:11638  msg.value.sub(coinAmount) */\n      tag_47\n        /* \"anonimity/0.1-ETH-Router.sol\":11627:11637  coinAmount */\n      dup5\n        /* \"anonimity/0.1-ETH-Router.sol\":11613:11622  msg.value */\n      callvalue\n        /* \"anonimity/0.1-ETH-Router.sol\":11613:11626  msg.value.sub */\n      tag_48\n      swap1\n        /* \"anonimity/0.1-ETH-Router.sol\":11613:11638  msg.value.sub(coinAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_47:\n        /* \"anonimity/0.1-ETH-Router.sol\":11589:11638  uint256 remainingCoin = msg.value.sub(coinAmount) */\n      swap1\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11662:11663  0 */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":11648:11659  tokenAmount */\n      dup4\n        /* \"anonimity/0.1-ETH-Router.sol\":11648:11663  tokenAmount > 0 */\n      gt\n        /* \"anonimity/0.1-ETH-Router.sol\":11644:11753  if (tokenAmount > 0) {... */\n      iszero\n      tag_49\n      jumpi\n        /* \"anonimity/0.1-ETH-Router.sol\":11673:11746  _messier.token().safeTransferFrom(msg.sender, address(this), tokenAmount) */\n      tag_50\n        /* \"anonimity/0.1-ETH-Router.sol\":11707:11717  msg.sender */\n      caller\n        /* \"anonimity/0.1-ETH-Router.sol\":11727:11731  this */\n      address\n        /* \"anonimity/0.1-ETH-Router.sol\":11734:11745  tokenAmount */\n      dup6\n        /* \"anonimity/0.1-ETH-Router.sol\":11673:11681  _messier */\n      dup11\n        /* \"anonimity/0.1-ETH-Router.sol\":11673:11687  _messier.token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfc0c546a\n        /* \"anonimity/0.1-ETH-Router.sol\":11673:11689  _messier.token() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_51:\n        /* \"anonimity/0.1-ETH-Router.sol\":11673:11689  _messier.token() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_52:\n        /* \"anonimity/0.1-ETH-Router.sol\":11673:11689  _messier.token() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_53\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_53:\n        /* \"anonimity/0.1-ETH-Router.sol\":11673:11689  _messier.token() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11673:11706  _messier.token().safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_54\n      swap1\n        /* \"anonimity/0.1-ETH-Router.sol\":11673:11746  _messier.token().safeTransferFrom(msg.sender, address(this), tokenAmount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_50:\n        /* \"anonimity/0.1-ETH-Router.sol\":11644:11753  if (tokenAmount > 0) {... */\n    tag_49:\n        /* \"anonimity/0.1-ETH-Router.sol\":11774:11775  0 */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":11762:11771  M87Amount */\n      dup3\n        /* \"anonimity/0.1-ETH-Router.sol\":11762:11775  M87Amount > 0 */\n      gt\n        /* \"anonimity/0.1-ETH-Router.sol\":11758:12311  if (M87Amount > 0) {... */\n      iszero\n      tag_55\n      jumpi\n        /* \"anonimity/0.1-ETH-Router.sol\":11789:11796  _buyM87 */\n      dup5\n        /* \"anonimity/0.1-ETH-Router.sol\":11785:12305  if (_buyM87) {... */\n      iszero\n      tag_56\n      jumpi\n        /* \"anonimity/0.1-ETH-Router.sol\":11808:11829  address[] memory path */\n      0x60\n        /* \"anonimity/0.1-ETH-Router.sol\":11846:11847  2 */\n      0x02\n        /* \"anonimity/0.1-ETH-Router.sol\":11832:11848  new address[](2) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11832:11848  new address[](2) */\n      swap1\n      pop\n    tag_57:\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11808:11848  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11868:11879  wrappedCoin */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"anonimity/0.1-ETH-Router.sol\":11858:11862  path */\n      dup2\n        /* \"anonimity/0.1-ETH-Router.sol\":11863:11864  0 */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":11858:11865  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_58\n      jumpi\n      invalid\n    tag_58:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"anonimity/0.1-ETH-Router.sol\":11858:11879  path[0] = wrappedCoin */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11907:11915  _messier */\n      dup8\n        /* \"anonimity/0.1-ETH-Router.sol\":11907:11924  _messier.M87Token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x75ddc9ed\n        /* \"anonimity/0.1-ETH-Router.sol\":11907:11926  _messier.M87Token() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_59\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_59:\n        /* \"anonimity/0.1-ETH-Router.sol\":11907:11926  _messier.M87Token() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_60:\n        /* \"anonimity/0.1-ETH-Router.sol\":11907:11926  _messier.M87Token() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_61\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_61:\n        /* \"anonimity/0.1-ETH-Router.sol\":11907:11926  _messier.M87Token() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11889:11893  path */\n      dup2\n        /* \"anonimity/0.1-ETH-Router.sol\":11894:11895  1 */\n      0x01\n        /* \"anonimity/0.1-ETH-Router.sol\":11889:11896  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_62\n      jumpi\n      invalid\n    tag_62:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"anonimity/0.1-ETH-Router.sol\":11889:11927  path[1] = address(_messier.M87Token()) */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11937:11961  uint256[] memory amounts */\n      0x60\n        /* \"anonimity/0.1-ETH-Router.sol\":11964:11970  router */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"anonimity/0.1-ETH-Router.sol\":11964:11992  router.swapETHForExactTokens */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfb3bdb41\n        /* \"anonimity/0.1-ETH-Router.sol\":11999:12012  remainingCoin */\n      dup5\n        /* \"anonimity/0.1-ETH-Router.sol\":12014:12023  M87Amount */\n      dup7\n        /* \"anonimity/0.1-ETH-Router.sol\":12025:12029  path */\n      dup6\n        /* \"anonimity/0.1-ETH-Router.sol\":12039:12047  _messier */\n      dup14\n        /* \"anonimity/0.1-ETH-Router.sol\":12050:12072  block.timestamp.mul(2) */\n      tag_63\n        /* \"anonimity/0.1-ETH-Router.sol\":12070:12071  2 */\n      0x02\n        /* \"anonimity/0.1-ETH-Router.sol\":12050:12065  block.timestamp */\n      timestamp\n        /* \"anonimity/0.1-ETH-Router.sol\":12050:12069  block.timestamp.mul */\n      tag_64\n      swap1\n        /* \"anonimity/0.1-ETH-Router.sol\":12050:12072  block.timestamp.mul(2) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_63:\n        /* \"anonimity/0.1-ETH-Router.sol\":11964:12073  router.swapETHForExactTokens.value(remainingCoin)(M87Amount, path, address(_messier), block.timestamp.mul(2)) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_65:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_67\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_65)\n    tag_67:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11964:12073  router.swapETHForExactTokens.value(remainingCoin)(M87Amount, path, address(_messier), block.timestamp.mul(2)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_68:\n        /* \"anonimity/0.1-ETH-Router.sol\":11964:12073  router.swapETHForExactTokens.value(remainingCoin)(M87Amount, path, address(_messier), block.timestamp.mul(2)) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_69:\n        /* \"anonimity/0.1-ETH-Router.sol\":11964:12073  router.swapETHForExactTokens.value(remainingCoin)(M87Amount, path, address(_messier), block.timestamp.mul(2)) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":39:55   */\n      returndatasize\n        /* \"--CODEGEN--\":36:37   */\n      0x00\n        /* \"--CODEGEN--\":17:34   */\n      dup3\n        /* \"--CODEGEN--\":2:56   */\n      returndatacopy\n        /* \"anonimity/0.1-ETH-Router.sol\":11964:12073  router.swapETHForExactTokens.value(remainingCoin)(M87Amount, path, address(_messier), block.timestamp.mul(2)) */\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_70\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_70:\n        /* \"anonimity/0.1-ETH-Router.sol\":11964:12073  router.swapETHForExactTokens.value(remainingCoin)(M87Amount, path, address(_messier), block.timestamp.mul(2)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      mload(0x40)\n      swap4\n      swap3\n      swap2\n      swap1\n      dup5\n        /* \"--CODEGEN--\":19:30   */\n      0x0100000000\n        /* \"--CODEGEN--\":14:17   */\n      dup3\n        /* \"--CODEGEN--\":11:31   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_71\n      jumpi\n        /* \"--CODEGEN--\":44:45   */\n      0x00\n        /* \"--CODEGEN--\":41:42   */\n      dup1\n        /* \"--CODEGEN--\":34:46   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_71:\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n        /* \"--CODEGEN--\":66:69   */\n      dup3\n        /* \"--CODEGEN--\":62:83   */\n      add\n        /* \"--CODEGEN--\":55:83   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:127   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup3\n        /* \"--CODEGEN--\":114:128   */\n      add\n        /* \"--CODEGEN--\":159:168   */\n      dup6\n        /* \"--CODEGEN--\":141:157   */\n      dup2\n        /* \"--CODEGEN--\":138:169   */\n      gt\n        /* \"--CODEGEN--\":135:137   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":182:183   */\n      0x00\n        /* \"--CODEGEN--\":179:180   */\n      dup1\n        /* \"--CODEGEN--\":172:184   */\n      revert\n        /* \"--CODEGEN--\":135:137   */\n    tag_72:\n        /* \"--CODEGEN--\":219:222   */\n      dup3\n        /* \"--CODEGEN--\":213:223   */\n      mload\n        /* \"--CODEGEN--\":331:340   */\n      dup7\n        /* \"--CODEGEN--\":325:327   */\n      0x20\n        /* \"--CODEGEN--\":311:323   */\n      dup3\n        /* \"--CODEGEN--\":307:328   */\n      mul\n        /* \"--CODEGEN--\":289:305   */\n      dup4\n        /* \"--CODEGEN--\":285:329   */\n      add\n        /* \"--CODEGEN--\":282:341   */\n      gt\n        /* \"--CODEGEN--\":261:272   */\n      0x0100000000\n        /* \"--CODEGEN--\":247:259   */\n      dup3\n        /* \"--CODEGEN--\":244:273   */\n      gt\n        /* \"--CODEGEN--\":233:349   */\n      or\n        /* \"--CODEGEN--\":230:232   */\n      iszero\n      tag_73\n      jumpi\n        /* \"--CODEGEN--\":362:363   */\n      0x00\n        /* \"--CODEGEN--\":359:360   */\n      dup1\n        /* \"--CODEGEN--\":352:364   */\n      revert\n        /* \"--CODEGEN--\":230:232   */\n    tag_73:\n        /* \"--CODEGEN--\":385:397   */\n      dup1\n        /* \"--CODEGEN--\":380:383   */\n      dup4\n        /* \"--CODEGEN--\":373:398   */\n      mstore\n        /* \"--CODEGEN--\":421:425   */\n      0x20\n        /* \"--CODEGEN--\":416:419   */\n      dup4\n        /* \"--CODEGEN--\":412:426   */\n      add\n        /* \"--CODEGEN--\":405:426   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":0:433   */\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11964:12073  router.swapETHForExactTokens.value(remainingCoin)(M87Amount, path, address(_messier), block.timestamp.mul(2)) */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_74:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_76\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_74)\n    tag_76:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11964:12073  router.swapETHForExactTokens.value(remainingCoin)(M87Amount, path, address(_messier), block.timestamp.mul(2)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      0x40\n      mstore\n      pop\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11937:12073  uint256[] memory amounts = router.swapETHForExactTokens.value(remainingCoin)(M87Amount, path, address(_messier), block.timestamp.mul(2)) */\n      swap1\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":12108:12115  amounts */\n      dup1\n        /* \"anonimity/0.1-ETH-Router.sol\":12116:12117  0 */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":12108:12118  amounts[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_77\n      jumpi\n      invalid\n    tag_77:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"anonimity/0.1-ETH-Router.sol\":12091:12104  remainingCoin */\n      dup4\n        /* \"anonimity/0.1-ETH-Router.sol\":12091:12118  remainingCoin >= amounts[0] */\n      lt\n      iszero\n        /* \"anonimity/0.1-ETH-Router.sol\":12083:12156  require(remainingCoin >= amounts[0], \"MessierWrapper: unexpected status\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c645ed3573958a1d40ca56f987855fd774192d2c2a78d4419757d9cbcf326d65\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"anonimity/0.1-ETH-Router.sol\":12183:12190  amounts */\n      dup1\n        /* \"anonimity/0.1-ETH-Router.sol\":12191:12192  0 */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":12183:12193  amounts[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_79\n      jumpi\n      invalid\n    tag_79:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"anonimity/0.1-ETH-Router.sol\":12166:12193  remainingCoin -= amounts[0] */\n      dup4\n      sub\n      swap3\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11785:12305  if (_buyM87) {... */\n      pop\n      pop\n      jump(tag_80)\n    tag_56:\n        /* \"anonimity/0.1-ETH-Router.sol\":12218:12296  _messier.M87Token().safeTransferFrom(msg.sender, address(_messier), M87Amount) */\n      tag_81\n        /* \"anonimity/0.1-ETH-Router.sol\":12255:12265  msg.sender */\n      caller\n        /* \"anonimity/0.1-ETH-Router.sol\":12275:12283  _messier */\n      dup9\n        /* \"anonimity/0.1-ETH-Router.sol\":12286:12295  M87Amount */\n      dup5\n        /* \"anonimity/0.1-ETH-Router.sol\":12218:12226  _messier */\n      dup11\n        /* \"anonimity/0.1-ETH-Router.sol\":12218:12235  _messier.M87Token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x75ddc9ed\n        /* \"anonimity/0.1-ETH-Router.sol\":12218:12237  _messier.M87Token() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_82\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_82:\n        /* \"anonimity/0.1-ETH-Router.sol\":12218:12237  _messier.M87Token() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_83\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_83:\n        /* \"anonimity/0.1-ETH-Router.sol\":12218:12237  _messier.M87Token() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_84\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_84:\n        /* \"anonimity/0.1-ETH-Router.sol\":12218:12237  _messier.M87Token() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":12218:12254  _messier.M87Token().safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_54\n      swap1\n        /* \"anonimity/0.1-ETH-Router.sol\":12218:12296  _messier.M87Token().safeTransferFrom(msg.sender, address(_messier), M87Amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_81:\n        /* \"anonimity/0.1-ETH-Router.sol\":11785:12305  if (_buyM87) {... */\n    tag_80:\n        /* \"anonimity/0.1-ETH-Router.sol\":11758:12311  if (M87Amount > 0) {... */\n    tag_55:\n        /* \"anonimity/0.1-ETH-Router.sol\":12316:12334  bytes32 commitment */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":12340:12360  uint32 insertedIndex */\n      dup1\n        /* \"anonimity/0.1-ETH-Router.sol\":12366:12383  uint256 blocktime */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":12389:12404  uint256 M87Deno */\n      dup1\n        /* \"anonimity/0.1-ETH-Router.sol\":12410:12421  uint256 fee */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":12482:12490  _messier */\n      dup12\n        /* \"anonimity/0.1-ETH-Router.sol\":12482:12498  _messier.deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb214faa5\n        /* \"anonimity/0.1-ETH-Router.sol\":12505:12515  coinAmount */\n      dup11\n        /* \"anonimity/0.1-ETH-Router.sol\":12517:12528  _commitment */\n      dup14\n        /* \"anonimity/0.1-ETH-Router.sol\":12482:12529  _messier.deposit.value(coinAmount)(_commitment) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_85\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_85:\n        /* \"anonimity/0.1-ETH-Router.sol\":12482:12529  _messier.deposit.value(coinAmount)(_commitment) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_86\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_86:\n        /* \"anonimity/0.1-ETH-Router.sol\":12482:12529  _messier.deposit.value(coinAmount)(_commitment) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:16   */\n      0xa0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_87\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_87:\n        /* \"anonimity/0.1-ETH-Router.sol\":12482:12529  _messier.deposit.value(coinAmount)(_commitment) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":12427:12529  (commitment, insertedIndex, blocktime, M87Deno, fee) = _messier.deposit.value(coinAmount)(_commitment) */\n      dup1\n      swap6\n      pop\n      dup2\n      swap7\n      pop\n      dup3\n      swap8\n      pop\n      dup4\n      swap9\n      pop\n      dup5\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":12549:12559  commitment */\n      dup5\n        /* \"anonimity/0.1-ETH-Router.sol\":12540:12601  Deposit( commitment, insertedIndex, blocktime, M87Deno, fee ) */\n      0xcb186cc0add5be357ae2d3845e42be2ffbed8cb23b60f1b058ea371adff0a363\n        /* \"anonimity/0.1-ETH-Router.sol\":12561:12574  insertedIndex */\n      dup6\n        /* \"anonimity/0.1-ETH-Router.sol\":12576:12585  blocktime */\n      dup6\n        /* \"anonimity/0.1-ETH-Router.sol\":12587:12594  M87Deno */\n      dup6\n        /* \"anonimity/0.1-ETH-Router.sol\":12596:12599  fee */\n      dup6\n        /* \"anonimity/0.1-ETH-Router.sol\":12540:12601  Deposit( commitment, insertedIndex, blocktime, M87Deno, fee ) */\n      mload(0x40)\n      dup1\n      dup6\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"anonimity/0.1-ETH-Router.sol\":12627:12628  0 */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":12611:12624  remainingCoin */\n      dup7\n        /* \"anonimity/0.1-ETH-Router.sol\":12611:12628  remainingCoin > 0 */\n      gt\n        /* \"anonimity/0.1-ETH-Router.sol\":12607:12753  if (remainingCoin > 0) {... */\n      iszero\n      tag_88\n      jumpi\n        /* \"anonimity/0.1-ETH-Router.sol\":12639:12651  bool success */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":12656:12666  msg.sender */\n      caller\n        /* \"anonimity/0.1-ETH-Router.sol\":12656:12671  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"anonimity/0.1-ETH-Router.sol\":12678:12691  remainingCoin */\n      dup8\n        /* \"anonimity/0.1-ETH-Router.sol\":12656:12696  msg.sender.call.value(remainingCoin)(\"\") */\n      mload(0x40)\n      dup1\n      0x00\n      add\n      swap1\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_90\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_89)\n        /* \"--CODEGEN--\":16:47   */\n    tag_90:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_89:\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":12638:12696  (bool success,) = msg.sender.call.value(remainingCoin)(\"\") */\n      pop\n      swap1\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":12712:12719  success */\n      dup1\n        /* \"anonimity/0.1-ETH-Router.sol\":12704:12746  require(success, 'MessierWrapper: refund') */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x16\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4d657373696572577261707065723a20726566756e6400000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"anonimity/0.1-ETH-Router.sol\":12607:12753  if (remainingCoin > 0) {... */\n      pop\n    tag_88:\n        /* \"anonimity/0.1-ETH-Router.sol\":11156:12757  function deposit(IMessierV2dot2 _messier, bytes32 _commitment, bool _buyM87) external payable {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"anonimity/0.1-ETH-Router.sol\":10111:10137  address public messierAddr */\n    tag_15:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"anonimity/0.1-ETH-Router.sol\":10081:10107  address public wrappedCoin */\n    tag_18:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"anonimity/0.1-ETH-Router.sol\":10724:11152  function purchaseCost(IMessierV2dot2 _messier) external view returns (uint256) {... */\n    tag_22:\n        /* \"anonimity/0.1-ETH-Router.sol\":10794:10801  uint256 */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":10809:10826  uint256 M87Amount */\n      dup1\n        /* \"anonimity/0.1-ETH-Router.sol\":10829:10884  _messier.M87Denomination().add(_messier.anonymityFee()) */\n      tag_93\n        /* \"anonimity/0.1-ETH-Router.sol\":10860:10868  _messier */\n      dup4\n        /* \"anonimity/0.1-ETH-Router.sol\":10860:10881  _messier.anonymityFee */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3b406fb7\n        /* \"anonimity/0.1-ETH-Router.sol\":10860:10883  _messier.anonymityFee() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_94\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_94:\n        /* \"anonimity/0.1-ETH-Router.sol\":10860:10883  _messier.anonymityFee() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_95\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_95:\n        /* \"anonimity/0.1-ETH-Router.sol\":10860:10883  _messier.anonymityFee() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_96\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_96:\n        /* \"anonimity/0.1-ETH-Router.sol\":10860:10883  _messier.anonymityFee() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":10829:10837  _messier */\n      dup5\n        /* \"anonimity/0.1-ETH-Router.sol\":10829:10853  _messier.M87Denomination */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x22217cd3\n        /* \"anonimity/0.1-ETH-Router.sol\":10829:10855  _messier.M87Denomination() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_97\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_97:\n        /* \"anonimity/0.1-ETH-Router.sol\":10829:10855  _messier.M87Denomination() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_98\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_98:\n        /* \"anonimity/0.1-ETH-Router.sol\":10829:10855  _messier.M87Denomination() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_99\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_99:\n        /* \"anonimity/0.1-ETH-Router.sol\":10829:10855  _messier.M87Denomination() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":10829:10859  _messier.M87Denomination().add */\n      tag_46\n      swap1\n        /* \"anonimity/0.1-ETH-Router.sol\":10829:10884  _messier.M87Denomination().add(_messier.anonymityFee()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_93:\n        /* \"anonimity/0.1-ETH-Router.sol\":10809:10884  uint256 M87Amount = _messier.M87Denomination().add(_messier.anonymityFee()) */\n      swap1\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":10907:10908  0 */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":10894:10903  M87Amount */\n      dup2\n        /* \"anonimity/0.1-ETH-Router.sol\":10894:10908  M87Amount == 0 */\n      eq\n        /* \"anonimity/0.1-ETH-Router.sol\":10890:10935  if (M87Amount == 0) {... */\n      iszero\n      tag_100\n      jumpi\n        /* \"anonimity/0.1-ETH-Router.sol\":10927:10928  0 */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":10920:10928  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_92)\n        /* \"anonimity/0.1-ETH-Router.sol\":10890:10935  if (M87Amount == 0) {... */\n    tag_100:\n        /* \"anonimity/0.1-ETH-Router.sol\":10940:10962  address[] memory paths */\n      0x60\n        /* \"anonimity/0.1-ETH-Router.sol\":10979:10980  2 */\n      0x02\n        /* \"anonimity/0.1-ETH-Router.sol\":10965:10981  new address[](2) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_101\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":10965:10981  new address[](2) */\n      swap1\n      pop\n    tag_101:\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":10940:10981  address[] memory paths = new address[](2) */\n      swap1\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":10998:11009  wrappedCoin */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"anonimity/0.1-ETH-Router.sol\":10987:10992  paths */\n      dup2\n        /* \"anonimity/0.1-ETH-Router.sol\":10993:10994  0 */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":10987:10995  paths[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_102\n      jumpi\n      invalid\n    tag_102:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"anonimity/0.1-ETH-Router.sol\":10987:11009  paths[0] = wrappedCoin */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11034:11042  _messier */\n      dup4\n        /* \"anonimity/0.1-ETH-Router.sol\":11034:11051  _messier.M87Token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x75ddc9ed\n        /* \"anonimity/0.1-ETH-Router.sol\":11034:11053  _messier.M87Token() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_103\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_103:\n        /* \"anonimity/0.1-ETH-Router.sol\":11034:11053  _messier.M87Token() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_104\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_104:\n        /* \"anonimity/0.1-ETH-Router.sol\":11034:11053  _messier.M87Token() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_105\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_105:\n        /* \"anonimity/0.1-ETH-Router.sol\":11034:11053  _messier.M87Token() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11015:11020  paths */\n      dup2\n        /* \"anonimity/0.1-ETH-Router.sol\":11021:11022  1 */\n      0x01\n        /* \"anonimity/0.1-ETH-Router.sol\":11015:11023  paths[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_106\n      jumpi\n      invalid\n    tag_106:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"anonimity/0.1-ETH-Router.sol\":11015:11054  paths[1] = address(_messier.M87Token()) */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11060:11084  uint256[] memory amounts */\n      0x60\n        /* \"anonimity/0.1-ETH-Router.sol\":11087:11093  router */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"anonimity/0.1-ETH-Router.sol\":11087:11106  router.getAmountsIn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1f00ca74\n        /* \"anonimity/0.1-ETH-Router.sol\":11107:11116  M87Amount */\n      dup5\n        /* \"anonimity/0.1-ETH-Router.sol\":11118:11123  paths */\n      dup5\n        /* \"anonimity/0.1-ETH-Router.sol\":11087:11124  router.getAmountsIn(M87Amount, paths) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_107:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_109\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_107)\n    tag_109:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11087:11124  router.getAmountsIn(M87Amount, paths) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_110\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_110:\n        /* \"anonimity/0.1-ETH-Router.sol\":11087:11124  router.getAmountsIn(M87Amount, paths) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_111\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_111:\n        /* \"anonimity/0.1-ETH-Router.sol\":11087:11124  router.getAmountsIn(M87Amount, paths) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":39:55   */\n      returndatasize\n        /* \"--CODEGEN--\":36:37   */\n      0x00\n        /* \"--CODEGEN--\":17:34   */\n      dup3\n        /* \"--CODEGEN--\":2:56   */\n      returndatacopy\n        /* \"anonimity/0.1-ETH-Router.sol\":11087:11124  router.getAmountsIn(M87Amount, paths) */\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_112\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_112:\n        /* \"anonimity/0.1-ETH-Router.sol\":11087:11124  router.getAmountsIn(M87Amount, paths) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      mload(0x40)\n      swap4\n      swap3\n      swap2\n      swap1\n      dup5\n        /* \"--CODEGEN--\":19:30   */\n      0x0100000000\n        /* \"--CODEGEN--\":14:17   */\n      dup3\n        /* \"--CODEGEN--\":11:31   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_113\n      jumpi\n        /* \"--CODEGEN--\":44:45   */\n      0x00\n        /* \"--CODEGEN--\":41:42   */\n      dup1\n        /* \"--CODEGEN--\":34:46   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_113:\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n        /* \"--CODEGEN--\":66:69   */\n      dup3\n        /* \"--CODEGEN--\":62:83   */\n      add\n        /* \"--CODEGEN--\":55:83   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:127   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup3\n        /* \"--CODEGEN--\":114:128   */\n      add\n        /* \"--CODEGEN--\":159:168   */\n      dup6\n        /* \"--CODEGEN--\":141:157   */\n      dup2\n        /* \"--CODEGEN--\":138:169   */\n      gt\n        /* \"--CODEGEN--\":135:137   */\n      iszero\n      tag_114\n      jumpi\n        /* \"--CODEGEN--\":182:183   */\n      0x00\n        /* \"--CODEGEN--\":179:180   */\n      dup1\n        /* \"--CODEGEN--\":172:184   */\n      revert\n        /* \"--CODEGEN--\":135:137   */\n    tag_114:\n        /* \"--CODEGEN--\":219:222   */\n      dup3\n        /* \"--CODEGEN--\":213:223   */\n      mload\n        /* \"--CODEGEN--\":331:340   */\n      dup7\n        /* \"--CODEGEN--\":325:327   */\n      0x20\n        /* \"--CODEGEN--\":311:323   */\n      dup3\n        /* \"--CODEGEN--\":307:328   */\n      mul\n        /* \"--CODEGEN--\":289:305   */\n      dup4\n        /* \"--CODEGEN--\":285:329   */\n      add\n        /* \"--CODEGEN--\":282:341   */\n      gt\n        /* \"--CODEGEN--\":261:272   */\n      0x0100000000\n        /* \"--CODEGEN--\":247:259   */\n      dup3\n        /* \"--CODEGEN--\":244:273   */\n      gt\n        /* \"--CODEGEN--\":233:349   */\n      or\n        /* \"--CODEGEN--\":230:232   */\n      iszero\n      tag_115\n      jumpi\n        /* \"--CODEGEN--\":362:363   */\n      0x00\n        /* \"--CODEGEN--\":359:360   */\n      dup1\n        /* \"--CODEGEN--\":352:364   */\n      revert\n        /* \"--CODEGEN--\":230:232   */\n    tag_115:\n        /* \"--CODEGEN--\":385:397   */\n      dup1\n        /* \"--CODEGEN--\":380:383   */\n      dup4\n        /* \"--CODEGEN--\":373:398   */\n      mstore\n        /* \"--CODEGEN--\":421:425   */\n      0x20\n        /* \"--CODEGEN--\":416:419   */\n      dup4\n        /* \"--CODEGEN--\":412:426   */\n      add\n        /* \"--CODEGEN--\":405:426   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":0:433   */\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11087:11124  router.getAmountsIn(M87Amount, paths) */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_116:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_118\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_116)\n    tag_118:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11087:11124  router.getAmountsIn(M87Amount, paths) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      0x40\n      mstore\n      pop\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11060:11124  uint256[] memory amounts = router.getAmountsIn(M87Amount, paths) */\n      swap1\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":11137:11144  amounts */\n      dup1\n        /* \"anonimity/0.1-ETH-Router.sol\":11145:11146  0 */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":11137:11147  amounts[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_119\n      jumpi\n      invalid\n    tag_119:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"anonimity/0.1-ETH-Router.sol\":11130:11147  return amounts[0] */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":10724:11152  function purchaseCost(IMessierV2dot2 _messier) external view returns (uint256) {... */\n    tag_92:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"anonimity/0.1-ETH-Router.sol\":10141:10184  mapping(address => bool) public whitelisted */\n    tag_26:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"anonimity/0.1-ETH-Router.sol\":10056:10077  IRouter public router */\n    tag_29:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"anonimity/0.1-ETH-Router.sol\":4220:4343  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {... */\n    tag_46:\n        /* \"anonimity/0.1-ETH-Router.sol\":4278:4287  uint256 c */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":4303:4304  b */\n      dup2\n        /* \"anonimity/0.1-ETH-Router.sol\":4299:4300  a */\n      dup4\n        /* \"anonimity/0.1-ETH-Router.sol\":4299:4304  a + b */\n      add\n        /* \"anonimity/0.1-ETH-Router.sol\":4295:4304  c = a + b */\n      swap1\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":4322:4323  a */\n      dup3\n        /* \"anonimity/0.1-ETH-Router.sol\":4317:4318  c */\n      dup2\n        /* \"anonimity/0.1-ETH-Router.sol\":4317:4323  c >= a */\n      lt\n      iszero\n        /* \"anonimity/0.1-ETH-Router.sol\":4310:4324  assert(c >= a) */\n      tag_121\n      jumpi\n      invalid\n    tag_121:\n        /* \"anonimity/0.1-ETH-Router.sol\":4337:4338  c */\n      dup1\n        /* \"anonimity/0.1-ETH-Router.sol\":4330:4338  return c */\n      swap1\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":4220:4343  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"anonimity/0.1-ETH-Router.sol\":3760:3870  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_48:\n        /* \"anonimity/0.1-ETH-Router.sol\":3818:3825  uint256 */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":3845:3846  a */\n      dup3\n        /* \"anonimity/0.1-ETH-Router.sol\":3840:3841  b */\n      dup3\n        /* \"anonimity/0.1-ETH-Router.sol\":3840:3846  b <= a */\n      gt\n      iszero\n        /* \"anonimity/0.1-ETH-Router.sol\":3833:3847  assert(b <= a) */\n      tag_123\n      jumpi\n      invalid\n    tag_123:\n        /* \"anonimity/0.1-ETH-Router.sol\":3864:3865  b */\n      dup2\n        /* \"anonimity/0.1-ETH-Router.sol\":3860:3861  a */\n      dup4\n        /* \"anonimity/0.1-ETH-Router.sol\":3860:3865  a - b */\n      sub\n        /* \"anonimity/0.1-ETH-Router.sol\":3853:3865  return a - b */\n      swap1\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":3760:3870  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"anonimity/0.1-ETH-Router.sol\":6137:6339  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_54:\n        /* \"anonimity/0.1-ETH-Router.sol\":6237:6332  callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_125\n        /* \"anonimity/0.1-ETH-Router.sol\":6256:6261  token */\n      dup5\n        /* \"anonimity/0.1-ETH-Router.sol\":6286:6291  token */\n      dup6\n        /* \"anonimity/0.1-ETH-Router.sol\":6286:6304  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"anonimity/0.1-ETH-Router.sol\":6286:6313  token.transferFrom.selector */\n      swap1\n      pop\n      0xe0\n      shl\n        /* \"anonimity/0.1-ETH-Router.sol\":6315:6319  from */\n      dup6\n        /* \"anonimity/0.1-ETH-Router.sol\":6321:6323  to */\n      dup6\n        /* \"anonimity/0.1-ETH-Router.sol\":6325:6330  value */\n      dup6\n        /* \"anonimity/0.1-ETH-Router.sol\":6263:6331  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"anonimity/0.1-ETH-Router.sol\":6263:6331  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":6263:6331  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":6237:6255  callOptionalReturn */\n      tag_126\n        /* \"anonimity/0.1-ETH-Router.sol\":6237:6332  callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_125:\n        /* \"anonimity/0.1-ETH-Router.sol\":6137:6339  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"anonimity/0.1-ETH-Router.sol\":2489:2656  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {... */\n    tag_64:\n        /* \"anonimity/0.1-ETH-Router.sol\":2547:2556  uint256 c */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":2573:2574  0 */\n      dup1\n        /* \"anonimity/0.1-ETH-Router.sol\":2568:2569  a */\n      dup4\n        /* \"anonimity/0.1-ETH-Router.sol\":2568:2574  a == 0 */\n      eq\n        /* \"anonimity/0.1-ETH-Router.sol\":2564:2599  if (a == 0) {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"anonimity/0.1-ETH-Router.sol\":2591:2592  0 */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":2584:2592  return 0 */\n      swap1\n      pop\n      jump(tag_127)\n        /* \"anonimity/0.1-ETH-Router.sol\":2564:2599  if (a == 0) {... */\n    tag_128:\n        /* \"anonimity/0.1-ETH-Router.sol\":2612:2613  b */\n      dup2\n        /* \"anonimity/0.1-ETH-Router.sol\":2608:2609  a */\n      dup4\n        /* \"anonimity/0.1-ETH-Router.sol\":2608:2613  a * b */\n      mul\n        /* \"anonimity/0.1-ETH-Router.sol\":2604:2613  c = a * b */\n      swap1\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":2635:2636  b */\n      dup2\n        /* \"anonimity/0.1-ETH-Router.sol\":2630:2631  a */\n      dup4\n        /* \"anonimity/0.1-ETH-Router.sol\":2626:2627  c */\n      dup3\n        /* \"anonimity/0.1-ETH-Router.sol\":2626:2631  c / a */\n      dup2\n      tag_129\n      jumpi\n      invalid\n    tag_129:\n      div\n        /* \"anonimity/0.1-ETH-Router.sol\":2626:2636  c / a == b */\n      eq\n        /* \"anonimity/0.1-ETH-Router.sol\":2619:2637  assert(c / a == b) */\n      tag_130\n      jumpi\n      invalid\n    tag_130:\n        /* \"anonimity/0.1-ETH-Router.sol\":2650:2651  c */\n      dup1\n        /* \"anonimity/0.1-ETH-Router.sol\":2643:2651  return c */\n      swap1\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":2489:2656  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {... */\n    tag_127:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"anonimity/0.1-ETH-Router.sol\":7916:9011  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_126:\n        /* \"anonimity/0.1-ETH-Router.sol\":8511:8538  address(token).isContract() */\n      tag_132\n        /* \"anonimity/0.1-ETH-Router.sol\":8519:8524  token */\n      dup3\n        /* \"anonimity/0.1-ETH-Router.sol\":8511:8536  address(token).isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_133\n        /* \"anonimity/0.1-ETH-Router.sol\":8511:8538  address(token).isContract() */\n      jump\t// in\n    tag_132:\n        /* \"anonimity/0.1-ETH-Router.sol\":8503:8574  require(address(token).isContract(), \"SafeERC20: call to non-contract\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"anonimity/0.1-ETH-Router.sol\":8645:8657  bool success */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":8659:8682  bytes memory returndata */\n      0x60\n        /* \"anonimity/0.1-ETH-Router.sol\":8694:8699  token */\n      dup4\n        /* \"anonimity/0.1-ETH-Router.sol\":8686:8705  address(token).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"anonimity/0.1-ETH-Router.sol\":8706:8710  data */\n      dup4\n        /* \"anonimity/0.1-ETH-Router.sol\":8686:8711  address(token).call(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_135:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_137\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_135)\n    tag_137:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":8686:8711  address(token).call(data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_139\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_138)\n        /* \"--CODEGEN--\":16:47   */\n    tag_139:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_138:\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":8644:8711  (bool success, bytes memory returndata) = address(token).call(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":8729:8736  success */\n      dup2\n        /* \"anonimity/0.1-ETH-Router.sol\":8721:8773  require(success, \"SafeERC20: low-level call failed\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"anonimity/0.1-ETH-Router.sol\":8808:8809  0 */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":8788:8798  returndata */\n      dup2\n        /* \"anonimity/0.1-ETH-Router.sol\":8788:8805  returndata.length */\n      mload\n        /* \"anonimity/0.1-ETH-Router.sol\":8788:8809  returndata.length > 0 */\n      gt\n        /* \"anonimity/0.1-ETH-Router.sol\":8784:9005  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_141\n      jumpi\n        /* \"anonimity/0.1-ETH-Router.sol\":8928:8938  returndata */\n      dup1\n        /* \"anonimity/0.1-ETH-Router.sol\":8917:8947  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_142\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_142:\n        /* \"anonimity/0.1-ETH-Router.sol\":8917:8947  abi.decode(returndata, (bool)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":8909:8994  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"anonimity/0.1-ETH-Router.sol\":8784:9005  if (returndata.length > 0) { // Return data is optional... */\n    tag_141:\n        /* \"anonimity/0.1-ETH-Router.sol\":7916:9011  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"anonimity/0.1-ETH-Router.sol\":4927:5340  function isContract(address account) internal view returns (bool) {... */\n    tag_133:\n        /* \"anonimity/0.1-ETH-Router.sol\":4987:4991  bool */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":5190:5202  uint256 size */\n      dup1\n        /* \"anonimity/0.1-ETH-Router.sol\":5299:5306  account */\n      dup3\n        /* \"anonimity/0.1-ETH-Router.sol\":5287:5307  extcodesize(account) */\n      extcodesize\n        /* \"anonimity/0.1-ETH-Router.sol\":5279:5307  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":5332:5333  0 */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":5325:5329  size */\n      dup2\n        /* \"anonimity/0.1-ETH-Router.sol\":5325:5333  size > 0 */\n      gt\n        /* \"anonimity/0.1-ETH-Router.sol\":5318:5333  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":4927:5340  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"anonimity/0.1-ETH-Router.sol\":6345:6957  function safeApprove(IERC20 token, address spender, uint256 value) internal {... */\n    tag_145:\n        /* \"anonimity/0.1-ETH-Router.sol\":6719:6720  0 */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":6710:6715  value */\n      dup2\n        /* \"anonimity/0.1-ETH-Router.sol\":6710:6720  value == 0 */\n      eq\n        /* \"anonimity/0.1-ETH-Router.sol\":6709:6771  (value == 0) || (token.allowance(address(this), spender) == 0) */\n      dup1\n      tag_147\n      jumpi\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":6769:6770  0 */\n      0x00\n        /* \"anonimity/0.1-ETH-Router.sol\":6726:6731  token */\n      dup4\n        /* \"anonimity/0.1-ETH-Router.sol\":6726:6741  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"anonimity/0.1-ETH-Router.sol\":6750:6754  this */\n      address\n        /* \"anonimity/0.1-ETH-Router.sol\":6757:6764  spender */\n      dup6\n        /* \"anonimity/0.1-ETH-Router.sol\":6726:6765  token.allowance(address(this), spender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_148\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_148:\n        /* \"anonimity/0.1-ETH-Router.sol\":6726:6765  token.allowance(address(this), spender) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_149\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_149:\n        /* \"anonimity/0.1-ETH-Router.sol\":6726:6765  token.allowance(address(this), spender) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_150\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_150:\n        /* \"anonimity/0.1-ETH-Router.sol\":6726:6765  token.allowance(address(this), spender) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":6726:6770  token.allowance(address(this), spender) == 0 */\n      eq\n        /* \"anonimity/0.1-ETH-Router.sol\":6709:6771  (value == 0) || (token.allowance(address(this), spender) == 0) */\n    tag_147:\n        /* \"anonimity/0.1-ETH-Router.sol\":6701:6851  require((value == 0) || (token.allowance(address(this), spender) == 0),... */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x36\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25\n      0x36\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"anonimity/0.1-ETH-Router.sol\":6861:6950  callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      tag_152\n        /* \"anonimity/0.1-ETH-Router.sol\":6880:6885  token */\n      dup4\n        /* \"anonimity/0.1-ETH-Router.sol\":6910:6915  token */\n      dup5\n        /* \"anonimity/0.1-ETH-Router.sol\":6910:6923  token.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"anonimity/0.1-ETH-Router.sol\":6910:6932  token.approve.selector */\n      swap1\n      pop\n      0xe0\n      shl\n        /* \"anonimity/0.1-ETH-Router.sol\":6934:6941  spender */\n      dup5\n        /* \"anonimity/0.1-ETH-Router.sol\":6943:6948  value */\n      dup5\n        /* \"anonimity/0.1-ETH-Router.sol\":6887:6949  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"anonimity/0.1-ETH-Router.sol\":6887:6949  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":6887:6949  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      pop\n        /* \"anonimity/0.1-ETH-Router.sol\":6861:6879  callOptionalReturn */\n      tag_126\n        /* \"anonimity/0.1-ETH-Router.sol\":6861:6950  callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      jump\t// in\n    tag_152:\n        /* \"anonimity/0.1-ETH-Router.sol\":6345:6957  function safeApprove(IERC20 token, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_57308f09d5629392b8f7d9e16798d0401751415aab39e9bf210ce0719fbb2edf 4d657373696572577261707065723a20696e73756666696369656e7420636f696e21\n    data_c645ed3573958a1d40ca56f987855fd774192d2c2a78d4419757d9cbcf326d65 4d657373696572577261707065723a20756e657870656374656420737461747573\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n    data_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25 5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365\n\n    auxdata: 0xa265627a7a72315820afd7a42f06f882f6f7b4f25498d206b4811acaa4d1d5c9199c4486c8e07029c764736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2078 CODESIZE SUB DUP1 PUSH3 0x2078 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC0C546A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x277 JUMPI PUSH3 0x276 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x282 PUSH1 0x20 SHL PUSH3 0x15EB OR SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP POP POP POP PUSH3 0x725 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH3 0x380 JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x356 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP EQ JUMPDEST PUSH3 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x2042 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x4AB DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH3 0x4B0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x4DC DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x712 PUSH1 0x20 SHL PUSH3 0x15D8 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x54F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH3 0x5A0 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH3 0x57B JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x604 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x609 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH3 0x682 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH3 0x70C JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x6A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH3 0x70B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x2018 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E3 DUP1 PUSH3 0x735 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x68F536F EQ PUSH2 0x57 JUMPI DUP1 PUSH4 0x31796919 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x527BA9AF EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x65104A0C EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xD936547E EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x22D JUMPI JUMPDEST STOP JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x284 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC6 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11D PUSH2 0xD71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH2 0x11FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x347 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F742077686974656C69737465640000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x997318EC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x425 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x180C PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5129B3E1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x481 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x5BF DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3B406FB7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x509 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x22217CD3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1222 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5D6 DUP5 CALLVALUE PUSH2 0x123C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x68F JUMPI PUSH2 0x68E CALLER ADDRESS DUP6 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC0C546A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x62D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x641 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x657 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1253 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 GT ISZERO PUSH2 0xB27 JUMPI DUP5 ISZERO PUSH2 0xA78 JUMPI PUSH1 0x60 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6D0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x703 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x75DDC9ED PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x797 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x7CB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x60 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFB3BDB41 DUP5 DUP7 DUP6 DUP14 PUSH2 0x85C PUSH1 0x2 TIMESTAMP PUSH2 0x1359 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8EC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x8D1 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x913 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x927 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x952 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x9A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9DC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9C1 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP SWAP1 POP DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x9F8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 LT ISZERO PUSH2 0xA58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x182E PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA65 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 SUB SWAP3 POP POP POP PUSH2 0xB26 JUMP JUMPDEST PUSH2 0xB25 CALLER DUP9 DUP5 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x75DDC9ED PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAD8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1253 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB214FAA5 DUP11 DUP14 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0xBAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 SWAP6 POP DUP2 SWAP7 POP DUP3 SWAP8 POP DUP4 SWAP9 POP DUP5 SWAP10 POP POP POP POP POP POP DUP5 PUSH32 0xCB186CC0ADD5BE357AE2D3845E42BE2FFBED8CB23B60F1B058EA371ADFF0A363 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP7 GT ISZERO PUSH2 0xD3D JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xCBF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xD3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4D657373696572577261707065723A20726566756E6400000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xEAD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3B406FB7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDF7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x22217CD3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1222 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xEC2 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEF4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xF27 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x75DDC9ED PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xFEF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x60 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1F00CA74 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10C2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10A7 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x1144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x115A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x1177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11AE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1193 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP SWAP1 POP DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x11CA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 ADD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1233 JUMPI INVALID JUMPDEST DUP1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1248 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1353 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD SWAP1 POP PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x138D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x136C JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1387 JUMP JUMPDEST DUP2 DUP4 MUL SWAP1 POP DUP2 DUP4 DUP3 DUP2 PUSH2 0x137B JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1383 JUMPI INVALID JUMPDEST DUP1 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13AC DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15D8 JUMP JUMPDEST PUSH2 0x141E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x146D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x144A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14CF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14D4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x154C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x15D2 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x156B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x184F PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x16E5 JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP EQ JUMPDEST PUSH2 0x173A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1879 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1806 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x138D JUMP JUMPDEST POP POP POP JUMP INVALID 0x4D PUSH6 0x737369657257 PUSH19 0x61707065723A20696E73756666696369656E74 KECCAK256 PUSH4 0x6F696E21 0x4D PUSH6 0x737369657257 PUSH19 0x61707065723A20756E65787065637465642073 PUSH21 0x617475735361666545524332303A20455243323020 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A265627A7A72315820AFD7A42F MOD 0xF8 DUP3 0xF6 0xF7 0xB4 CALLCODE SLOAD SWAP9 0xD2 MOD 0xB4 DUP2 BYTE 0xCA LOG4 0xD1 0xD5 0xC9 NOT SWAP13 DIFFICULTY DUP7 0xC8 0xE0 PUSH17 0x29C764736F6C6343000511003253616665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x636500000000000000000000000000 ",
							"sourceMap": "9968:2791:0:-;;;10319:366;8:9:-1;5:2;;;30:1;27;20:12;5:2;10319:366:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10319:366:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10414:7;10405:6;;:16;;;;;;;;;;;;;;;;;;10441:12;10427:11;;:26;;;;;;;;;;;;;;;;;;10473:12;10459:11;;:26;;;;;;;;;;;;;;;;;;10491:23;10532:11;;;;;;;;;;;10491:53;;10550:12;10565:8;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10565:16:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10565:16:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10565:16:0;;;;;;;;;;;;;;;;10550:31;;10617:1;10591:28;;10599:5;10591:28;;;10587:94;;10631:43;10649:11;;;;;;;;;;;10670:2;10631:5;:17;;;;;;;;:43;;;;;:::i;:::-;10587:94;10319:366;;;;;9968:2791;;6345:612;6719:1;6710:5;:10;6709:62;;;;6769:1;6726:5;:15;;;6750:4;6757:7;6726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6726:39:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6726:39:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6726:39:0;;;;;;;;;;;;;;;;:44;6709:62;6701:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6861:89;6880:5;6910;:13;;;:22;;;;6934:7;6943:5;6887:62;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6887:62:0;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;6887:62:0;6861:18;;;:89;;:::i;:::-;6345:612;;;:::o;7916:1095::-;8511:27;8519:5;8511:25;;;;;;;:27;;:::i;:::-;8503:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8645:12;8659:23;8694:5;8686:19;;8706:4;8686:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;8686:25:0;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;8644:67:0;;;;8729:7;8721:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8808:1;8788:10;:17;:21;8784:221;;;8928:10;8917:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8917:30:0;;;;;;;;;;;;;;;;8909:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8784:221;7916:1095;;;;:::o;4927:413::-;4987:4;5190:12;5299:7;5287:20;5279:28;;5332:1;5325:4;:8;5318:15;;;4927:413;;;:::o;9968:2791::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100555760003560e01c8063068f536f1461005757806331796919146100b1578063527ba9af1461010857806365104a0c1461015f578063d936547e146101c4578063f887ea401461022d575b005b6100af6004803603606081101561006d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803515159060200190929190505050610284565b005b3480156100bd57600080fd5b506100c6610d4b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561011457600080fd5b5061011d610d71565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561016b57600080fd5b506101ae6004803603602081101561018257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d97565b6040518082815260200191505060405180910390f35b3480156101d057600080fd5b50610213600480360360208110156101e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111dd565b604051808215151515815260200191505060405180910390f35b34801561023957600080fd5b506102426111fd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610347576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6f742077686974656c6973746564000000000000000000000000000000000081525060200191505060405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff1663997318ec6040518163ffffffff1660e01b815260040160206040518083038186803b15801561038f57600080fd5b505afa1580156103a3573d6000803e3d6000fd5b505050506040513d60208110156103b957600080fd5b8101908080519060200190929190505050905080341015610425576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061180c6022913960400191505060405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16635129b3e16040518163ffffffff1660e01b815260040160206040518083038186803b15801561046d57600080fd5b505afa158015610481573d6000803e3d6000fd5b505050506040513d602081101561049757600080fd5b8101908080519060200190929190505050905060006105bf8673ffffffffffffffffffffffffffffffffffffffff16633b406fb76040518163ffffffff1660e01b815260040160206040518083038186803b1580156104f557600080fd5b505afa158015610509573d6000803e3d6000fd5b505050506040513d602081101561051f57600080fd5b81019080805190602001909291905050508773ffffffffffffffffffffffffffffffffffffffff166322217cd36040518163ffffffff1660e01b815260040160206040518083038186803b15801561057657600080fd5b505afa15801561058a573d6000803e3d6000fd5b505050506040513d60208110156105a057600080fd5b810190808051906020019092919050505061122290919063ffffffff16565b905060006105d6843461123c90919063ffffffff16565b9050600083111561068f5761068e3330858a73ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561062d57600080fd5b505afa158015610641573d6000803e3d6000fd5b505050506040513d602081101561065757600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16611253909392919063ffffffff16565b5b6000821115610b27578415610a7857606060026040519080825280602002602001820160405280156106d05781602001602082028038833980820191505090505b509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160008151811061070357fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508773ffffffffffffffffffffffffffffffffffffffff166375ddc9ed6040518163ffffffff1660e01b815260040160206040518083038186803b15801561078357600080fd5b505afa158015610797573d6000803e3d6000fd5b505050506040513d60208110156107ad57600080fd5b8101908080519060200190929190505050816001815181106107cb57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb3bdb418486858d61085c60024261135990919063ffffffff16565b6040518663ffffffff1660e01b815260040180858152602001806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b838110156108ec5780820151818401526020810190506108d1565b50505050905001955050505050506000604051808303818588803b15801561091357600080fd5b505af1158015610927573d6000803e3d6000fd5b50505050506040513d6000823e3d601f19601f82011682018060405250602081101561095257600080fd5b810190808051604051939291908464010000000082111561097257600080fd5b8382019150602082018581111561098857600080fd5b82518660208202830111640100000000821117156109a557600080fd5b8083526020830192505050908051906020019060200280838360005b838110156109dc5780820151818401526020810190506109c1565b505050509050016040525050509050806000815181106109f857fe5b6020026020010151831015610a58576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061182e6021913960400191505060405180910390fd5b80600081518110610a6557fe5b6020026020010151830392505050610b26565b610b253388848a73ffffffffffffffffffffffffffffffffffffffff166375ddc9ed6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ac457600080fd5b505afa158015610ad8573d6000803e3d6000fd5b505050506040513d6020811015610aee57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16611253909392919063ffffffff16565b5b5b60008060008060008b73ffffffffffffffffffffffffffffffffffffffff1663b214faa58a8d6040518363ffffffff1660e01b81526004018082815260200191505060a0604051808303818588803b158015610b8257600080fd5b505af1158015610b96573d6000803e3d6000fd5b50505050506040513d60a0811015610bad57600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050508095508196508297508398508499505050505050847fcb186cc0add5be357ae2d3845e42be2ffbed8cb23b60f1b058ea371adff0a36385858585604051808563ffffffff1663ffffffff16815260200184815260200183815260200182815260200194505050505060405180910390a26000861115610d3d5760003373ffffffffffffffffffffffffffffffffffffffff168760405180600001905060006040518083038185875af1925050503d8060008114610cbf576040519150601f19603f3d011682016040523d82523d6000602084013e610cc4565b606091505b5050905080610d3b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4d657373696572577261707065723a20726566756e640000000000000000000081525060200191505060405180910390fd5b505b505050505050505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610ead8373ffffffffffffffffffffffffffffffffffffffff16633b406fb76040518163ffffffff1660e01b815260040160206040518083038186803b158015610de357600080fd5b505afa158015610df7573d6000803e3d6000fd5b505050506040513d6020811015610e0d57600080fd5b81019080805190602001909291905050508473ffffffffffffffffffffffffffffffffffffffff166322217cd36040518163ffffffff1660e01b815260040160206040518083038186803b158015610e6457600080fd5b505afa158015610e78573d6000803e3d6000fd5b505050506040513d6020811015610e8e57600080fd5b810190808051906020019092919050505061122290919063ffffffff16565b90506000811415610ec25760009150506111d8565b60606002604051908082528060200260200182016040528015610ef45781602001602082028038833980820191505090505b509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681600081518110610f2757fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff166375ddc9ed6040518163ffffffff1660e01b815260040160206040518083038186803b158015610fa757600080fd5b505afa158015610fbb573d6000803e3d6000fd5b505050506040513d6020811015610fd157600080fd5b810190808051906020019092919050505081600181518110610fef57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631f00ca7484846040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019060200280838360005b838110156110c25780820151818401526020810190506110a7565b50505050905001935050505060006040518083038186803b1580156110e657600080fd5b505afa1580156110fa573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561112457600080fd5b810190808051604051939291908464010000000082111561114457600080fd5b8382019150602082018581111561115a57600080fd5b825186602082028301116401000000008211171561117757600080fd5b8083526020830192505050908051906020019060200280838360005b838110156111ae578082015181840152602081019050611193565b505050509050016040525050509050806000815181106111ca57fe5b602002602001015193505050505b919050565b60036020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081830190508281101561123357fe5b80905092915050565b60008282111561124857fe5b818303905092915050565b611353848573ffffffffffffffffffffffffffffffffffffffff166323b872dd905060e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061138d565b50505050565b60008083141561136c5760009050611387565b81830290508183828161137b57fe5b041461138357fe5b8090505b92915050565b6113ac8273ffffffffffffffffffffffffffffffffffffffff166115d8565b61141e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b6020831061146d578051825260208201915060208101905060208303925061144a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146114cf576040519150601f19603f3d011682016040523d82523d6000602084013e6114d4565b606091505b50915091508161154c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b6000815111156115d25780806020019051602081101561156b57600080fd5b81019080805190602001909291905050506115d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061184f602a913960400191505060405180910390fd5b5b50505050565b600080823b905060008111915050919050565b60008114806116e5575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b1580156116a857600080fd5b505afa1580156116bc573d6000803e3d6000fd5b505050506040513d60208110156116d257600080fd5b8101908080519060200190929190505050145b61173a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806118796036913960400191505060405180910390fd5b611806838473ffffffffffffffffffffffffffffffffffffffff1663095ea7b3905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061138d565b50505056fe4d657373696572577261707065723a20696e73756666696369656e7420636f696e214d657373696572577261707065723a20756e6578706563746564207374617475735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a265627a7a72315820afd7a42f06f882f6f7b4f25498d206b4811acaa4d1d5c9199c4486c8e07029c764736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x68F536F EQ PUSH2 0x57 JUMPI DUP1 PUSH4 0x31796919 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x527BA9AF EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x65104A0C EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xD936547E EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x22D JUMPI JUMPDEST STOP JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x284 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC6 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11D PUSH2 0xD71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH2 0x11FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x347 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F742077686974656C69737465640000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x997318EC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x425 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x180C PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5129B3E1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x481 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x5BF DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3B406FB7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x509 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x22217CD3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1222 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5D6 DUP5 CALLVALUE PUSH2 0x123C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x68F JUMPI PUSH2 0x68E CALLER ADDRESS DUP6 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC0C546A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x62D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x641 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x657 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1253 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 GT ISZERO PUSH2 0xB27 JUMPI DUP5 ISZERO PUSH2 0xA78 JUMPI PUSH1 0x60 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6D0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x703 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x75DDC9ED PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x797 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x7CB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x60 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFB3BDB41 DUP5 DUP7 DUP6 DUP14 PUSH2 0x85C PUSH1 0x2 TIMESTAMP PUSH2 0x1359 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8EC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x8D1 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x913 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x927 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x952 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x9A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9DC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9C1 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP SWAP1 POP DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x9F8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 LT ISZERO PUSH2 0xA58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x182E PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA65 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 SUB SWAP3 POP POP POP PUSH2 0xB26 JUMP JUMPDEST PUSH2 0xB25 CALLER DUP9 DUP5 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x75DDC9ED PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAD8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1253 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB214FAA5 DUP11 DUP14 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0xBAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 SWAP6 POP DUP2 SWAP7 POP DUP3 SWAP8 POP DUP4 SWAP9 POP DUP5 SWAP10 POP POP POP POP POP POP DUP5 PUSH32 0xCB186CC0ADD5BE357AE2D3845E42BE2FFBED8CB23B60F1B058EA371ADFF0A363 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP7 GT ISZERO PUSH2 0xD3D JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xCBF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xD3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4D657373696572577261707065723A20726566756E6400000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xEAD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3B406FB7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDF7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x22217CD3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1222 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xEC2 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEF4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xF27 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x75DDC9ED PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xFEF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x60 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1F00CA74 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10C2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10A7 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x1144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x115A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x1177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11AE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1193 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP SWAP1 POP DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x11CA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 ADD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1233 JUMPI INVALID JUMPDEST DUP1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1248 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1353 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD SWAP1 POP PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x138D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x136C JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1387 JUMP JUMPDEST DUP2 DUP4 MUL SWAP1 POP DUP2 DUP4 DUP3 DUP2 PUSH2 0x137B JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1383 JUMPI INVALID JUMPDEST DUP1 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13AC DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15D8 JUMP JUMPDEST PUSH2 0x141E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x146D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x144A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14CF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14D4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x154C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x15D2 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x156B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x184F PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x16E5 JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP EQ JUMPDEST PUSH2 0x173A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1879 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1806 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x138D JUMP JUMPDEST POP POP POP JUMP INVALID 0x4D PUSH6 0x737369657257 PUSH19 0x61707065723A20696E73756666696369656E74 KECCAK256 PUSH4 0x6F696E21 0x4D PUSH6 0x737369657257 PUSH19 0x61707065723A20756E65787065637465642073 PUSH21 0x617475735361666545524332303A20455243323020 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A265627A7A72315820AFD7A42F MOD 0xF8 DUP3 0xF6 0xF7 0xB4 CALLCODE SLOAD SWAP9 0xD2 MOD 0xB4 DUP2 BYTE 0xCA LOG4 0xD1 0xD5 0xC9 NOT SWAP13 DIFFICULTY DUP7 0xC8 0xE0 PUSH17 0x29C764736F6C6343000511003200000000 ",
							"sourceMap": "9968:2791:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11156:1601;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11156:1601:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10111:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10111:26:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10081;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10081:26:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10724:428;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10724:428:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10724:428:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10141:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10141:43:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10141:43:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10056:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10056:21:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11156:1601;11285:11;;;;;;;;;;;11264:32;;11272:8;11264:32;;;11256:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11322:18;11343:8;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11343:27:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11343:27:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11343:27:0;;;;;;;;;;;;;;;;11322:48;;11397:10;11384:9;:23;;11376:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11452:19;11474:8;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11474:28:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11474:28:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11474:28:0;;;;;;;;;;;;;;;;11452:50;;11508:17;11528:55;11559:8;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11559:23:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11559:23:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11559:23:0;;;;;;;;;;;;;;;;11528:8;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11528:26:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11528:26:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11528:26:0;;;;;;;;;;;;;;;;:30;;:55;;;;:::i;:::-;11508:75;;11589:21;11613:25;11627:10;11613:9;:13;;:25;;;;:::i;:::-;11589:49;;11662:1;11648:11;:15;11644:109;;;11673:73;11707:10;11727:4;11734:11;11673:8;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11673:16:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11673:16:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11673:16:0;;;;;;;;;;;;;;;;:33;;;;:73;;;;;;:::i;:::-;11644:109;11774:1;11762:9;:13;11758:553;;;11789:7;11785:520;;;11808:21;11846:1;11832:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;11832:16:0;;;;11808:40;;11868:11;;;;;;;;;;;11858:4;11863:1;11858:7;;;;;;;;;;;;;:21;;;;;;;;;;;11907:8;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11907:19:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11907:19:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11907:19:0;;;;;;;;;;;;;;;;11889:4;11894:1;11889:7;;;;;;;;;;;;;:38;;;;;;;;;;;11937:24;11964:6;;;;;;;;;;;:28;;;11999:13;12014:9;12025:4;12039:8;12050:22;12070:1;12050:15;:19;;:22;;;;:::i;:::-;11964:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11964:109:0;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11964:109:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11964:109:0;;;;;;;39:16:-1;36:1;17:17;2:54;11964:109:0;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11964:109:0;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;385:12;380:3;373:25;421:4;416:3;412:14;405:21;;0:433;;11964:109:0;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11964:109:0;;;;;;;;;;;11937:136;;12108:7;12116:1;12108:10;;;;;;;;;;;;;;12091:13;:27;;12083:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12183:7;12191:1;12183:10;;;;;;;;;;;;;;12166:27;;;;11785:520;;;;;12218:78;12255:10;12275:8;12286:9;12218:8;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12218:19:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12218:19:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12218:19:0;;;;;;;;;;;;;;;;:36;;;;:78;;;;;;:::i;:::-;11785:520;11758:553;12316:18;12340:20;12366:17;12389:15;12410:11;12482:8;:16;;;12505:10;12517:11;12482:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12482:47:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12482:47:0;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;12482:47:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12427:102;;;;;;;;;;;;;;;;;;;;12549:10;12540:61;12561:13;12576:9;12587:7;12596:3;12540:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12627:1;12611:13;:17;12607:146;;;12639:12;12656:10;:15;;12678:13;12656:40;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;12638:58:0;;;12712:7;12704:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12607:146;;11156:1601;;;;;;;;;;;;:::o;10111:26::-;;;;;;;;;;;;;:::o;10081:::-;;;;;;;;;;;;;:::o;10724:428::-;10794:7;10809:17;10829:55;10860:8;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10860:23:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10860:23:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10860:23:0;;;;;;;;;;;;;;;;10829:8;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10829:26:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10829:26:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10829:26:0;;;;;;;;;;;;;;;;:30;;:55;;;;:::i;:::-;10809:75;;10907:1;10894:9;:14;10890:45;;;10927:1;10920:8;;;;;10890:45;10940:22;10979:1;10965:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;10965:16:0;;;;10940:41;;10998:11;;;;;;;;;;;10987:5;10993:1;10987:8;;;;;;;;;;;;;:22;;;;;;;;;;;11034:8;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11034:19:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11034:19:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11034:19:0;;;;;;;;;;;;;;;;11015:5;11021:1;11015:8;;;;;;;;;;;;;:39;;;;;;;;;;;11060:24;11087:6;;;;;;;;;;;:19;;;11107:9;11118:5;11087:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11087:37:0;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11087:37:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11087:37:0;;;;;;39:16:-1;36:1;17:17;2:54;11087:37:0;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11087:37:0;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;385:12;380:3;373:25;421:4;416:3;412:14;405:21;;0:433;;11087:37:0;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11087:37:0;;;;;;;;;;;11060:64;;11137:7;11145:1;11137:10;;;;;;;;;;;;;;11130:17;;;;;10724:428;;;;:::o;10141:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;10056:21::-;;;;;;;;;;;;;:::o;4220:123::-;4278:9;4303:1;4299;:5;4295:9;;4322:1;4317;:6;;4310:14;;;;4337:1;4330:8;;4220:123;;;;:::o;3760:110::-;3818:7;3845:1;3840;:6;;3833:14;;;;3864:1;3860;:5;3853:12;;3760:110;;;;:::o;6137:202::-;6237:95;6256:5;6286;:18;;;:27;;;;6315:4;6321:2;6325:5;6263:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6263:68:0;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;6263:68:0;6237:18;:95::i;:::-;6137:202;;;;:::o;2489:167::-;2547:9;2573:1;2568;:6;2564:35;;;2591:1;2584:8;;;;2564:35;2612:1;2608;:5;2604:9;;2635:1;2630;2626;:5;;;;;;:10;2619:18;;;;2650:1;2643:8;;2489:167;;;;;:::o;7916:1095::-;8511:27;8519:5;8511:25;;;:27::i;:::-;8503:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8645:12;8659:23;8694:5;8686:19;;8706:4;8686:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;8686:25:0;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;8644:67:0;;;;8729:7;8721:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8808:1;8788:10;:17;:21;8784:221;;;8928:10;8917:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8917:30:0;;;;;;;;;;;;;;;;8909:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8784:221;7916:1095;;;;:::o;4927:413::-;4987:4;5190:12;5299:7;5287:20;5279:28;;5332:1;5325:4;:8;5318:15;;;4927:413;;;:::o;6345:612::-;6719:1;6710:5;:10;6709:62;;;;6769:1;6726:5;:15;;;6750:4;6757:7;6726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6726:39:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6726:39:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6726:39:0;;;;;;;;;;;;;;;;:44;6709:62;6701:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6861:89;6880:5;6910;:13;;;:22;;;;6934:7;6943:5;6887:62;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6887:62:0;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;6887:62:0;6861:18;:89::i;:::-;6345:612;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1274200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "184",
								"deposit(address,bytes32,bool)": "infinite",
								"messierAddr()": "1053",
								"purchaseCost(address)": "infinite",
								"router()": "1141",
								"whitelisted(address)": "1272",
								"wrappedCoin()": "1075"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 9968,
									"end": 12759,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 9968,
									"end": 12759,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9968,
									"end": 12759,
									"name": "MSTORE"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "POP"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "MLOAD"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "PUSHSIZE"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "CODESIZE"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "SUB"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "DUP1"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "PUSHSIZE"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "DUP4"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "CODECOPY"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "DUP2"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "DUP2"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "ADD"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "DUP2"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "ADD"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "SWAP1"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "DUP1"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "DUP1"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "MLOAD"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "SWAP1"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "ADD"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "SWAP1"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "SWAP3"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "SWAP2"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "SWAP1"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "DUP1"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "MLOAD"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "SWAP1"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "ADD"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "SWAP1"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "SWAP3"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "SWAP2"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "SWAP1"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "DUP1"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "MLOAD"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "SWAP1"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "ADD"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "SWAP1"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "SWAP3"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "SWAP2"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "SWAP1"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "POP"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "POP"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "POP"
								},
								{
									"begin": 10414,
									"end": 10421,
									"name": "DUP3"
								},
								{
									"begin": 10405,
									"end": 10411,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10405,
									"end": 10411,
									"name": "DUP1"
								},
								{
									"begin": 10405,
									"end": 10421,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 10405,
									"end": 10421,
									"name": "EXP"
								},
								{
									"begin": 10405,
									"end": 10421,
									"name": "DUP2"
								},
								{
									"begin": 10405,
									"end": 10421,
									"name": "SLOAD"
								},
								{
									"begin": 10405,
									"end": 10421,
									"name": "DUP2"
								},
								{
									"begin": 10405,
									"end": 10421,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10405,
									"end": 10421,
									"name": "MUL"
								},
								{
									"begin": 10405,
									"end": 10421,
									"name": "NOT"
								},
								{
									"begin": 10405,
									"end": 10421,
									"name": "AND"
								},
								{
									"begin": 10405,
									"end": 10421,
									"name": "SWAP1"
								},
								{
									"begin": 10405,
									"end": 10421,
									"name": "DUP4"
								},
								{
									"begin": 10405,
									"end": 10421,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10405,
									"end": 10421,
									"name": "AND"
								},
								{
									"begin": 10405,
									"end": 10421,
									"name": "MUL"
								},
								{
									"begin": 10405,
									"end": 10421,
									"name": "OR"
								},
								{
									"begin": 10405,
									"end": 10421,
									"name": "SWAP1"
								},
								{
									"begin": 10405,
									"end": 10421,
									"name": "SSTORE"
								},
								{
									"begin": 10405,
									"end": 10421,
									"name": "POP"
								},
								{
									"begin": 10441,
									"end": 10453,
									"name": "DUP2"
								},
								{
									"begin": 10427,
									"end": 10438,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10427,
									"end": 10438,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10427,
									"end": 10453,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 10427,
									"end": 10453,
									"name": "EXP"
								},
								{
									"begin": 10427,
									"end": 10453,
									"name": "DUP2"
								},
								{
									"begin": 10427,
									"end": 10453,
									"name": "SLOAD"
								},
								{
									"begin": 10427,
									"end": 10453,
									"name": "DUP2"
								},
								{
									"begin": 10427,
									"end": 10453,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10427,
									"end": 10453,
									"name": "MUL"
								},
								{
									"begin": 10427,
									"end": 10453,
									"name": "NOT"
								},
								{
									"begin": 10427,
									"end": 10453,
									"name": "AND"
								},
								{
									"begin": 10427,
									"end": 10453,
									"name": "SWAP1"
								},
								{
									"begin": 10427,
									"end": 10453,
									"name": "DUP4"
								},
								{
									"begin": 10427,
									"end": 10453,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10427,
									"end": 10453,
									"name": "AND"
								},
								{
									"begin": 10427,
									"end": 10453,
									"name": "MUL"
								},
								{
									"begin": 10427,
									"end": 10453,
									"name": "OR"
								},
								{
									"begin": 10427,
									"end": 10453,
									"name": "SWAP1"
								},
								{
									"begin": 10427,
									"end": 10453,
									"name": "SSTORE"
								},
								{
									"begin": 10427,
									"end": 10453,
									"name": "POP"
								},
								{
									"begin": 10473,
									"end": 10485,
									"name": "DUP1"
								},
								{
									"begin": 10459,
									"end": 10470,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 10459,
									"end": 10470,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10459,
									"end": 10485,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 10459,
									"end": 10485,
									"name": "EXP"
								},
								{
									"begin": 10459,
									"end": 10485,
									"name": "DUP2"
								},
								{
									"begin": 10459,
									"end": 10485,
									"name": "SLOAD"
								},
								{
									"begin": 10459,
									"end": 10485,
									"name": "DUP2"
								},
								{
									"begin": 10459,
									"end": 10485,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10459,
									"end": 10485,
									"name": "MUL"
								},
								{
									"begin": 10459,
									"end": 10485,
									"name": "NOT"
								},
								{
									"begin": 10459,
									"end": 10485,
									"name": "AND"
								},
								{
									"begin": 10459,
									"end": 10485,
									"name": "SWAP1"
								},
								{
									"begin": 10459,
									"end": 10485,
									"name": "DUP4"
								},
								{
									"begin": 10459,
									"end": 10485,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10459,
									"end": 10485,
									"name": "AND"
								},
								{
									"begin": 10459,
									"end": 10485,
									"name": "MUL"
								},
								{
									"begin": 10459,
									"end": 10485,
									"name": "OR"
								},
								{
									"begin": 10459,
									"end": 10485,
									"name": "SWAP1"
								},
								{
									"begin": 10459,
									"end": 10485,
									"name": "SSTORE"
								},
								{
									"begin": 10459,
									"end": 10485,
									"name": "POP"
								},
								{
									"begin": 10491,
									"end": 10514,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10532,
									"end": 10543,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 10532,
									"end": 10543,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10532,
									"end": 10543,
									"name": "SWAP1"
								},
								{
									"begin": 10532,
									"end": 10543,
									"name": "SLOAD"
								},
								{
									"begin": 10532,
									"end": 10543,
									"name": "SWAP1"
								},
								{
									"begin": 10532,
									"end": 10543,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 10532,
									"end": 10543,
									"name": "EXP"
								},
								{
									"begin": 10532,
									"end": 10543,
									"name": "SWAP1"
								},
								{
									"begin": 10532,
									"end": 10543,
									"name": "DIV"
								},
								{
									"begin": 10532,
									"end": 10543,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10532,
									"end": 10543,
									"name": "AND"
								},
								{
									"begin": 10491,
									"end": 10544,
									"name": "SWAP1"
								},
								{
									"begin": 10491,
									"end": 10544,
									"name": "POP"
								},
								{
									"begin": 10550,
									"end": 10562,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10565,
									"end": 10573,
									"name": "DUP2"
								},
								{
									"begin": 10565,
									"end": 10579,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10565,
									"end": 10579,
									"name": "AND"
								},
								{
									"begin": 10565,
									"end": 10579,
									"name": "PUSH",
									"value": "FC0C546A"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "MLOAD"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "DUP2"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "PUSH",
									"value": "FFFFFFFF"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "AND"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "SHL"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "DUP2"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "MSTORE"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "ADD"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "MLOAD"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "DUP1"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "DUP4"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "SUB"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "DUP2"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "DUP7"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "DUP1"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "EXTCODESIZE"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "POP"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "GAS"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "STATICCALL"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 45,
									"end": 61,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 42,
									"end": 43,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 39,
									"end": 40,
									"name": "DUP1"
								},
								{
									"begin": 24,
									"end": 62,
									"name": "RETURNDATACOPY"
								},
								{
									"begin": 77,
									"end": 93,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 74,
									"end": 75,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 67,
									"end": 94,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "POP"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "POP"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "POP"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "POP"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "MLOAD"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "DUP2"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "ADD"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "SWAP1"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "DUP1"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "DUP1"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "MLOAD"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "SWAP1"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "ADD"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "SWAP1"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "SWAP3"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "SWAP2"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "SWAP1"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "POP"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "POP"
								},
								{
									"begin": 10565,
									"end": 10581,
									"name": "POP"
								},
								{
									"begin": 10550,
									"end": 10581,
									"name": "SWAP1"
								},
								{
									"begin": 10550,
									"end": 10581,
									"name": "POP"
								},
								{
									"begin": 10617,
									"end": 10618,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10591,
									"end": 10619,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10591,
									"end": 10619,
									"name": "AND"
								},
								{
									"begin": 10599,
									"end": 10604,
									"name": "DUP2"
								},
								{
									"begin": 10591,
									"end": 10619,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10591,
									"end": 10619,
									"name": "AND"
								},
								{
									"begin": 10591,
									"end": 10619,
									"name": "EQ"
								},
								{
									"begin": 10587,
									"end": 10681,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 10587,
									"end": 10681,
									"name": "JUMPI"
								},
								{
									"begin": 10631,
									"end": 10674,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 10649,
									"end": 10660,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 10649,
									"end": 10660,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10649,
									"end": 10660,
									"name": "SWAP1"
								},
								{
									"begin": 10649,
									"end": 10660,
									"name": "SLOAD"
								},
								{
									"begin": 10649,
									"end": 10660,
									"name": "SWAP1"
								},
								{
									"begin": 10649,
									"end": 10660,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 10649,
									"end": 10660,
									"name": "EXP"
								},
								{
									"begin": 10649,
									"end": 10660,
									"name": "SWAP1"
								},
								{
									"begin": 10649,
									"end": 10660,
									"name": "DIV"
								},
								{
									"begin": 10649,
									"end": 10660,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10649,
									"end": 10660,
									"name": "AND"
								},
								{
									"begin": 10670,
									"end": 10672,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10631,
									"end": 10636,
									"name": "DUP4"
								},
								{
									"begin": 10631,
									"end": 10648,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10631,
									"end": 10648,
									"name": "AND"
								},
								{
									"begin": 10631,
									"end": 10648,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 10631,
									"end": 10648,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10631,
									"end": 10648,
									"name": "SHL"
								},
								{
									"begin": 10631,
									"end": 10648,
									"name": "PUSH [tag]",
									"value": "18446744073709551761"
								},
								{
									"begin": 10631,
									"end": 10648,
									"name": "OR"
								},
								{
									"begin": 10631,
									"end": 10648,
									"name": "SWAP1"
								},
								{
									"begin": 10631,
									"end": 10674,
									"name": "SWAP3"
								},
								{
									"begin": 10631,
									"end": 10674,
									"name": "SWAP2"
								},
								{
									"begin": 10631,
									"end": 10674,
									"name": "SWAP1"
								},
								{
									"begin": 10631,
									"end": 10674,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10631,
									"end": 10674,
									"name": "SHR"
								},
								{
									"begin": 10631,
									"end": 10674,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 10631,
									"end": 10674,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 10631,
									"end": 10674,
									"name": "JUMPDEST"
								},
								{
									"begin": 10587,
									"end": 10681,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 10587,
									"end": 10681,
									"name": "JUMPDEST"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "POP"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "POP"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "POP"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "POP"
								},
								{
									"begin": 10319,
									"end": 10685,
									"name": "POP"
								},
								{
									"begin": 9968,
									"end": 12759,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 9968,
									"end": 12759,
									"name": "JUMP"
								},
								{
									"begin": 6345,
									"end": 6957,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 6345,
									"end": 6957,
									"name": "JUMPDEST"
								},
								{
									"begin": 6719,
									"end": 6720,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 6710,
									"end": 6715,
									"name": "DUP2"
								},
								{
									"begin": 6710,
									"end": 6720,
									"name": "EQ"
								},
								{
									"begin": 6709,
									"end": 6771,
									"name": "DUP1"
								},
								{
									"begin": 6709,
									"end": 6771,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 6709,
									"end": 6771,
									"name": "JUMPI"
								},
								{
									"begin": 6709,
									"end": 6771,
									"name": "POP"
								},
								{
									"begin": 6769,
									"end": 6770,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 6726,
									"end": 6731,
									"name": "DUP4"
								},
								{
									"begin": 6726,
									"end": 6741,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6726,
									"end": 6741,
									"name": "AND"
								},
								{
									"begin": 6726,
									"end": 6741,
									"name": "PUSH",
									"value": "DD62ED3E"
								},
								{
									"begin": 6750,
									"end": 6754,
									"name": "ADDRESS"
								},
								{
									"begin": 6757,
									"end": 6764,
									"name": "DUP6"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "MLOAD"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "DUP4"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "PUSH",
									"value": "FFFFFFFF"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "AND"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "SHL"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "DUP2"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "MSTORE"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "ADD"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "DUP1"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "DUP4"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "AND"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "AND"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "DUP2"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "MSTORE"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "ADD"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "DUP3"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "AND"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "AND"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "DUP2"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "MSTORE"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "ADD"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "SWAP3"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "POP"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "POP"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "POP"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "MLOAD"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "DUP1"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "DUP4"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "SUB"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "DUP2"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "DUP7"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "DUP1"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "EXTCODESIZE"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "POP"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "GAS"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "STATICCALL"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 45,
									"end": 61,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 42,
									"end": 43,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 39,
									"end": 40,
									"name": "DUP1"
								},
								{
									"begin": 24,
									"end": 62,
									"name": "RETURNDATACOPY"
								},
								{
									"begin": 77,
									"end": 93,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 74,
									"end": 75,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 67,
									"end": 94,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "POP"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "POP"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "POP"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "POP"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "MLOAD"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "DUP2"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "ADD"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "SWAP1"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "DUP1"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "DUP1"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "MLOAD"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "SWAP1"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "ADD"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "SWAP1"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "SWAP3"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "SWAP2"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "SWAP1"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "POP"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "POP"
								},
								{
									"begin": 6726,
									"end": 6765,
									"name": "POP"
								},
								{
									"begin": 6726,
									"end": 6770,
									"name": "EQ"
								},
								{
									"begin": 6709,
									"end": 6771,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 6709,
									"end": 6771,
									"name": "JUMPDEST"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "JUMPI"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "MLOAD"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "DUP2"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "MSTORE"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "ADD"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "DUP1"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "DUP1"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "ADD"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "DUP3"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "DUP2"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "SUB"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "DUP3"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "MSTORE"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "PUSH",
									"value": "36"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "DUP2"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "MSTORE"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "ADD"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "DUP1"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "PUSH data",
									"value": "EF945DDB1BFDC0DA870FEB4560D868B047642B4AC7F2FB7F8B7C51CB4A411E25"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "PUSH",
									"value": "36"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "SWAP2"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "CODECOPY"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "ADD"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "SWAP2"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "POP"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "POP"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "MLOAD"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "DUP1"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "SWAP2"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "SUB"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "SWAP1"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "REVERT"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 6701,
									"end": 6851,
									"name": "JUMPDEST"
								},
								{
									"begin": 6861,
									"end": 6950,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 6880,
									"end": 6885,
									"name": "DUP4"
								},
								{
									"begin": 6910,
									"end": 6915,
									"name": "DUP5"
								},
								{
									"begin": 6910,
									"end": 6923,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6923,
									"name": "AND"
								},
								{
									"begin": 6910,
									"end": 6923,
									"name": "PUSH",
									"value": "95EA7B3"
								},
								{
									"begin": 6910,
									"end": 6932,
									"name": "SWAP1"
								},
								{
									"begin": 6910,
									"end": 6932,
									"name": "POP"
								},
								{
									"begin": 6910,
									"end": 6932,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": 6910,
									"end": 6932,
									"name": "SHL"
								},
								{
									"begin": 6934,
									"end": 6941,
									"name": "DUP5"
								},
								{
									"begin": 6943,
									"end": 6948,
									"name": "DUP5"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "MLOAD"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "PUSH",
									"value": "24"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "ADD"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "DUP1"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "DUP4"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "AND"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "AND"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "DUP2"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "MSTORE"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "ADD"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "DUP3"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "DUP2"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "MSTORE"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "ADD"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "SWAP3"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "POP"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "POP"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "POP"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "MLOAD"
								},
								{
									"begin": 49,
									"end": 53,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 39,
									"end": 46,
									"name": "DUP2"
								},
								{
									"begin": 30,
									"end": 37,
									"name": "DUP4"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SUB"
								},
								{
									"begin": 13,
									"end": 20,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "SWAP1"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "MSTORE"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "SWAP1"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "NOT"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "AND"
								},
								{
									"begin": 38,
									"end": 42,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 29,
									"end": 36,
									"name": "DUP3"
								},
								{
									"begin": 25,
									"end": 43,
									"name": "ADD"
								},
								{
									"begin": 67,
									"end": 77,
									"name": "DUP1"
								},
								{
									"begin": 61,
									"end": 78,
									"name": "MLOAD"
								},
								{
									"begin": 96,
									"end": 154,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 199,
									"end": 207,
									"name": "DUP4"
								},
								{
									"begin": 192,
									"end": 196,
									"name": "DUP2"
								},
								{
									"begin": 186,
									"end": 190,
									"name": "DUP4"
								},
								{
									"begin": 182,
									"end": 197,
									"name": "AND"
								},
								{
									"begin": 179,
									"end": 208,
									"name": "OR"
								},
								{
									"begin": 167,
									"end": 177,
									"name": "DUP4"
								},
								{
									"begin": 160,
									"end": 209,
									"name": "MSTORE"
								},
								{
									"begin": 0,
									"end": 215,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 215,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 215,
									"name": "POP"
								},
								{
									"begin": 6887,
									"end": 6949,
									"name": "POP"
								},
								{
									"begin": 6861,
									"end": 6879,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 6861,
									"end": 6879,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6861,
									"end": 6879,
									"name": "SHL"
								},
								{
									"begin": 6861,
									"end": 6950,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6861,
									"end": 6950,
									"name": "SHR"
								},
								{
									"begin": 6861,
									"end": 6950,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 6861,
									"end": 6950,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 6861,
									"end": 6950,
									"name": "JUMPDEST"
								},
								{
									"begin": 6345,
									"end": 6957,
									"name": "POP"
								},
								{
									"begin": 6345,
									"end": 6957,
									"name": "POP"
								},
								{
									"begin": 6345,
									"end": 6957,
									"name": "POP"
								},
								{
									"begin": 6345,
									"end": 6957,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 7916,
									"end": 9011,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 7916,
									"end": 9011,
									"name": "JUMPDEST"
								},
								{
									"begin": 8511,
									"end": 8538,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 8519,
									"end": 8524,
									"name": "DUP3"
								},
								{
									"begin": 8511,
									"end": 8536,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8511,
									"end": 8536,
									"name": "AND"
								},
								{
									"begin": 8511,
									"end": 8536,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 8511,
									"end": 8536,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8511,
									"end": 8536,
									"name": "SHL"
								},
								{
									"begin": 8511,
									"end": 8536,
									"name": "PUSH [tag]",
									"value": "18446744073709551749"
								},
								{
									"begin": 8511,
									"end": 8536,
									"name": "OR"
								},
								{
									"begin": 8511,
									"end": 8538,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8511,
									"end": 8538,
									"name": "SHR"
								},
								{
									"begin": 8511,
									"end": 8538,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 8511,
									"end": 8538,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 8511,
									"end": 8538,
									"name": "JUMPDEST"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "JUMPI"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "MLOAD"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "DUP2"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "MSTORE"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "ADD"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "DUP1"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "DUP1"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "ADD"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "DUP3"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "DUP2"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "SUB"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "DUP3"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "MSTORE"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "DUP2"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "MSTORE"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "ADD"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "DUP1"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "PUSH",
									"value": "5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "DUP2"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "MSTORE"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "POP"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "ADD"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "SWAP2"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "POP"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "POP"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "MLOAD"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "DUP1"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "SWAP2"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "SUB"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "SWAP1"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "REVERT"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 8503,
									"end": 8574,
									"name": "JUMPDEST"
								},
								{
									"begin": 8645,
									"end": 8657,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8659,
									"end": 8682,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 8694,
									"end": 8699,
									"name": "DUP4"
								},
								{
									"begin": 8686,
									"end": 8705,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8686,
									"end": 8705,
									"name": "AND"
								},
								{
									"begin": 8706,
									"end": 8710,
									"name": "DUP4"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "MLOAD"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "DUP1"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "DUP3"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "DUP1"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "MLOAD"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "SWAP1"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "ADD"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "SWAP1"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "DUP1"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "DUP4"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "DUP4"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "tag",
									"value": "24"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMPDEST"
								},
								{
									"begin": 66,
									"end": 68,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 61,
									"end": 64,
									"name": "DUP4"
								},
								{
									"begin": 58,
									"end": 69,
									"name": "LT"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "PUSH [tag]",
									"value": "26"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMPI"
								},
								{
									"begin": 182,
									"end": 185,
									"name": "DUP1"
								},
								{
									"begin": 176,
									"end": 186,
									"name": "MLOAD"
								},
								{
									"begin": 171,
									"end": 174,
									"name": "DUP3"
								},
								{
									"begin": 164,
									"end": 187,
									"name": "MSTORE"
								},
								{
									"begin": 98,
									"end": 100,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 93,
									"end": 96,
									"name": "DUP3"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 82,
									"end": 101,
									"name": "SWAP2"
								},
								{
									"begin": 82,
									"end": 101,
									"name": "POP"
								},
								{
									"begin": 123,
									"end": 125,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP2"
								},
								{
									"begin": 114,
									"end": 126,
									"name": "ADD"
								},
								{
									"begin": 107,
									"end": 126,
									"name": "SWAP1"
								},
								{
									"begin": 107,
									"end": 126,
									"name": "POP"
								},
								{
									"begin": 148,
									"end": 150,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 143,
									"end": 146,
									"name": "DUP4"
								},
								{
									"begin": 139,
									"end": 151,
									"name": "SUB"
								},
								{
									"begin": 132,
									"end": 151,
									"name": "SWAP3"
								},
								{
									"begin": 132,
									"end": 151,
									"name": "POP"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "PUSH [tag]",
									"value": "24"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMP"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "tag",
									"value": "26"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 275,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 267,
									"end": 270,
									"name": "DUP4"
								},
								{
									"begin": 263,
									"end": 265,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 259,
									"end": 271,
									"name": "SUB"
								},
								{
									"begin": 254,
									"end": 257,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 250,
									"end": 272,
									"name": "EXP"
								},
								{
									"begin": 246,
									"end": 276,
									"name": "SUB"
								},
								{
									"begin": 315,
									"end": 319,
									"name": "DUP1"
								},
								{
									"begin": 311,
									"end": 320,
									"name": "NOT"
								},
								{
									"begin": 305,
									"end": 308,
									"name": "DUP3"
								},
								{
									"begin": 299,
									"end": 309,
									"name": "MLOAD"
								},
								{
									"begin": 295,
									"end": 321,
									"name": "AND"
								},
								{
									"begin": 356,
									"end": 360,
									"name": "DUP2"
								},
								{
									"begin": 350,
									"end": 353,
									"name": "DUP5"
								},
								{
									"begin": 344,
									"end": 354,
									"name": "MLOAD"
								},
								{
									"begin": 340,
									"end": 361,
									"name": "AND"
								},
								{
									"begin": 389,
									"end": 396,
									"name": "DUP1"
								},
								{
									"begin": 380,
									"end": 387,
									"name": "DUP3"
								},
								{
									"begin": 377,
									"end": 397,
									"name": "OR"
								},
								{
									"begin": 372,
									"end": 375,
									"name": "DUP6"
								},
								{
									"begin": 365,
									"end": 398,
									"name": "MSTORE"
								},
								{
									"begin": 3,
									"end": 402,
									"name": "POP"
								},
								{
									"begin": 3,
									"end": 402,
									"name": "POP"
								},
								{
									"begin": 3,
									"end": 402,
									"name": "POP"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "POP"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "POP"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "POP"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "SWAP1"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "POP"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "ADD"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "SWAP2"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "POP"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "POP"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "MLOAD"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "DUP1"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "DUP4"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "SUB"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "DUP2"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "DUP7"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "GAS"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "CALL"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "SWAP2"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "POP"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "POP"
								},
								{
									"begin": 8686,
									"end": 8711,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 14,
									"end": 15,
									"name": "DUP1"
								},
								{
									"begin": 21,
									"end": 22,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 16,
									"end": 47,
									"name": "DUP2"
								},
								{
									"begin": 16,
									"end": 47,
									"name": "EQ"
								},
								{
									"begin": 16,
									"end": 47,
									"name": "PUSH [tag]",
									"value": "28"
								},
								{
									"begin": 16,
									"end": 47,
									"name": "JUMPI"
								},
								{
									"begin": 75,
									"end": 79,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 69,
									"end": 80,
									"name": "MLOAD"
								},
								{
									"begin": 64,
									"end": 80,
									"name": "SWAP2"
								},
								{
									"begin": 64,
									"end": 80,
									"name": "POP"
								},
								{
									"begin": 144,
									"end": 148,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 140,
									"end": 149,
									"name": "NOT"
								},
								{
									"begin": 133,
									"end": 137,
									"name": "PUSH",
									"value": "3F"
								},
								{
									"begin": 115,
									"end": 131,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 111,
									"end": 138,
									"name": "ADD"
								},
								{
									"begin": 107,
									"end": 150,
									"name": "AND"
								},
								{
									"begin": 104,
									"end": 105,
									"name": "DUP3"
								},
								{
									"begin": 100,
									"end": 151,
									"name": "ADD"
								},
								{
									"begin": 94,
									"end": 98,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 87,
									"end": 152,
									"name": "MSTORE"
								},
								{
									"begin": 169,
									"end": 185,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 166,
									"end": 167,
									"name": "DUP3"
								},
								{
									"begin": 159,
									"end": 186,
									"name": "MSTORE"
								},
								{
									"begin": 225,
									"end": 241,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 222,
									"end": 223,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 215,
									"end": 219,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 212,
									"end": 213,
									"name": "DUP5"
								},
								{
									"begin": 208,
									"end": 220,
									"name": "ADD"
								},
								{
									"begin": 193,
									"end": 242,
									"name": "RETURNDATACOPY"
								},
								{
									"begin": 7,
									"end": 249,
									"name": "PUSH [tag]",
									"value": "27"
								},
								{
									"begin": 7,
									"end": 249,
									"name": "JUMP"
								},
								{
									"begin": 16,
									"end": 47,
									"name": "tag",
									"value": "28"
								},
								{
									"begin": 16,
									"end": 47,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 40,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 31,
									"end": 40,
									"name": "SWAP2"
								},
								{
									"begin": 31,
									"end": 40,
									"name": "POP"
								},
								{
									"begin": 7,
									"end": 249,
									"name": "tag",
									"value": "27"
								},
								{
									"begin": 7,
									"end": 249,
									"name": "JUMPDEST"
								},
								{
									"begin": 7,
									"end": 249,
									"name": "POP"
								},
								{
									"begin": 8644,
									"end": 8711,
									"name": "SWAP2"
								},
								{
									"begin": 8644,
									"end": 8711,
									"name": "POP"
								},
								{
									"begin": 8644,
									"end": 8711,
									"name": "SWAP2"
								},
								{
									"begin": 8644,
									"end": 8711,
									"name": "POP"
								},
								{
									"begin": 8729,
									"end": 8736,
									"name": "DUP2"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "PUSH [tag]",
									"value": "29"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "JUMPI"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "MLOAD"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "DUP2"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "MSTORE"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "ADD"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "DUP1"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "DUP1"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "ADD"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "DUP3"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "DUP2"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "SUB"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "DUP3"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "MSTORE"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "DUP2"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "MSTORE"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "ADD"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "DUP1"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "PUSH",
									"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "DUP2"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "MSTORE"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "POP"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "ADD"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "SWAP2"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "POP"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "POP"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "MLOAD"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "DUP1"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "SWAP2"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "SUB"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "SWAP1"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "REVERT"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "tag",
									"value": "29"
								},
								{
									"begin": 8721,
									"end": 8773,
									"name": "JUMPDEST"
								},
								{
									"begin": 8808,
									"end": 8809,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8788,
									"end": 8798,
									"name": "DUP2"
								},
								{
									"begin": 8788,
									"end": 8805,
									"name": "MLOAD"
								},
								{
									"begin": 8788,
									"end": 8809,
									"name": "GT"
								},
								{
									"begin": 8784,
									"end": 9005,
									"name": "ISZERO"
								},
								{
									"begin": 8784,
									"end": 9005,
									"name": "PUSH [tag]",
									"value": "30"
								},
								{
									"begin": 8784,
									"end": 9005,
									"name": "JUMPI"
								},
								{
									"begin": 8928,
									"end": 8938,
									"name": "DUP1"
								},
								{
									"begin": 8917,
									"end": 8947,
									"name": "DUP1"
								},
								{
									"begin": 8917,
									"end": 8947,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8917,
									"end": 8947,
									"name": "ADD"
								},
								{
									"begin": 8917,
									"end": 8947,
									"name": "SWAP1"
								},
								{
									"begin": 8917,
									"end": 8947,
									"name": "MLOAD"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "31"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "31"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 8917,
									"end": 8947,
									"name": "DUP2"
								},
								{
									"begin": 8917,
									"end": 8947,
									"name": "ADD"
								},
								{
									"begin": 8917,
									"end": 8947,
									"name": "SWAP1"
								},
								{
									"begin": 8917,
									"end": 8947,
									"name": "DUP1"
								},
								{
									"begin": 8917,
									"end": 8947,
									"name": "DUP1"
								},
								{
									"begin": 8917,
									"end": 8947,
									"name": "MLOAD"
								},
								{
									"begin": 8917,
									"end": 8947,
									"name": "SWAP1"
								},
								{
									"begin": 8917,
									"end": 8947,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8917,
									"end": 8947,
									"name": "ADD"
								},
								{
									"begin": 8917,
									"end": 8947,
									"name": "SWAP1"
								},
								{
									"begin": 8917,
									"end": 8947,
									"name": "SWAP3"
								},
								{
									"begin": 8917,
									"end": 8947,
									"name": "SWAP2"
								},
								{
									"begin": 8917,
									"end": 8947,
									"name": "SWAP1"
								},
								{
									"begin": 8917,
									"end": 8947,
									"name": "POP"
								},
								{
									"begin": 8917,
									"end": 8947,
									"name": "POP"
								},
								{
									"begin": 8917,
									"end": 8947,
									"name": "POP"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "PUSH [tag]",
									"value": "32"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "JUMPI"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "MLOAD"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "DUP2"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "MSTORE"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "ADD"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "DUP1"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "DUP1"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "ADD"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "DUP3"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "DUP2"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "SUB"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "DUP3"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "MSTORE"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "PUSH",
									"value": "2A"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "DUP2"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "MSTORE"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "ADD"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "DUP1"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "PUSH data",
									"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "PUSH",
									"value": "2A"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "SWAP2"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "CODECOPY"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "ADD"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "SWAP2"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "POP"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "POP"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "MLOAD"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "DUP1"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "SWAP2"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "SUB"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "SWAP1"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "REVERT"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "tag",
									"value": "32"
								},
								{
									"begin": 8909,
									"end": 8994,
									"name": "JUMPDEST"
								},
								{
									"begin": 8784,
									"end": 9005,
									"name": "tag",
									"value": "30"
								},
								{
									"begin": 8784,
									"end": 9005,
									"name": "JUMPDEST"
								},
								{
									"begin": 7916,
									"end": 9011,
									"name": "POP"
								},
								{
									"begin": 7916,
									"end": 9011,
									"name": "POP"
								},
								{
									"begin": 7916,
									"end": 9011,
									"name": "POP"
								},
								{
									"begin": 7916,
									"end": 9011,
									"name": "POP"
								},
								{
									"begin": 7916,
									"end": 9011,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 4927,
									"end": 5340,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 4927,
									"end": 5340,
									"name": "JUMPDEST"
								},
								{
									"begin": 4987,
									"end": 4991,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5190,
									"end": 5202,
									"name": "DUP1"
								},
								{
									"begin": 5299,
									"end": 5306,
									"name": "DUP3"
								},
								{
									"begin": 5287,
									"end": 5307,
									"name": "EXTCODESIZE"
								},
								{
									"begin": 5279,
									"end": 5307,
									"name": "SWAP1"
								},
								{
									"begin": 5279,
									"end": 5307,
									"name": "POP"
								},
								{
									"begin": 5332,
									"end": 5333,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5325,
									"end": 5329,
									"name": "DUP2"
								},
								{
									"begin": 5325,
									"end": 5333,
									"name": "GT"
								},
								{
									"begin": 5318,
									"end": 5333,
									"name": "SWAP2"
								},
								{
									"begin": 5318,
									"end": 5333,
									"name": "POP"
								},
								{
									"begin": 5318,
									"end": 5333,
									"name": "POP"
								},
								{
									"begin": 4927,
									"end": 5340,
									"name": "SWAP2"
								},
								{
									"begin": 4927,
									"end": 5340,
									"name": "SWAP1"
								},
								{
									"begin": 4927,
									"end": 5340,
									"name": "POP"
								},
								{
									"begin": 4927,
									"end": 5340,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 9968,
									"end": 12759,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 9968,
									"end": 12759,
									"name": "JUMPDEST"
								},
								{
									"begin": 9968,
									"end": 12759,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9968,
									"end": 12759,
									"name": "DUP1"
								},
								{
									"begin": 9968,
									"end": 12759,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9968,
									"end": 12759,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9968,
									"end": 12759,
									"name": "CODECOPY"
								},
								{
									"begin": 9968,
									"end": 12759,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9968,
									"end": 12759,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820afd7a42f06f882f6f7b4f25498d206b4811acaa4d1d5c9199c4486c8e07029c764736f6c63430005110032",
									".code": [
										{
											"begin": 9968,
											"end": 12759,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "MSTORE"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "LT"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "JUMPI"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "SHR"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "DUP1"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "PUSH",
											"value": "68F536F"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "EQ"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "JUMPI"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "DUP1"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "PUSH",
											"value": "31796919"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "EQ"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "JUMPI"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "DUP1"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "PUSH",
											"value": "527BA9AF"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "EQ"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "JUMPI"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "DUP1"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "PUSH",
											"value": "65104A0C"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "EQ"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "JUMPI"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "DUP1"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "PUSH",
											"value": "D936547E"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "EQ"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "JUMPI"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "DUP1"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "PUSH",
											"value": "F887EA40"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "EQ"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "JUMPI"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "JUMPDEST"
										},
										{
											"begin": 9968,
											"end": 12759,
											"name": "STOP"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "JUMPDEST"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "DUP1"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "DUP2"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "ADD"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "SWAP1"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "DUP1"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "DUP1"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "AND"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "SWAP1"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "ADD"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "SWAP1"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "SWAP3"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "SWAP2"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "SWAP1"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "DUP1"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "SWAP1"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "ADD"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "SWAP1"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "SWAP3"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "SWAP2"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "SWAP1"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "DUP1"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "ISZERO"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "ISZERO"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "SWAP1"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "ADD"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "SWAP1"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "SWAP3"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "SWAP2"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "SWAP1"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "POP"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "POP"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "POP"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "JUMPDEST"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "STOP"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "JUMPDEST"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "POP"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "JUMPDEST"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "MLOAD"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "DUP1"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "DUP3"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "AND"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "AND"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "DUP2"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "MSTORE"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "ADD"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "SWAP2"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "POP"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "POP"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "MLOAD"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "DUP1"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "SWAP2"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "SUB"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "SWAP1"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "RETURN"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "JUMPDEST"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "POP"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "JUMPDEST"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "MLOAD"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "DUP1"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "DUP3"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "AND"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "AND"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "DUP2"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "MSTORE"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "ADD"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "SWAP2"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "POP"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "POP"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "MLOAD"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "DUP1"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "SWAP2"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "SUB"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "SWAP1"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "RETURN"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "JUMPDEST"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "POP"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "DUP1"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "DUP2"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "ADD"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "SWAP1"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "DUP1"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "DUP1"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "AND"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "SWAP1"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "ADD"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "SWAP1"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "SWAP3"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "SWAP2"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "SWAP1"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "POP"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "POP"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "POP"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "JUMPDEST"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "MLOAD"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "DUP1"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "DUP3"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "DUP2"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "MSTORE"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "ADD"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "SWAP2"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "POP"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "POP"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "MLOAD"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "DUP1"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "SWAP2"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "SUB"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "SWAP1"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "RETURN"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "JUMPDEST"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "POP"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "DUP1"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "DUP2"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "ADD"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "SWAP1"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "DUP1"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "DUP1"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "AND"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "SWAP1"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "ADD"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "SWAP1"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "SWAP3"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "SWAP2"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "SWAP1"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "POP"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "POP"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "POP"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "JUMPDEST"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "MLOAD"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "DUP1"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "DUP3"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "ISZERO"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "ISZERO"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "ISZERO"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "ISZERO"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "DUP2"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "MSTORE"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "ADD"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "SWAP2"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "POP"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "POP"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "MLOAD"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "DUP1"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "SWAP2"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "SUB"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "SWAP1"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "RETURN"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "JUMPDEST"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "POP"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "JUMPDEST"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "MLOAD"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "DUP1"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "DUP3"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "AND"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "AND"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "DUP2"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "MSTORE"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "ADD"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "SWAP2"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "POP"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "POP"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "MLOAD"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "DUP1"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "SWAP2"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "SUB"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "SWAP1"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "RETURN"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "JUMPDEST"
										},
										{
											"begin": 11285,
											"end": 11296,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11285,
											"end": 11296,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11285,
											"end": 11296,
											"name": "SWAP1"
										},
										{
											"begin": 11285,
											"end": 11296,
											"name": "SLOAD"
										},
										{
											"begin": 11285,
											"end": 11296,
											"name": "SWAP1"
										},
										{
											"begin": 11285,
											"end": 11296,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11285,
											"end": 11296,
											"name": "EXP"
										},
										{
											"begin": 11285,
											"end": 11296,
											"name": "SWAP1"
										},
										{
											"begin": 11285,
											"end": 11296,
											"name": "DIV"
										},
										{
											"begin": 11285,
											"end": 11296,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11285,
											"end": 11296,
											"name": "AND"
										},
										{
											"begin": 11264,
											"end": 11296,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11264,
											"end": 11296,
											"name": "AND"
										},
										{
											"begin": 11272,
											"end": 11280,
											"name": "DUP4"
										},
										{
											"begin": 11264,
											"end": 11296,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11264,
											"end": 11296,
											"name": "AND"
										},
										{
											"begin": 11264,
											"end": 11296,
											"name": "EQ"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "JUMPI"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "MLOAD"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "DUP2"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "MSTORE"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "ADD"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "DUP1"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "DUP1"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "ADD"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "DUP3"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "DUP2"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "SUB"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "DUP3"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "MSTORE"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "DUP2"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "MSTORE"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "ADD"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "DUP1"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "PUSH",
											"value": "6E6F742077686974656C69737465640000000000000000000000000000000000"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "DUP2"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "MSTORE"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "POP"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "ADD"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "SWAP2"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "POP"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "POP"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "MLOAD"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "DUP1"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "SWAP2"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "SUB"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "SWAP1"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "REVERT"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 11256,
											"end": 11316,
											"name": "JUMPDEST"
										},
										{
											"begin": 11322,
											"end": 11340,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11343,
											"end": 11351,
											"name": "DUP4"
										},
										{
											"begin": 11343,
											"end": 11368,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11343,
											"end": 11368,
											"name": "AND"
										},
										{
											"begin": 11343,
											"end": 11368,
											"name": "PUSH",
											"value": "997318EC"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "MLOAD"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "DUP2"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "AND"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "SHL"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "DUP2"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "MSTORE"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "ADD"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "MLOAD"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "DUP1"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "DUP4"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "SUB"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "DUP2"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "DUP7"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "DUP1"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "POP"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "GAS"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "STATICCALL"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "POP"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "POP"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "POP"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "POP"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "MLOAD"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "DUP2"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "ADD"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "SWAP1"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "DUP1"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "DUP1"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "MLOAD"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "SWAP1"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "ADD"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "SWAP1"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "SWAP3"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "SWAP2"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "SWAP1"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "POP"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "POP"
										},
										{
											"begin": 11343,
											"end": 11370,
											"name": "POP"
										},
										{
											"begin": 11322,
											"end": 11370,
											"name": "SWAP1"
										},
										{
											"begin": 11322,
											"end": 11370,
											"name": "POP"
										},
										{
											"begin": 11397,
											"end": 11407,
											"name": "DUP1"
										},
										{
											"begin": 11384,
											"end": 11393,
											"name": "CALLVALUE"
										},
										{
											"begin": 11384,
											"end": 11407,
											"name": "LT"
										},
										{
											"begin": 11384,
											"end": 11407,
											"name": "ISZERO"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "MLOAD"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "DUP2"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "MSTORE"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "ADD"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "ADD"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "DUP3"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "DUP2"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "SUB"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "DUP3"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "MSTORE"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "DUP2"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "MSTORE"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "ADD"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "PUSH data",
											"value": "57308F09D5629392B8F7D9E16798D0401751415AAB39E9BF210CE0719FBB2EDF"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "SWAP2"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "CODECOPY"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "ADD"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "SWAP2"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "POP"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "POP"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "MLOAD"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "SWAP2"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "SUB"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "SWAP1"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "REVERT"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 11376,
											"end": 11446,
											"name": "JUMPDEST"
										},
										{
											"begin": 11452,
											"end": 11471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11474,
											"end": 11482,
											"name": "DUP5"
										},
										{
											"begin": 11474,
											"end": 11500,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11474,
											"end": 11500,
											"name": "AND"
										},
										{
											"begin": 11474,
											"end": 11500,
											"name": "PUSH",
											"value": "5129B3E1"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "MLOAD"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "DUP2"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "AND"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "SHL"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "DUP2"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "MSTORE"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "ADD"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "MLOAD"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "DUP1"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "DUP4"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "SUB"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "DUP2"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "DUP7"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "DUP1"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "POP"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "GAS"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "STATICCALL"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "POP"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "POP"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "POP"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "POP"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "MLOAD"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "DUP2"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "ADD"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "SWAP1"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "DUP1"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "DUP1"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "MLOAD"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "SWAP1"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "ADD"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "SWAP1"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "SWAP3"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "SWAP2"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "SWAP1"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "POP"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "POP"
										},
										{
											"begin": 11474,
											"end": 11502,
											"name": "POP"
										},
										{
											"begin": 11452,
											"end": 11502,
											"name": "SWAP1"
										},
										{
											"begin": 11452,
											"end": 11502,
											"name": "POP"
										},
										{
											"begin": 11508,
											"end": 11525,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11528,
											"end": 11583,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 11559,
											"end": 11567,
											"name": "DUP7"
										},
										{
											"begin": 11559,
											"end": 11580,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11559,
											"end": 11580,
											"name": "AND"
										},
										{
											"begin": 11559,
											"end": 11580,
											"name": "PUSH",
											"value": "3B406FB7"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "MLOAD"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "DUP2"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "AND"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "SHL"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "DUP2"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "MSTORE"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "ADD"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "MLOAD"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "DUP1"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "DUP4"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "SUB"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "DUP2"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "DUP7"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "DUP1"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "POP"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "GAS"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "STATICCALL"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "POP"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "POP"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "POP"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "POP"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "MLOAD"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "DUP2"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "ADD"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "SWAP1"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "DUP1"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "DUP1"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "MLOAD"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "SWAP1"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "ADD"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "SWAP1"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "SWAP3"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "SWAP2"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "SWAP1"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "POP"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "POP"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "POP"
										},
										{
											"begin": 11528,
											"end": 11536,
											"name": "DUP8"
										},
										{
											"begin": 11528,
											"end": 11552,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11528,
											"end": 11552,
											"name": "AND"
										},
										{
											"begin": 11528,
											"end": 11552,
											"name": "PUSH",
											"value": "22217CD3"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "MLOAD"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "DUP2"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "AND"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "SHL"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "DUP2"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "MSTORE"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "ADD"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "MLOAD"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "DUP1"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "DUP4"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "SUB"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "DUP2"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "DUP7"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "DUP1"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "POP"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "GAS"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "STATICCALL"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "POP"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "POP"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "POP"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "POP"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "MLOAD"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "DUP2"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "ADD"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "SWAP1"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "DUP1"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "DUP1"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "MLOAD"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "SWAP1"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "ADD"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "SWAP1"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "SWAP3"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "SWAP2"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "SWAP1"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "POP"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "POP"
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "POP"
										},
										{
											"begin": 11528,
											"end": 11558,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 11528,
											"end": 11558,
											"name": "SWAP1"
										},
										{
											"begin": 11528,
											"end": 11583,
											"name": "SWAP2"
										},
										{
											"begin": 11528,
											"end": 11583,
											"name": "SWAP1"
										},
										{
											"begin": 11528,
											"end": 11583,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11528,
											"end": 11583,
											"name": "AND"
										},
										{
											"begin": 11528,
											"end": 11583,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11528,
											"end": 11583,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 11528,
											"end": 11583,
											"name": "JUMPDEST"
										},
										{
											"begin": 11508,
											"end": 11583,
											"name": "SWAP1"
										},
										{
											"begin": 11508,
											"end": 11583,
											"name": "POP"
										},
										{
											"begin": 11589,
											"end": 11610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11613,
											"end": 11638,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 11627,
											"end": 11637,
											"name": "DUP5"
										},
										{
											"begin": 11613,
											"end": 11622,
											"name": "CALLVALUE"
										},
										{
											"begin": 11613,
											"end": 11626,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 11613,
											"end": 11626,
											"name": "SWAP1"
										},
										{
											"begin": 11613,
											"end": 11638,
											"name": "SWAP2"
										},
										{
											"begin": 11613,
											"end": 11638,
											"name": "SWAP1"
										},
										{
											"begin": 11613,
											"end": 11638,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11613,
											"end": 11638,
											"name": "AND"
										},
										{
											"begin": 11613,
											"end": 11638,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11613,
											"end": 11638,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 11613,
											"end": 11638,
											"name": "JUMPDEST"
										},
										{
											"begin": 11589,
											"end": 11638,
											"name": "SWAP1"
										},
										{
											"begin": 11589,
											"end": 11638,
											"name": "POP"
										},
										{
											"begin": 11662,
											"end": 11663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11648,
											"end": 11659,
											"name": "DUP4"
										},
										{
											"begin": 11648,
											"end": 11663,
											"name": "GT"
										},
										{
											"begin": 11644,
											"end": 11753,
											"name": "ISZERO"
										},
										{
											"begin": 11644,
											"end": 11753,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 11644,
											"end": 11753,
											"name": "JUMPI"
										},
										{
											"begin": 11673,
											"end": 11746,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 11707,
											"end": 11717,
											"name": "CALLER"
										},
										{
											"begin": 11727,
											"end": 11731,
											"name": "ADDRESS"
										},
										{
											"begin": 11734,
											"end": 11745,
											"name": "DUP6"
										},
										{
											"begin": 11673,
											"end": 11681,
											"name": "DUP11"
										},
										{
											"begin": 11673,
											"end": 11687,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11673,
											"end": 11687,
											"name": "AND"
										},
										{
											"begin": 11673,
											"end": 11687,
											"name": "PUSH",
											"value": "FC0C546A"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "MLOAD"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "DUP2"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "AND"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "SHL"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "DUP2"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "MSTORE"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "ADD"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "MLOAD"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "DUP1"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "DUP4"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "SUB"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "DUP2"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "DUP7"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "DUP1"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "POP"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "GAS"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "STATICCALL"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "POP"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "POP"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "POP"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "POP"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "MLOAD"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "DUP2"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "ADD"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "DUP1"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "DUP1"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "MLOAD"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "ADD"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "SWAP3"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "SWAP2"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "POP"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "POP"
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "POP"
										},
										{
											"begin": 11673,
											"end": 11706,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11673,
											"end": 11706,
											"name": "AND"
										},
										{
											"begin": 11673,
											"end": 11706,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 11673,
											"end": 11706,
											"name": "SWAP1"
										},
										{
											"begin": 11673,
											"end": 11746,
											"name": "SWAP4"
										},
										{
											"begin": 11673,
											"end": 11746,
											"name": "SWAP3"
										},
										{
											"begin": 11673,
											"end": 11746,
											"name": "SWAP2"
										},
										{
											"begin": 11673,
											"end": 11746,
											"name": "SWAP1"
										},
										{
											"begin": 11673,
											"end": 11746,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11673,
											"end": 11746,
											"name": "AND"
										},
										{
											"begin": 11673,
											"end": 11746,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11673,
											"end": 11746,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 11673,
											"end": 11746,
											"name": "JUMPDEST"
										},
										{
											"begin": 11644,
											"end": 11753,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 11644,
											"end": 11753,
											"name": "JUMPDEST"
										},
										{
											"begin": 11774,
											"end": 11775,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11762,
											"end": 11771,
											"name": "DUP3"
										},
										{
											"begin": 11762,
											"end": 11775,
											"name": "GT"
										},
										{
											"begin": 11758,
											"end": 12311,
											"name": "ISZERO"
										},
										{
											"begin": 11758,
											"end": 12311,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 11758,
											"end": 12311,
											"name": "JUMPI"
										},
										{
											"begin": 11789,
											"end": 11796,
											"name": "DUP5"
										},
										{
											"begin": 11785,
											"end": 12305,
											"name": "ISZERO"
										},
										{
											"begin": 11785,
											"end": 12305,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 11785,
											"end": 12305,
											"name": "JUMPI"
										},
										{
											"begin": 11808,
											"end": 11829,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11846,
											"end": 11847,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "MLOAD"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "SWAP1"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "DUP1"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "DUP3"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "MSTORE"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "DUP1"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "MUL"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "ADD"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "DUP3"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "ADD"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "MSTORE"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "DUP1"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "ISZERO"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "JUMPI"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "DUP2"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "SWAP1"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "POP"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "JUMPDEST"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "POP"
										},
										{
											"begin": 11808,
											"end": 11848,
											"name": "SWAP1"
										},
										{
											"begin": 11808,
											"end": 11848,
											"name": "POP"
										},
										{
											"begin": 11868,
											"end": 11879,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11868,
											"end": 11879,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11868,
											"end": 11879,
											"name": "SWAP1"
										},
										{
											"begin": 11868,
											"end": 11879,
											"name": "SLOAD"
										},
										{
											"begin": 11868,
											"end": 11879,
											"name": "SWAP1"
										},
										{
											"begin": 11868,
											"end": 11879,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11868,
											"end": 11879,
											"name": "EXP"
										},
										{
											"begin": 11868,
											"end": 11879,
											"name": "SWAP1"
										},
										{
											"begin": 11868,
											"end": 11879,
											"name": "DIV"
										},
										{
											"begin": 11868,
											"end": 11879,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11868,
											"end": 11879,
											"name": "AND"
										},
										{
											"begin": 11858,
											"end": 11862,
											"name": "DUP2"
										},
										{
											"begin": 11863,
											"end": 11864,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11858,
											"end": 11865,
											"name": "DUP2"
										},
										{
											"begin": 11858,
											"end": 11865,
											"name": "MLOAD"
										},
										{
											"begin": 11858,
											"end": 11865,
											"name": "DUP2"
										},
										{
											"begin": 11858,
											"end": 11865,
											"name": "LT"
										},
										{
											"begin": 11858,
											"end": 11865,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 11858,
											"end": 11865,
											"name": "JUMPI"
										},
										{
											"begin": 11858,
											"end": 11865,
											"name": "INVALID"
										},
										{
											"begin": 11858,
											"end": 11865,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 11858,
											"end": 11865,
											"name": "JUMPDEST"
										},
										{
											"begin": 11858,
											"end": 11865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11858,
											"end": 11865,
											"name": "MUL"
										},
										{
											"begin": 11858,
											"end": 11865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11858,
											"end": 11865,
											"name": "ADD"
										},
										{
											"begin": 11858,
											"end": 11865,
											"name": "ADD"
										},
										{
											"begin": 11858,
											"end": 11879,
											"name": "SWAP1"
										},
										{
											"begin": 11858,
											"end": 11879,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11858,
											"end": 11879,
											"name": "AND"
										},
										{
											"begin": 11858,
											"end": 11879,
											"name": "SWAP1"
										},
										{
											"begin": 11858,
											"end": 11879,
											"name": "DUP2"
										},
										{
											"begin": 11858,
											"end": 11879,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11858,
											"end": 11879,
											"name": "AND"
										},
										{
											"begin": 11858,
											"end": 11879,
											"name": "DUP2"
										},
										{
											"begin": 11858,
											"end": 11879,
											"name": "MSTORE"
										},
										{
											"begin": 11858,
											"end": 11879,
											"name": "POP"
										},
										{
											"begin": 11858,
											"end": 11879,
											"name": "POP"
										},
										{
											"begin": 11907,
											"end": 11915,
											"name": "DUP8"
										},
										{
											"begin": 11907,
											"end": 11924,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11907,
											"end": 11924,
											"name": "AND"
										},
										{
											"begin": 11907,
											"end": 11924,
											"name": "PUSH",
											"value": "75DDC9ED"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "MLOAD"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "DUP2"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "AND"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "SHL"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "DUP2"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "MSTORE"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "ADD"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "MLOAD"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "DUP1"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "DUP4"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "SUB"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "DUP2"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "DUP7"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "DUP1"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "POP"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "GAS"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "STATICCALL"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "POP"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "POP"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "POP"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "POP"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "MLOAD"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "DUP2"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "ADD"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "SWAP1"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "DUP1"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "DUP1"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "MLOAD"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "SWAP1"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "ADD"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "SWAP1"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "SWAP3"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "SWAP2"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "SWAP1"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "POP"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "POP"
										},
										{
											"begin": 11907,
											"end": 11926,
											"name": "POP"
										},
										{
											"begin": 11889,
											"end": 11893,
											"name": "DUP2"
										},
										{
											"begin": 11894,
											"end": 11895,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11889,
											"end": 11896,
											"name": "DUP2"
										},
										{
											"begin": 11889,
											"end": 11896,
											"name": "MLOAD"
										},
										{
											"begin": 11889,
											"end": 11896,
											"name": "DUP2"
										},
										{
											"begin": 11889,
											"end": 11896,
											"name": "LT"
										},
										{
											"begin": 11889,
											"end": 11896,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 11889,
											"end": 11896,
											"name": "JUMPI"
										},
										{
											"begin": 11889,
											"end": 11896,
											"name": "INVALID"
										},
										{
											"begin": 11889,
											"end": 11896,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 11889,
											"end": 11896,
											"name": "JUMPDEST"
										},
										{
											"begin": 11889,
											"end": 11896,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11889,
											"end": 11896,
											"name": "MUL"
										},
										{
											"begin": 11889,
											"end": 11896,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11889,
											"end": 11896,
											"name": "ADD"
										},
										{
											"begin": 11889,
											"end": 11896,
											"name": "ADD"
										},
										{
											"begin": 11889,
											"end": 11927,
											"name": "SWAP1"
										},
										{
											"begin": 11889,
											"end": 11927,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11889,
											"end": 11927,
											"name": "AND"
										},
										{
											"begin": 11889,
											"end": 11927,
											"name": "SWAP1"
										},
										{
											"begin": 11889,
											"end": 11927,
											"name": "DUP2"
										},
										{
											"begin": 11889,
											"end": 11927,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11889,
											"end": 11927,
											"name": "AND"
										},
										{
											"begin": 11889,
											"end": 11927,
											"name": "DUP2"
										},
										{
											"begin": 11889,
											"end": 11927,
											"name": "MSTORE"
										},
										{
											"begin": 11889,
											"end": 11927,
											"name": "POP"
										},
										{
											"begin": 11889,
											"end": 11927,
											"name": "POP"
										},
										{
											"begin": 11937,
											"end": 11961,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11964,
											"end": 11970,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11964,
											"end": 11970,
											"name": "DUP1"
										},
										{
											"begin": 11964,
											"end": 11970,
											"name": "SWAP1"
										},
										{
											"begin": 11964,
											"end": 11970,
											"name": "SLOAD"
										},
										{
											"begin": 11964,
											"end": 11970,
											"name": "SWAP1"
										},
										{
											"begin": 11964,
											"end": 11970,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11964,
											"end": 11970,
											"name": "EXP"
										},
										{
											"begin": 11964,
											"end": 11970,
											"name": "SWAP1"
										},
										{
											"begin": 11964,
											"end": 11970,
											"name": "DIV"
										},
										{
											"begin": 11964,
											"end": 11970,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11964,
											"end": 11970,
											"name": "AND"
										},
										{
											"begin": 11964,
											"end": 11992,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11964,
											"end": 11992,
											"name": "AND"
										},
										{
											"begin": 11964,
											"end": 11992,
											"name": "PUSH",
											"value": "FB3BDB41"
										},
										{
											"begin": 11999,
											"end": 12012,
											"name": "DUP5"
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "DUP7"
										},
										{
											"begin": 12025,
											"end": 12029,
											"name": "DUP6"
										},
										{
											"begin": 12039,
											"end": 12047,
											"name": "DUP14"
										},
										{
											"begin": 12050,
											"end": 12072,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 12070,
											"end": 12071,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12050,
											"end": 12065,
											"name": "TIMESTAMP"
										},
										{
											"begin": 12050,
											"end": 12069,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 12050,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12050,
											"end": 12072,
											"name": "SWAP2"
										},
										{
											"begin": 12050,
											"end": 12072,
											"name": "SWAP1"
										},
										{
											"begin": 12050,
											"end": 12072,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12050,
											"end": 12072,
											"name": "AND"
										},
										{
											"begin": 12050,
											"end": 12072,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12050,
											"end": 12072,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 12050,
											"end": 12072,
											"name": "JUMPDEST"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "MLOAD"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP7"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "AND"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "SHL"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP2"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "MSTORE"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "ADD"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP1"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP6"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP2"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "MSTORE"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "ADD"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP1"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "ADD"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP5"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "AND"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "AND"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP2"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "MSTORE"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "ADD"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP4"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP2"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "MSTORE"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "ADD"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP3"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP2"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "SUB"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP3"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "MSTORE"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP6"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP2"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP2"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "MLOAD"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP2"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "MSTORE"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "ADD"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "SWAP2"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP1"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "MLOAD"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "SWAP1"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "ADD"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "SWAP1"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "MUL"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP1"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP4"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "SWAP1"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "ADD"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "SWAP6"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "MLOAD"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP1"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP4"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "SUB"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP2"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP6"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP9"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP1"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "GAS"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "CALL"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "MLOAD"
										},
										{
											"begin": 39,
											"end": 55,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 36,
											"end": 37,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17,
											"end": 34,
											"name": "DUP3"
										},
										{
											"begin": 2,
											"end": 56,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP2"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "ADD"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "SWAP1"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP1"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP1"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "MLOAD"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "MLOAD"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "SWAP4"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "SWAP3"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "SWAP2"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "SWAP1"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP5"
										},
										{
											"begin": 19,
											"end": 30,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 14,
											"end": 17,
											"name": "DUP3"
										},
										{
											"begin": 11,
											"end": 31,
											"name": "GT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 44,
											"end": 45,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 41,
											"end": 42,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 46,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 66,
											"end": 69,
											"name": "DUP3"
										},
										{
											"begin": 62,
											"end": 83,
											"name": "ADD"
										},
										{
											"begin": 55,
											"end": 83,
											"name": "SWAP2"
										},
										{
											"begin": 55,
											"end": 83,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 127,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP3"
										},
										{
											"begin": 114,
											"end": 128,
											"name": "ADD"
										},
										{
											"begin": 159,
											"end": 168,
											"name": "DUP6"
										},
										{
											"begin": 141,
											"end": 157,
											"name": "DUP2"
										},
										{
											"begin": 138,
											"end": 169,
											"name": "GT"
										},
										{
											"begin": 135,
											"end": 137,
											"name": "ISZERO"
										},
										{
											"begin": 135,
											"end": 137,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 135,
											"end": 137,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 179,
											"end": 180,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 184,
											"name": "REVERT"
										},
										{
											"begin": 135,
											"end": 137,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 135,
											"end": 137,
											"name": "JUMPDEST"
										},
										{
											"begin": 219,
											"end": 222,
											"name": "DUP3"
										},
										{
											"begin": 213,
											"end": 223,
											"name": "MLOAD"
										},
										{
											"begin": 331,
											"end": 340,
											"name": "DUP7"
										},
										{
											"begin": 325,
											"end": 327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 311,
											"end": 323,
											"name": "DUP3"
										},
										{
											"begin": 307,
											"end": 328,
											"name": "MUL"
										},
										{
											"begin": 289,
											"end": 305,
											"name": "DUP4"
										},
										{
											"begin": 285,
											"end": 329,
											"name": "ADD"
										},
										{
											"begin": 282,
											"end": 341,
											"name": "GT"
										},
										{
											"begin": 261,
											"end": 272,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 247,
											"end": 259,
											"name": "DUP3"
										},
										{
											"begin": 244,
											"end": 273,
											"name": "GT"
										},
										{
											"begin": 233,
											"end": 349,
											"name": "OR"
										},
										{
											"begin": 230,
											"end": 232,
											"name": "ISZERO"
										},
										{
											"begin": 230,
											"end": 232,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 230,
											"end": 232,
											"name": "JUMPI"
										},
										{
											"begin": 362,
											"end": 363,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 359,
											"end": 360,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 364,
											"name": "REVERT"
										},
										{
											"begin": 230,
											"end": 232,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 230,
											"end": 232,
											"name": "JUMPDEST"
										},
										{
											"begin": 385,
											"end": 397,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 383,
											"name": "DUP4"
										},
										{
											"begin": 373,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 421,
											"end": 425,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 416,
											"end": 419,
											"name": "DUP4"
										},
										{
											"begin": 412,
											"end": 426,
											"name": "ADD"
										},
										{
											"begin": 405,
											"end": 426,
											"name": "SWAP3"
										},
										{
											"begin": 405,
											"end": 426,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 433,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 433,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "SWAP1"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP1"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "MLOAD"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "SWAP1"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "ADD"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "SWAP1"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "MUL"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP1"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP4"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "SWAP1"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "ADD"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "MSTORE"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11964,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 11937,
											"end": 12073,
											"name": "SWAP1"
										},
										{
											"begin": 11937,
											"end": 12073,
											"name": "POP"
										},
										{
											"begin": 12108,
											"end": 12115,
											"name": "DUP1"
										},
										{
											"begin": 12116,
											"end": 12117,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12108,
											"end": 12118,
											"name": "DUP2"
										},
										{
											"begin": 12108,
											"end": 12118,
											"name": "MLOAD"
										},
										{
											"begin": 12108,
											"end": 12118,
											"name": "DUP2"
										},
										{
											"begin": 12108,
											"end": 12118,
											"name": "LT"
										},
										{
											"begin": 12108,
											"end": 12118,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 12108,
											"end": 12118,
											"name": "JUMPI"
										},
										{
											"begin": 12108,
											"end": 12118,
											"name": "INVALID"
										},
										{
											"begin": 12108,
											"end": 12118,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 12108,
											"end": 12118,
											"name": "JUMPDEST"
										},
										{
											"begin": 12108,
											"end": 12118,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12108,
											"end": 12118,
											"name": "MUL"
										},
										{
											"begin": 12108,
											"end": 12118,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12108,
											"end": 12118,
											"name": "ADD"
										},
										{
											"begin": 12108,
											"end": 12118,
											"name": "ADD"
										},
										{
											"begin": 12108,
											"end": 12118,
											"name": "MLOAD"
										},
										{
											"begin": 12091,
											"end": 12104,
											"name": "DUP4"
										},
										{
											"begin": 12091,
											"end": 12118,
											"name": "LT"
										},
										{
											"begin": 12091,
											"end": 12118,
											"name": "ISZERO"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "JUMPI"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "MLOAD"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "DUP2"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "MSTORE"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "ADD"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "DUP1"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "DUP1"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "ADD"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "DUP3"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "DUP2"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "SUB"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "DUP3"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "MSTORE"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "DUP2"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "MSTORE"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "ADD"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "DUP1"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "PUSH data",
											"value": "C645ED3573958A1D40CA56F987855FD774192D2C2A78D4419757D9CBCF326D65"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "SWAP2"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "CODECOPY"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "ADD"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "SWAP2"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "POP"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "POP"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "MLOAD"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "DUP1"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "SWAP2"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "SUB"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "SWAP1"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "REVERT"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 12083,
											"end": 12156,
											"name": "JUMPDEST"
										},
										{
											"begin": 12183,
											"end": 12190,
											"name": "DUP1"
										},
										{
											"begin": 12191,
											"end": 12192,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12183,
											"end": 12193,
											"name": "DUP2"
										},
										{
											"begin": 12183,
											"end": 12193,
											"name": "MLOAD"
										},
										{
											"begin": 12183,
											"end": 12193,
											"name": "DUP2"
										},
										{
											"begin": 12183,
											"end": 12193,
											"name": "LT"
										},
										{
											"begin": 12183,
											"end": 12193,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 12183,
											"end": 12193,
											"name": "JUMPI"
										},
										{
											"begin": 12183,
											"end": 12193,
											"name": "INVALID"
										},
										{
											"begin": 12183,
											"end": 12193,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 12183,
											"end": 12193,
											"name": "JUMPDEST"
										},
										{
											"begin": 12183,
											"end": 12193,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12183,
											"end": 12193,
											"name": "MUL"
										},
										{
											"begin": 12183,
											"end": 12193,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12183,
											"end": 12193,
											"name": "ADD"
										},
										{
											"begin": 12183,
											"end": 12193,
											"name": "ADD"
										},
										{
											"begin": 12183,
											"end": 12193,
											"name": "MLOAD"
										},
										{
											"begin": 12166,
											"end": 12193,
											"name": "DUP4"
										},
										{
											"begin": 12166,
											"end": 12193,
											"name": "SUB"
										},
										{
											"begin": 12166,
											"end": 12193,
											"name": "SWAP3"
										},
										{
											"begin": 12166,
											"end": 12193,
											"name": "POP"
										},
										{
											"begin": 11785,
											"end": 12305,
											"name": "POP"
										},
										{
											"begin": 11785,
											"end": 12305,
											"name": "POP"
										},
										{
											"begin": 11785,
											"end": 12305,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 11785,
											"end": 12305,
											"name": "JUMP"
										},
										{
											"begin": 11785,
											"end": 12305,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 11785,
											"end": 12305,
											"name": "JUMPDEST"
										},
										{
											"begin": 12218,
											"end": 12296,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 12255,
											"end": 12265,
											"name": "CALLER"
										},
										{
											"begin": 12275,
											"end": 12283,
											"name": "DUP9"
										},
										{
											"begin": 12286,
											"end": 12295,
											"name": "DUP5"
										},
										{
											"begin": 12218,
											"end": 12226,
											"name": "DUP11"
										},
										{
											"begin": 12218,
											"end": 12235,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12218,
											"end": 12235,
											"name": "AND"
										},
										{
											"begin": 12218,
											"end": 12235,
											"name": "PUSH",
											"value": "75DDC9ED"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "MLOAD"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "DUP2"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "AND"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "SHL"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "DUP2"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "MSTORE"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "ADD"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "MLOAD"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "DUP1"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "DUP4"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "SUB"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "DUP2"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "DUP7"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "DUP1"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "POP"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "GAS"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "STATICCALL"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "POP"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "POP"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "POP"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "POP"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "MLOAD"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "DUP2"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "ADD"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "SWAP1"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "DUP1"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "DUP1"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "MLOAD"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "SWAP1"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "ADD"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "SWAP1"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "SWAP3"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "SWAP2"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "SWAP1"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "POP"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "POP"
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "POP"
										},
										{
											"begin": 12218,
											"end": 12254,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12218,
											"end": 12254,
											"name": "AND"
										},
										{
											"begin": 12218,
											"end": 12254,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 12218,
											"end": 12254,
											"name": "SWAP1"
										},
										{
											"begin": 12218,
											"end": 12296,
											"name": "SWAP4"
										},
										{
											"begin": 12218,
											"end": 12296,
											"name": "SWAP3"
										},
										{
											"begin": 12218,
											"end": 12296,
											"name": "SWAP2"
										},
										{
											"begin": 12218,
											"end": 12296,
											"name": "SWAP1"
										},
										{
											"begin": 12218,
											"end": 12296,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12218,
											"end": 12296,
											"name": "AND"
										},
										{
											"begin": 12218,
											"end": 12296,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12218,
											"end": 12296,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 12218,
											"end": 12296,
											"name": "JUMPDEST"
										},
										{
											"begin": 11785,
											"end": 12305,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 11785,
											"end": 12305,
											"name": "JUMPDEST"
										},
										{
											"begin": 11758,
											"end": 12311,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 11758,
											"end": 12311,
											"name": "JUMPDEST"
										},
										{
											"begin": 12316,
											"end": 12334,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12340,
											"end": 12360,
											"name": "DUP1"
										},
										{
											"begin": 12366,
											"end": 12383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12389,
											"end": 12404,
											"name": "DUP1"
										},
										{
											"begin": 12410,
											"end": 12421,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12482,
											"end": 12490,
											"name": "DUP12"
										},
										{
											"begin": 12482,
											"end": 12498,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12482,
											"end": 12498,
											"name": "AND"
										},
										{
											"begin": 12482,
											"end": 12498,
											"name": "PUSH",
											"value": "B214FAA5"
										},
										{
											"begin": 12505,
											"end": 12515,
											"name": "DUP11"
										},
										{
											"begin": 12517,
											"end": 12528,
											"name": "DUP14"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "MLOAD"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "DUP4"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "AND"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SHL"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "DUP2"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "MSTORE"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "ADD"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "DUP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "DUP3"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "DUP2"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "MSTORE"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "ADD"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP2"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "POP"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "POP"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "MLOAD"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "DUP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "DUP4"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SUB"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "DUP2"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "DUP6"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "DUP9"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "DUP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "POP"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "GAS"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "CALL"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "POP"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "POP"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "POP"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "POP"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "POP"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "MLOAD"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "DUP2"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "ADD"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "DUP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "DUP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "MLOAD"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "ADD"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP3"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP2"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "DUP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "MLOAD"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "ADD"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP3"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP2"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "DUP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "MLOAD"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "ADD"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP3"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP2"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "DUP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "MLOAD"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "ADD"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP3"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP2"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "DUP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "MLOAD"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "ADD"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP3"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP2"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "POP"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "POP"
										},
										{
											"begin": 12482,
											"end": 12529,
											"name": "POP"
										},
										{
											"begin": 12427,
											"end": 12529,
											"name": "DUP1"
										},
										{
											"begin": 12427,
											"end": 12529,
											"name": "SWAP6"
										},
										{
											"begin": 12427,
											"end": 12529,
											"name": "POP"
										},
										{
											"begin": 12427,
											"end": 12529,
											"name": "DUP2"
										},
										{
											"begin": 12427,
											"end": 12529,
											"name": "SWAP7"
										},
										{
											"begin": 12427,
											"end": 12529,
											"name": "POP"
										},
										{
											"begin": 12427,
											"end": 12529,
											"name": "DUP3"
										},
										{
											"begin": 12427,
											"end": 12529,
											"name": "SWAP8"
										},
										{
											"begin": 12427,
											"end": 12529,
											"name": "POP"
										},
										{
											"begin": 12427,
											"end": 12529,
											"name": "DUP4"
										},
										{
											"begin": 12427,
											"end": 12529,
											"name": "SWAP9"
										},
										{
											"begin": 12427,
											"end": 12529,
											"name": "POP"
										},
										{
											"begin": 12427,
											"end": 12529,
											"name": "DUP5"
										},
										{
											"begin": 12427,
											"end": 12529,
											"name": "SWAP10"
										},
										{
											"begin": 12427,
											"end": 12529,
											"name": "POP"
										},
										{
											"begin": 12427,
											"end": 12529,
											"name": "POP"
										},
										{
											"begin": 12427,
											"end": 12529,
											"name": "POP"
										},
										{
											"begin": 12427,
											"end": 12529,
											"name": "POP"
										},
										{
											"begin": 12427,
											"end": 12529,
											"name": "POP"
										},
										{
											"begin": 12427,
											"end": 12529,
											"name": "POP"
										},
										{
											"begin": 12549,
											"end": 12559,
											"name": "DUP5"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "PUSH",
											"value": "CB186CC0ADD5BE357AE2D3845E42BE2FFBED8CB23B60F1B058EA371ADFF0A363"
										},
										{
											"begin": 12561,
											"end": 12574,
											"name": "DUP6"
										},
										{
											"begin": 12576,
											"end": 12585,
											"name": "DUP6"
										},
										{
											"begin": 12587,
											"end": 12594,
											"name": "DUP6"
										},
										{
											"begin": 12596,
											"end": 12599,
											"name": "DUP6"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "MLOAD"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "DUP1"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "DUP6"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "AND"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "AND"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "DUP2"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "MSTORE"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "ADD"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "DUP5"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "DUP2"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "MSTORE"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "ADD"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "DUP4"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "DUP2"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "MSTORE"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "ADD"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "DUP3"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "DUP2"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "MSTORE"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "ADD"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "SWAP5"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "POP"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "POP"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "POP"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "POP"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "POP"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "MLOAD"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "DUP1"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "SWAP2"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "SUB"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "SWAP1"
										},
										{
											"begin": 12540,
											"end": 12601,
											"name": "LOG2"
										},
										{
											"begin": 12627,
											"end": 12628,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12611,
											"end": 12624,
											"name": "DUP7"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "GT"
										},
										{
											"begin": 12607,
											"end": 12753,
											"name": "ISZERO"
										},
										{
											"begin": 12607,
											"end": 12753,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 12607,
											"end": 12753,
											"name": "JUMPI"
										},
										{
											"begin": 12639,
											"end": 12651,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12656,
											"end": 12666,
											"name": "CALLER"
										},
										{
											"begin": 12656,
											"end": 12671,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12656,
											"end": 12671,
											"name": "AND"
										},
										{
											"begin": 12678,
											"end": 12691,
											"name": "DUP8"
										},
										{
											"begin": 12656,
											"end": 12696,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12656,
											"end": 12696,
											"name": "MLOAD"
										},
										{
											"begin": 12656,
											"end": 12696,
											"name": "DUP1"
										},
										{
											"begin": 12656,
											"end": 12696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12656,
											"end": 12696,
											"name": "ADD"
										},
										{
											"begin": 12656,
											"end": 12696,
											"name": "SWAP1"
										},
										{
											"begin": 12656,
											"end": 12696,
											"name": "POP"
										},
										{
											"begin": 12656,
											"end": 12696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12656,
											"end": 12696,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12656,
											"end": 12696,
											"name": "MLOAD"
										},
										{
											"begin": 12656,
											"end": 12696,
											"name": "DUP1"
										},
										{
											"begin": 12656,
											"end": 12696,
											"name": "DUP4"
										},
										{
											"begin": 12656,
											"end": 12696,
											"name": "SUB"
										},
										{
											"begin": 12656,
											"end": 12696,
											"name": "DUP2"
										},
										{
											"begin": 12656,
											"end": 12696,
											"name": "DUP6"
										},
										{
											"begin": 12656,
											"end": 12696,
											"name": "DUP8"
										},
										{
											"begin": 12656,
											"end": 12696,
											"name": "GAS"
										},
										{
											"begin": 12656,
											"end": 12696,
											"name": "CALL"
										},
										{
											"begin": 12656,
											"end": 12696,
											"name": "SWAP3"
										},
										{
											"begin": 12656,
											"end": 12696,
											"name": "POP"
										},
										{
											"begin": 12656,
											"end": 12696,
											"name": "POP"
										},
										{
											"begin": 12656,
											"end": 12696,
											"name": "POP"
										},
										{
											"begin": 12656,
											"end": 12696,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 12638,
											"end": 12696,
											"name": "POP"
										},
										{
											"begin": 12638,
											"end": 12696,
											"name": "SWAP1"
										},
										{
											"begin": 12638,
											"end": 12696,
											"name": "POP"
										},
										{
											"begin": 12712,
											"end": 12719,
											"name": "DUP1"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "JUMPI"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "MLOAD"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "DUP2"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "MSTORE"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "ADD"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "DUP1"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "DUP1"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "ADD"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "DUP3"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "DUP2"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "SUB"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "DUP3"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "MSTORE"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "PUSH",
											"value": "16"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "DUP2"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "MSTORE"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "ADD"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "DUP1"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "PUSH",
											"value": "4D657373696572577261707065723A20726566756E6400000000000000000000"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "DUP2"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "MSTORE"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "POP"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "ADD"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "SWAP2"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "POP"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "POP"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "MLOAD"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "DUP1"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "SWAP2"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "SUB"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "SWAP1"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "REVERT"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 12704,
											"end": 12746,
											"name": "JUMPDEST"
										},
										{
											"begin": 12607,
											"end": 12753,
											"name": "POP"
										},
										{
											"begin": 12607,
											"end": 12753,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 12607,
											"end": 12753,
											"name": "JUMPDEST"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "POP"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "POP"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "POP"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "POP"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "POP"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "POP"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "POP"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "POP"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "POP"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "POP"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "POP"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "POP"
										},
										{
											"begin": 11156,
											"end": 12757,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "JUMPDEST"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "SWAP1"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "SLOAD"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "SWAP1"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "EXP"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "SWAP1"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "DIV"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "AND"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "DUP2"
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "JUMPDEST"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "SWAP1"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "SLOAD"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "SWAP1"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "EXP"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "SWAP1"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "DIV"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "AND"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "DUP2"
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "JUMPDEST"
										},
										{
											"begin": 10794,
											"end": 10801,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10809,
											"end": 10826,
											"name": "DUP1"
										},
										{
											"begin": 10829,
											"end": 10884,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 10860,
											"end": 10868,
											"name": "DUP4"
										},
										{
											"begin": 10860,
											"end": 10881,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10860,
											"end": 10881,
											"name": "AND"
										},
										{
											"begin": 10860,
											"end": 10881,
											"name": "PUSH",
											"value": "3B406FB7"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "MLOAD"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "DUP2"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "AND"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "SHL"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "DUP2"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "MSTORE"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "ADD"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "MLOAD"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "DUP1"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "DUP4"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "SUB"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "DUP2"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "DUP7"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "DUP1"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "POP"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "GAS"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "STATICCALL"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "POP"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "POP"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "POP"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "POP"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "MLOAD"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "DUP2"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "ADD"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "SWAP1"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "DUP1"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "DUP1"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "MLOAD"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "SWAP1"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "ADD"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "SWAP1"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "SWAP3"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "SWAP2"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "SWAP1"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "POP"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "POP"
										},
										{
											"begin": 10860,
											"end": 10883,
											"name": "POP"
										},
										{
											"begin": 10829,
											"end": 10837,
											"name": "DUP5"
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "AND"
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "PUSH",
											"value": "22217CD3"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "MLOAD"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "DUP2"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "AND"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "SHL"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "DUP2"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "MSTORE"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "ADD"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "MLOAD"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "DUP1"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "DUP4"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "SUB"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "DUP2"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "DUP7"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "DUP1"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "POP"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "GAS"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "STATICCALL"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "POP"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "POP"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "POP"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "POP"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "MLOAD"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "DUP2"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "ADD"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "SWAP1"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "DUP1"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "DUP1"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "MLOAD"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "SWAP1"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "ADD"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "SWAP1"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "SWAP3"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "SWAP2"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "SWAP1"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "POP"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "POP"
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "POP"
										},
										{
											"begin": 10829,
											"end": 10859,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 10829,
											"end": 10859,
											"name": "SWAP1"
										},
										{
											"begin": 10829,
											"end": 10884,
											"name": "SWAP2"
										},
										{
											"begin": 10829,
											"end": 10884,
											"name": "SWAP1"
										},
										{
											"begin": 10829,
											"end": 10884,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10829,
											"end": 10884,
											"name": "AND"
										},
										{
											"begin": 10829,
											"end": 10884,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10829,
											"end": 10884,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 10829,
											"end": 10884,
											"name": "JUMPDEST"
										},
										{
											"begin": 10809,
											"end": 10884,
											"name": "SWAP1"
										},
										{
											"begin": 10809,
											"end": 10884,
											"name": "POP"
										},
										{
											"begin": 10907,
											"end": 10908,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10894,
											"end": 10903,
											"name": "DUP2"
										},
										{
											"begin": 10894,
											"end": 10908,
											"name": "EQ"
										},
										{
											"begin": 10890,
											"end": 10935,
											"name": "ISZERO"
										},
										{
											"begin": 10890,
											"end": 10935,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 10890,
											"end": 10935,
											"name": "JUMPI"
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10920,
											"end": 10928,
											"name": "SWAP2"
										},
										{
											"begin": 10920,
											"end": 10928,
											"name": "POP"
										},
										{
											"begin": 10920,
											"end": 10928,
											"name": "POP"
										},
										{
											"begin": 10920,
											"end": 10928,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 10920,
											"end": 10928,
											"name": "JUMP"
										},
										{
											"begin": 10890,
											"end": 10935,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 10890,
											"end": 10935,
											"name": "JUMPDEST"
										},
										{
											"begin": 10940,
											"end": 10962,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 10979,
											"end": 10980,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "MLOAD"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "SWAP1"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "DUP1"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "DUP3"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "MSTORE"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "DUP1"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "MUL"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "ADD"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "DUP3"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "ADD"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "MSTORE"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "DUP1"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "ISZERO"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "JUMPI"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "DUP2"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "SWAP1"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "POP"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "JUMPDEST"
										},
										{
											"begin": 10965,
											"end": 10981,
											"name": "POP"
										},
										{
											"begin": 10940,
											"end": 10981,
											"name": "SWAP1"
										},
										{
											"begin": 10940,
											"end": 10981,
											"name": "POP"
										},
										{
											"begin": 10998,
											"end": 11009,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10998,
											"end": 11009,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10998,
											"end": 11009,
											"name": "SWAP1"
										},
										{
											"begin": 10998,
											"end": 11009,
											"name": "SLOAD"
										},
										{
											"begin": 10998,
											"end": 11009,
											"name": "SWAP1"
										},
										{
											"begin": 10998,
											"end": 11009,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10998,
											"end": 11009,
											"name": "EXP"
										},
										{
											"begin": 10998,
											"end": 11009,
											"name": "SWAP1"
										},
										{
											"begin": 10998,
											"end": 11009,
											"name": "DIV"
										},
										{
											"begin": 10998,
											"end": 11009,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10998,
											"end": 11009,
											"name": "AND"
										},
										{
											"begin": 10987,
											"end": 10992,
											"name": "DUP2"
										},
										{
											"begin": 10993,
											"end": 10994,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10987,
											"end": 10995,
											"name": "DUP2"
										},
										{
											"begin": 10987,
											"end": 10995,
											"name": "MLOAD"
										},
										{
											"begin": 10987,
											"end": 10995,
											"name": "DUP2"
										},
										{
											"begin": 10987,
											"end": 10995,
											"name": "LT"
										},
										{
											"begin": 10987,
											"end": 10995,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 10987,
											"end": 10995,
											"name": "JUMPI"
										},
										{
											"begin": 10987,
											"end": 10995,
											"name": "INVALID"
										},
										{
											"begin": 10987,
											"end": 10995,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 10987,
											"end": 10995,
											"name": "JUMPDEST"
										},
										{
											"begin": 10987,
											"end": 10995,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10987,
											"end": 10995,
											"name": "MUL"
										},
										{
											"begin": 10987,
											"end": 10995,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10987,
											"end": 10995,
											"name": "ADD"
										},
										{
											"begin": 10987,
											"end": 10995,
											"name": "ADD"
										},
										{
											"begin": 10987,
											"end": 11009,
											"name": "SWAP1"
										},
										{
											"begin": 10987,
											"end": 11009,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10987,
											"end": 11009,
											"name": "AND"
										},
										{
											"begin": 10987,
											"end": 11009,
											"name": "SWAP1"
										},
										{
											"begin": 10987,
											"end": 11009,
											"name": "DUP2"
										},
										{
											"begin": 10987,
											"end": 11009,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10987,
											"end": 11009,
											"name": "AND"
										},
										{
											"begin": 10987,
											"end": 11009,
											"name": "DUP2"
										},
										{
											"begin": 10987,
											"end": 11009,
											"name": "MSTORE"
										},
										{
											"begin": 10987,
											"end": 11009,
											"name": "POP"
										},
										{
											"begin": 10987,
											"end": 11009,
											"name": "POP"
										},
										{
											"begin": 11034,
											"end": 11042,
											"name": "DUP4"
										},
										{
											"begin": 11034,
											"end": 11051,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11034,
											"end": 11051,
											"name": "AND"
										},
										{
											"begin": 11034,
											"end": 11051,
											"name": "PUSH",
											"value": "75DDC9ED"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "MLOAD"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "DUP2"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "AND"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "SHL"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "DUP2"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "MSTORE"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "ADD"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "MLOAD"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "DUP4"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "SUB"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "DUP2"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "DUP7"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "POP"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "GAS"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "STATICCALL"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "POP"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "POP"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "POP"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "POP"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "MLOAD"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "DUP2"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "ADD"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "SWAP1"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "MLOAD"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "SWAP1"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "ADD"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "SWAP1"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "SWAP3"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "SWAP2"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "SWAP1"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "POP"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "POP"
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "POP"
										},
										{
											"begin": 11015,
											"end": 11020,
											"name": "DUP2"
										},
										{
											"begin": 11021,
											"end": 11022,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11015,
											"end": 11023,
											"name": "DUP2"
										},
										{
											"begin": 11015,
											"end": 11023,
											"name": "MLOAD"
										},
										{
											"begin": 11015,
											"end": 11023,
											"name": "DUP2"
										},
										{
											"begin": 11015,
											"end": 11023,
											"name": "LT"
										},
										{
											"begin": 11015,
											"end": 11023,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 11015,
											"end": 11023,
											"name": "JUMPI"
										},
										{
											"begin": 11015,
											"end": 11023,
											"name": "INVALID"
										},
										{
											"begin": 11015,
											"end": 11023,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 11015,
											"end": 11023,
											"name": "JUMPDEST"
										},
										{
											"begin": 11015,
											"end": 11023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11015,
											"end": 11023,
											"name": "MUL"
										},
										{
											"begin": 11015,
											"end": 11023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11015,
											"end": 11023,
											"name": "ADD"
										},
										{
											"begin": 11015,
											"end": 11023,
											"name": "ADD"
										},
										{
											"begin": 11015,
											"end": 11054,
											"name": "SWAP1"
										},
										{
											"begin": 11015,
											"end": 11054,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11015,
											"end": 11054,
											"name": "AND"
										},
										{
											"begin": 11015,
											"end": 11054,
											"name": "SWAP1"
										},
										{
											"begin": 11015,
											"end": 11054,
											"name": "DUP2"
										},
										{
											"begin": 11015,
											"end": 11054,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11015,
											"end": 11054,
											"name": "AND"
										},
										{
											"begin": 11015,
											"end": 11054,
											"name": "DUP2"
										},
										{
											"begin": 11015,
											"end": 11054,
											"name": "MSTORE"
										},
										{
											"begin": 11015,
											"end": 11054,
											"name": "POP"
										},
										{
											"begin": 11015,
											"end": 11054,
											"name": "POP"
										},
										{
											"begin": 11060,
											"end": 11084,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11087,
											"end": 11093,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11087,
											"end": 11093,
											"name": "DUP1"
										},
										{
											"begin": 11087,
											"end": 11093,
											"name": "SWAP1"
										},
										{
											"begin": 11087,
											"end": 11093,
											"name": "SLOAD"
										},
										{
											"begin": 11087,
											"end": 11093,
											"name": "SWAP1"
										},
										{
											"begin": 11087,
											"end": 11093,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11087,
											"end": 11093,
											"name": "EXP"
										},
										{
											"begin": 11087,
											"end": 11093,
											"name": "SWAP1"
										},
										{
											"begin": 11087,
											"end": 11093,
											"name": "DIV"
										},
										{
											"begin": 11087,
											"end": 11093,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11087,
											"end": 11093,
											"name": "AND"
										},
										{
											"begin": 11087,
											"end": 11106,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11087,
											"end": 11106,
											"name": "AND"
										},
										{
											"begin": 11087,
											"end": 11106,
											"name": "PUSH",
											"value": "1F00CA74"
										},
										{
											"begin": 11107,
											"end": 11116,
											"name": "DUP5"
										},
										{
											"begin": 11118,
											"end": 11123,
											"name": "DUP5"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "MLOAD"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP4"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "AND"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "SHL"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP2"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "MSTORE"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "ADD"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP1"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP4"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP2"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "MSTORE"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "ADD"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP1"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "ADD"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP3"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP2"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "SUB"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP3"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "MSTORE"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP4"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP2"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP2"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "MLOAD"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP2"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "MSTORE"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "ADD"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "SWAP2"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP1"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "MLOAD"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "SWAP1"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "ADD"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "SWAP1"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "MUL"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP1"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP4"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "SWAP1"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "ADD"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "SWAP4"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "MLOAD"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP1"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP4"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "SUB"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP2"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP7"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP1"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "GAS"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "STATICCALL"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "MLOAD"
										},
										{
											"begin": 39,
											"end": 55,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 36,
											"end": 37,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17,
											"end": 34,
											"name": "DUP3"
										},
										{
											"begin": 2,
											"end": 56,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP2"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "ADD"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "SWAP1"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP1"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP1"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "MLOAD"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "MLOAD"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "SWAP4"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "SWAP3"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "SWAP2"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "SWAP1"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP5"
										},
										{
											"begin": 19,
											"end": 30,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 14,
											"end": 17,
											"name": "DUP3"
										},
										{
											"begin": 11,
											"end": 31,
											"name": "GT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 44,
											"end": 45,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 41,
											"end": 42,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 46,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 66,
											"end": 69,
											"name": "DUP3"
										},
										{
											"begin": 62,
											"end": 83,
											"name": "ADD"
										},
										{
											"begin": 55,
											"end": 83,
											"name": "SWAP2"
										},
										{
											"begin": 55,
											"end": 83,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 127,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP3"
										},
										{
											"begin": 114,
											"end": 128,
											"name": "ADD"
										},
										{
											"begin": 159,
											"end": 168,
											"name": "DUP6"
										},
										{
											"begin": 141,
											"end": 157,
											"name": "DUP2"
										},
										{
											"begin": 138,
											"end": 169,
											"name": "GT"
										},
										{
											"begin": 135,
											"end": 137,
											"name": "ISZERO"
										},
										{
											"begin": 135,
											"end": 137,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 135,
											"end": 137,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 179,
											"end": 180,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 184,
											"name": "REVERT"
										},
										{
											"begin": 135,
											"end": 137,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 135,
											"end": 137,
											"name": "JUMPDEST"
										},
										{
											"begin": 219,
											"end": 222,
											"name": "DUP3"
										},
										{
											"begin": 213,
											"end": 223,
											"name": "MLOAD"
										},
										{
											"begin": 331,
											"end": 340,
											"name": "DUP7"
										},
										{
											"begin": 325,
											"end": 327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 311,
											"end": 323,
											"name": "DUP3"
										},
										{
											"begin": 307,
											"end": 328,
											"name": "MUL"
										},
										{
											"begin": 289,
											"end": 305,
											"name": "DUP4"
										},
										{
											"begin": 285,
											"end": 329,
											"name": "ADD"
										},
										{
											"begin": 282,
											"end": 341,
											"name": "GT"
										},
										{
											"begin": 261,
											"end": 272,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 247,
											"end": 259,
											"name": "DUP3"
										},
										{
											"begin": 244,
											"end": 273,
											"name": "GT"
										},
										{
											"begin": 233,
											"end": 349,
											"name": "OR"
										},
										{
											"begin": 230,
											"end": 232,
											"name": "ISZERO"
										},
										{
											"begin": 230,
											"end": 232,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 230,
											"end": 232,
											"name": "JUMPI"
										},
										{
											"begin": 362,
											"end": 363,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 359,
											"end": 360,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 364,
											"name": "REVERT"
										},
										{
											"begin": 230,
											"end": 232,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 230,
											"end": 232,
											"name": "JUMPDEST"
										},
										{
											"begin": 385,
											"end": 397,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 383,
											"name": "DUP4"
										},
										{
											"begin": 373,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 421,
											"end": 425,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 416,
											"end": 419,
											"name": "DUP4"
										},
										{
											"begin": 412,
											"end": 426,
											"name": "ADD"
										},
										{
											"begin": 405,
											"end": 426,
											"name": "SWAP3"
										},
										{
											"begin": 405,
											"end": 426,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 433,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 433,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "SWAP1"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP1"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "MLOAD"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "SWAP1"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "ADD"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "SWAP1"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "MUL"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP1"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP4"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "SWAP1"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "ADD"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "MSTORE"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "POP"
										},
										{
											"begin": 11060,
											"end": 11124,
											"name": "SWAP1"
										},
										{
											"begin": 11060,
											"end": 11124,
											"name": "POP"
										},
										{
											"begin": 11137,
											"end": 11144,
											"name": "DUP1"
										},
										{
											"begin": 11145,
											"end": 11146,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11137,
											"end": 11147,
											"name": "DUP2"
										},
										{
											"begin": 11137,
											"end": 11147,
											"name": "MLOAD"
										},
										{
											"begin": 11137,
											"end": 11147,
											"name": "DUP2"
										},
										{
											"begin": 11137,
											"end": 11147,
											"name": "LT"
										},
										{
											"begin": 11137,
											"end": 11147,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 11137,
											"end": 11147,
											"name": "JUMPI"
										},
										{
											"begin": 11137,
											"end": 11147,
											"name": "INVALID"
										},
										{
											"begin": 11137,
											"end": 11147,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 11137,
											"end": 11147,
											"name": "JUMPDEST"
										},
										{
											"begin": 11137,
											"end": 11147,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11137,
											"end": 11147,
											"name": "MUL"
										},
										{
											"begin": 11137,
											"end": 11147,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11137,
											"end": 11147,
											"name": "ADD"
										},
										{
											"begin": 11137,
											"end": 11147,
											"name": "ADD"
										},
										{
											"begin": 11137,
											"end": 11147,
											"name": "MLOAD"
										},
										{
											"begin": 11130,
											"end": 11147,
											"name": "SWAP4"
										},
										{
											"begin": 11130,
											"end": 11147,
											"name": "POP"
										},
										{
											"begin": 11130,
											"end": 11147,
											"name": "POP"
										},
										{
											"begin": 11130,
											"end": 11147,
											"name": "POP"
										},
										{
											"begin": 11130,
											"end": 11147,
											"name": "POP"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "JUMPDEST"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "SWAP2"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "SWAP1"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "POP"
										},
										{
											"begin": 10724,
											"end": 11152,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "JUMPDEST"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "MSTORE"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "DUP1"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "MSTORE"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "KECCAK256"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "SWAP2"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "POP"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "SLOAD"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "SWAP1"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "EXP"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "SWAP1"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "DIV"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "AND"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "DUP2"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "JUMPDEST"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "DUP1"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "SWAP1"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "SLOAD"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "SWAP1"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "EXP"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "SWAP1"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "DIV"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "AND"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "DUP2"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4220,
											"end": 4343,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 4220,
											"end": 4343,
											"name": "JUMPDEST"
										},
										{
											"begin": 4278,
											"end": 4287,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4303,
											"end": 4304,
											"name": "DUP2"
										},
										{
											"begin": 4299,
											"end": 4300,
											"name": "DUP4"
										},
										{
											"begin": 4299,
											"end": 4304,
											"name": "ADD"
										},
										{
											"begin": 4295,
											"end": 4304,
											"name": "SWAP1"
										},
										{
											"begin": 4295,
											"end": 4304,
											"name": "POP"
										},
										{
											"begin": 4322,
											"end": 4323,
											"name": "DUP3"
										},
										{
											"begin": 4317,
											"end": 4318,
											"name": "DUP2"
										},
										{
											"begin": 4317,
											"end": 4323,
											"name": "LT"
										},
										{
											"begin": 4317,
											"end": 4323,
											"name": "ISZERO"
										},
										{
											"begin": 4310,
											"end": 4324,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 4310,
											"end": 4324,
											"name": "JUMPI"
										},
										{
											"begin": 4310,
											"end": 4324,
											"name": "INVALID"
										},
										{
											"begin": 4310,
											"end": 4324,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 4310,
											"end": 4324,
											"name": "JUMPDEST"
										},
										{
											"begin": 4337,
											"end": 4338,
											"name": "DUP1"
										},
										{
											"begin": 4330,
											"end": 4338,
											"name": "SWAP1"
										},
										{
											"begin": 4330,
											"end": 4338,
											"name": "POP"
										},
										{
											"begin": 4220,
											"end": 4343,
											"name": "SWAP3"
										},
										{
											"begin": 4220,
											"end": 4343,
											"name": "SWAP2"
										},
										{
											"begin": 4220,
											"end": 4343,
											"name": "POP"
										},
										{
											"begin": 4220,
											"end": 4343,
											"name": "POP"
										},
										{
											"begin": 4220,
											"end": 4343,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3760,
											"end": 3870,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 3760,
											"end": 3870,
											"name": "JUMPDEST"
										},
										{
											"begin": 3818,
											"end": 3825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3846,
											"name": "DUP3"
										},
										{
											"begin": 3840,
											"end": 3841,
											"name": "DUP3"
										},
										{
											"begin": 3840,
											"end": 3846,
											"name": "GT"
										},
										{
											"begin": 3840,
											"end": 3846,
											"name": "ISZERO"
										},
										{
											"begin": 3833,
											"end": 3847,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 3833,
											"end": 3847,
											"name": "JUMPI"
										},
										{
											"begin": 3833,
											"end": 3847,
											"name": "INVALID"
										},
										{
											"begin": 3833,
											"end": 3847,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 3833,
											"end": 3847,
											"name": "JUMPDEST"
										},
										{
											"begin": 3864,
											"end": 3865,
											"name": "DUP2"
										},
										{
											"begin": 3860,
											"end": 3861,
											"name": "DUP4"
										},
										{
											"begin": 3860,
											"end": 3865,
											"name": "SUB"
										},
										{
											"begin": 3853,
											"end": 3865,
											"name": "SWAP1"
										},
										{
											"begin": 3853,
											"end": 3865,
											"name": "POP"
										},
										{
											"begin": 3760,
											"end": 3870,
											"name": "SWAP3"
										},
										{
											"begin": 3760,
											"end": 3870,
											"name": "SWAP2"
										},
										{
											"begin": 3760,
											"end": 3870,
											"name": "POP"
										},
										{
											"begin": 3760,
											"end": 3870,
											"name": "POP"
										},
										{
											"begin": 3760,
											"end": 3870,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6137,
											"end": 6339,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 6137,
											"end": 6339,
											"name": "JUMPDEST"
										},
										{
											"begin": 6237,
											"end": 6332,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 6256,
											"end": 6261,
											"name": "DUP5"
										},
										{
											"begin": 6286,
											"end": 6291,
											"name": "DUP6"
										},
										{
											"begin": 6286,
											"end": 6304,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6286,
											"end": 6304,
											"name": "AND"
										},
										{
											"begin": 6286,
											"end": 6304,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 6286,
											"end": 6313,
											"name": "SWAP1"
										},
										{
											"begin": 6286,
											"end": 6313,
											"name": "POP"
										},
										{
											"begin": 6286,
											"end": 6313,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 6286,
											"end": 6313,
											"name": "SHL"
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP6"
										},
										{
											"begin": 6321,
											"end": 6323,
											"name": "DUP6"
										},
										{
											"begin": 6325,
											"end": 6330,
											"name": "DUP6"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "MLOAD"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "ADD"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "DUP1"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "DUP5"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "AND"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "AND"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "DUP2"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "MSTORE"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "ADD"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "DUP4"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "AND"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "AND"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "DUP2"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "MSTORE"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "ADD"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "DUP3"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "DUP2"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "MSTORE"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "ADD"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "SWAP4"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "POP"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "POP"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "POP"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "POP"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "SWAP1"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "MSTORE"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "SWAP1"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "NOT"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 6263,
											"end": 6331,
											"name": "POP"
										},
										{
											"begin": 6237,
											"end": 6255,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 6237,
											"end": 6332,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6237,
											"end": 6332,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 6237,
											"end": 6332,
											"name": "JUMPDEST"
										},
										{
											"begin": 6137,
											"end": 6339,
											"name": "POP"
										},
										{
											"begin": 6137,
											"end": 6339,
											"name": "POP"
										},
										{
											"begin": 6137,
											"end": 6339,
											"name": "POP"
										},
										{
											"begin": 6137,
											"end": 6339,
											"name": "POP"
										},
										{
											"begin": 6137,
											"end": 6339,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2489,
											"end": 2656,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2489,
											"end": 2656,
											"name": "JUMPDEST"
										},
										{
											"begin": 2547,
											"end": 2556,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2573,
											"end": 2574,
											"name": "DUP1"
										},
										{
											"begin": 2568,
											"end": 2569,
											"name": "DUP4"
										},
										{
											"begin": 2568,
											"end": 2574,
											"name": "EQ"
										},
										{
											"begin": 2564,
											"end": 2599,
											"name": "ISZERO"
										},
										{
											"begin": 2564,
											"end": 2599,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 2564,
											"end": 2599,
											"name": "JUMPI"
										},
										{
											"begin": 2591,
											"end": 2592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2592,
											"name": "SWAP1"
										},
										{
											"begin": 2584,
											"end": 2592,
											"name": "POP"
										},
										{
											"begin": 2584,
											"end": 2592,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 2584,
											"end": 2592,
											"name": "JUMP"
										},
										{
											"begin": 2564,
											"end": 2599,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 2564,
											"end": 2599,
											"name": "JUMPDEST"
										},
										{
											"begin": 2612,
											"end": 2613,
											"name": "DUP2"
										},
										{
											"begin": 2608,
											"end": 2609,
											"name": "DUP4"
										},
										{
											"begin": 2608,
											"end": 2613,
											"name": "MUL"
										},
										{
											"begin": 2604,
											"end": 2613,
											"name": "SWAP1"
										},
										{
											"begin": 2604,
											"end": 2613,
											"name": "POP"
										},
										{
											"begin": 2635,
											"end": 2636,
											"name": "DUP2"
										},
										{
											"begin": 2630,
											"end": 2631,
											"name": "DUP4"
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "DUP3"
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "DUP2"
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "JUMPI"
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "INVALID"
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "JUMPDEST"
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "DIV"
										},
										{
											"begin": 2626,
											"end": 2636,
											"name": "EQ"
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "JUMPI"
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "INVALID"
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "JUMPDEST"
										},
										{
											"begin": 2650,
											"end": 2651,
											"name": "DUP1"
										},
										{
											"begin": 2643,
											"end": 2651,
											"name": "SWAP1"
										},
										{
											"begin": 2643,
											"end": 2651,
											"name": "POP"
										},
										{
											"begin": 2489,
											"end": 2656,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 2489,
											"end": 2656,
											"name": "JUMPDEST"
										},
										{
											"begin": 2489,
											"end": 2656,
											"name": "SWAP3"
										},
										{
											"begin": 2489,
											"end": 2656,
											"name": "SWAP2"
										},
										{
											"begin": 2489,
											"end": 2656,
											"name": "POP"
										},
										{
											"begin": 2489,
											"end": 2656,
											"name": "POP"
										},
										{
											"begin": 2489,
											"end": 2656,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7916,
											"end": 9011,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 7916,
											"end": 9011,
											"name": "JUMPDEST"
										},
										{
											"begin": 8511,
											"end": 8538,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 8519,
											"end": 8524,
											"name": "DUP3"
										},
										{
											"begin": 8511,
											"end": 8536,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8511,
											"end": 8536,
											"name": "AND"
										},
										{
											"begin": 8511,
											"end": 8536,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 8511,
											"end": 8538,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8511,
											"end": 8538,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 8511,
											"end": 8538,
											"name": "JUMPDEST"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "JUMPI"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "MLOAD"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "DUP2"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "MSTORE"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "ADD"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "DUP1"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "DUP1"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "ADD"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "DUP3"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "DUP2"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "SUB"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "DUP3"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "MSTORE"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "DUP2"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "MSTORE"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "ADD"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "DUP1"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "PUSH",
											"value": "5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "DUP2"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "MSTORE"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "POP"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "ADD"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "SWAP2"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "POP"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "POP"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "MLOAD"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "DUP1"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "SWAP2"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "SUB"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "SWAP1"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "REVERT"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 8503,
											"end": 8574,
											"name": "JUMPDEST"
										},
										{
											"begin": 8645,
											"end": 8657,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8659,
											"end": 8682,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8694,
											"end": 8699,
											"name": "DUP4"
										},
										{
											"begin": 8686,
											"end": 8705,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8686,
											"end": 8705,
											"name": "AND"
										},
										{
											"begin": 8706,
											"end": 8710,
											"name": "DUP4"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "MLOAD"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "DUP1"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "DUP3"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "DUP1"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "MLOAD"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "SWAP1"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "ADD"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "SWAP1"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "DUP1"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "DUP4"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "POP"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "POP"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "POP"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "SWAP1"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "POP"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "ADD"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "SWAP2"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "POP"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "POP"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "MLOAD"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "DUP1"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "DUP4"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "SUB"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "DUP2"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "DUP7"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "GAS"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "CALL"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "SWAP2"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "POP"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "POP"
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 8644,
											"end": 8711,
											"name": "SWAP2"
										},
										{
											"begin": 8644,
											"end": 8711,
											"name": "POP"
										},
										{
											"begin": 8644,
											"end": 8711,
											"name": "SWAP2"
										},
										{
											"begin": 8644,
											"end": 8711,
											"name": "POP"
										},
										{
											"begin": 8729,
											"end": 8736,
											"name": "DUP2"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "JUMPI"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "MLOAD"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "DUP2"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "MSTORE"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "ADD"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "DUP1"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "DUP1"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "ADD"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "DUP3"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "DUP2"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "SUB"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "DUP3"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "MSTORE"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "DUP2"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "MSTORE"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "ADD"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "DUP1"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "PUSH",
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "DUP2"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "MSTORE"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "POP"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "ADD"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "SWAP2"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "POP"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "POP"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "MLOAD"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "DUP1"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "SWAP2"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "SUB"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "SWAP1"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "REVERT"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 8721,
											"end": 8773,
											"name": "JUMPDEST"
										},
										{
											"begin": 8808,
											"end": 8809,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8788,
											"end": 8798,
											"name": "DUP2"
										},
										{
											"begin": 8788,
											"end": 8805,
											"name": "MLOAD"
										},
										{
											"begin": 8788,
											"end": 8809,
											"name": "GT"
										},
										{
											"begin": 8784,
											"end": 9005,
											"name": "ISZERO"
										},
										{
											"begin": 8784,
											"end": 9005,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 8784,
											"end": 9005,
											"name": "JUMPI"
										},
										{
											"begin": 8928,
											"end": 8938,
											"name": "DUP1"
										},
										{
											"begin": 8917,
											"end": 8947,
											"name": "DUP1"
										},
										{
											"begin": 8917,
											"end": 8947,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8917,
											"end": 8947,
											"name": "ADD"
										},
										{
											"begin": 8917,
											"end": 8947,
											"name": "SWAP1"
										},
										{
											"begin": 8917,
											"end": 8947,
											"name": "MLOAD"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8917,
											"end": 8947,
											"name": "DUP2"
										},
										{
											"begin": 8917,
											"end": 8947,
											"name": "ADD"
										},
										{
											"begin": 8917,
											"end": 8947,
											"name": "SWAP1"
										},
										{
											"begin": 8917,
											"end": 8947,
											"name": "DUP1"
										},
										{
											"begin": 8917,
											"end": 8947,
											"name": "DUP1"
										},
										{
											"begin": 8917,
											"end": 8947,
											"name": "MLOAD"
										},
										{
											"begin": 8917,
											"end": 8947,
											"name": "SWAP1"
										},
										{
											"begin": 8917,
											"end": 8947,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8917,
											"end": 8947,
											"name": "ADD"
										},
										{
											"begin": 8917,
											"end": 8947,
											"name": "SWAP1"
										},
										{
											"begin": 8917,
											"end": 8947,
											"name": "SWAP3"
										},
										{
											"begin": 8917,
											"end": 8947,
											"name": "SWAP2"
										},
										{
											"begin": 8917,
											"end": 8947,
											"name": "SWAP1"
										},
										{
											"begin": 8917,
											"end": 8947,
											"name": "POP"
										},
										{
											"begin": 8917,
											"end": 8947,
											"name": "POP"
										},
										{
											"begin": 8917,
											"end": 8947,
											"name": "POP"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "JUMPI"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "MLOAD"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "DUP2"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "MSTORE"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "ADD"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "DUP1"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "DUP1"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "ADD"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "DUP3"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "DUP2"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "SUB"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "DUP3"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "MSTORE"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "DUP2"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "MSTORE"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "ADD"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "DUP1"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "PUSH data",
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "SWAP2"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "CODECOPY"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "ADD"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "SWAP2"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "POP"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "POP"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "MLOAD"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "DUP1"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "SWAP2"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "SUB"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "SWAP1"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "REVERT"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 8909,
											"end": 8994,
											"name": "JUMPDEST"
										},
										{
											"begin": 8784,
											"end": 9005,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 8784,
											"end": 9005,
											"name": "JUMPDEST"
										},
										{
											"begin": 7916,
											"end": 9011,
											"name": "POP"
										},
										{
											"begin": 7916,
											"end": 9011,
											"name": "POP"
										},
										{
											"begin": 7916,
											"end": 9011,
											"name": "POP"
										},
										{
											"begin": 7916,
											"end": 9011,
											"name": "POP"
										},
										{
											"begin": 7916,
											"end": 9011,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4927,
											"end": 5340,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 4927,
											"end": 5340,
											"name": "JUMPDEST"
										},
										{
											"begin": 4987,
											"end": 4991,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5190,
											"end": 5202,
											"name": "DUP1"
										},
										{
											"begin": 5299,
											"end": 5306,
											"name": "DUP3"
										},
										{
											"begin": 5287,
											"end": 5307,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 5279,
											"end": 5307,
											"name": "SWAP1"
										},
										{
											"begin": 5279,
											"end": 5307,
											"name": "POP"
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5325,
											"end": 5329,
											"name": "DUP2"
										},
										{
											"begin": 5325,
											"end": 5333,
											"name": "GT"
										},
										{
											"begin": 5318,
											"end": 5333,
											"name": "SWAP2"
										},
										{
											"begin": 5318,
											"end": 5333,
											"name": "POP"
										},
										{
											"begin": 5318,
											"end": 5333,
											"name": "POP"
										},
										{
											"begin": 4927,
											"end": 5340,
											"name": "SWAP2"
										},
										{
											"begin": 4927,
											"end": 5340,
											"name": "SWAP1"
										},
										{
											"begin": 4927,
											"end": 5340,
											"name": "POP"
										},
										{
											"begin": 4927,
											"end": 5340,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6345,
											"end": 6957,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 6345,
											"end": 6957,
											"name": "JUMPDEST"
										},
										{
											"begin": 6719,
											"end": 6720,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6710,
											"end": 6715,
											"name": "DUP2"
										},
										{
											"begin": 6710,
											"end": 6720,
											"name": "EQ"
										},
										{
											"begin": 6709,
											"end": 6771,
											"name": "DUP1"
										},
										{
											"begin": 6709,
											"end": 6771,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 6709,
											"end": 6771,
											"name": "JUMPI"
										},
										{
											"begin": 6709,
											"end": 6771,
											"name": "POP"
										},
										{
											"begin": 6769,
											"end": 6770,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6726,
											"end": 6731,
											"name": "DUP4"
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "AND"
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 6750,
											"end": 6754,
											"name": "ADDRESS"
										},
										{
											"begin": 6757,
											"end": 6764,
											"name": "DUP6"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "MLOAD"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "DUP4"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "AND"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "SHL"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "DUP2"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "MSTORE"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "ADD"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "DUP1"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "DUP4"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "AND"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "AND"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "DUP2"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "MSTORE"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "ADD"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "DUP3"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "AND"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "AND"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "DUP2"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "MSTORE"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "ADD"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "SWAP3"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "POP"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "POP"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "POP"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "MLOAD"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "DUP1"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "DUP4"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "SUB"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "DUP2"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "DUP7"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "DUP1"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "POP"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "GAS"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "STATICCALL"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "POP"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "POP"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "POP"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "POP"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "MLOAD"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "DUP2"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "ADD"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "SWAP1"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "DUP1"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "DUP1"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "MLOAD"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "SWAP1"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "ADD"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "SWAP1"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "SWAP3"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "SWAP2"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "SWAP1"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "POP"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "POP"
										},
										{
											"begin": 6726,
											"end": 6765,
											"name": "POP"
										},
										{
											"begin": 6726,
											"end": 6770,
											"name": "EQ"
										},
										{
											"begin": 6709,
											"end": 6771,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 6709,
											"end": 6771,
											"name": "JUMPDEST"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "JUMPI"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "MLOAD"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "DUP2"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "MSTORE"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "ADD"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "DUP1"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "DUP1"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "ADD"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "DUP3"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "DUP2"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "SUB"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "DUP3"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "MSTORE"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "PUSH",
											"value": "36"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "DUP2"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "MSTORE"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "ADD"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "DUP1"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "PUSH data",
											"value": "EF945DDB1BFDC0DA870FEB4560D868B047642B4AC7F2FB7F8B7C51CB4A411E25"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "PUSH",
											"value": "36"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "SWAP2"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "CODECOPY"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "ADD"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "SWAP2"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "POP"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "POP"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "MLOAD"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "DUP1"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "SWAP2"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "SUB"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "SWAP1"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "REVERT"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 6701,
											"end": 6851,
											"name": "JUMPDEST"
										},
										{
											"begin": 6861,
											"end": 6950,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 6880,
											"end": 6885,
											"name": "DUP4"
										},
										{
											"begin": 6910,
											"end": 6915,
											"name": "DUP5"
										},
										{
											"begin": 6910,
											"end": 6923,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6923,
											"name": "AND"
										},
										{
											"begin": 6910,
											"end": 6923,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 6910,
											"end": 6932,
											"name": "SWAP1"
										},
										{
											"begin": 6910,
											"end": 6932,
											"name": "POP"
										},
										{
											"begin": 6910,
											"end": 6932,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 6910,
											"end": 6932,
											"name": "SHL"
										},
										{
											"begin": 6934,
											"end": 6941,
											"name": "DUP5"
										},
										{
											"begin": 6943,
											"end": 6948,
											"name": "DUP5"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "MLOAD"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "ADD"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "DUP1"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "DUP4"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "AND"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "AND"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "DUP2"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "MSTORE"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "ADD"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "DUP3"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "DUP2"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "MSTORE"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "ADD"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "SWAP3"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "POP"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "POP"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "POP"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "SWAP1"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "MSTORE"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "SWAP1"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "NOT"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 6887,
											"end": 6949,
											"name": "POP"
										},
										{
											"begin": 6861,
											"end": 6879,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 6861,
											"end": 6950,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6861,
											"end": 6950,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 6861,
											"end": 6950,
											"name": "JUMPDEST"
										},
										{
											"begin": 6345,
											"end": 6957,
											"name": "POP"
										},
										{
											"begin": 6345,
											"end": 6957,
											"name": "POP"
										},
										{
											"begin": 6345,
											"end": 6957,
											"name": "POP"
										},
										{
											"begin": 6345,
											"end": 6957,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"57308F09D5629392B8F7D9E16798D0401751415AAB39E9BF210CE0719FBB2EDF": "4d657373696572577261707065723a20696e73756666696369656e7420636f696e21",
										"C645ED3573958A1D40CA56F987855FD774192D2C2A78D4419757D9CBCF326D65": "4d657373696572577261707065723a20756e657870656374656420737461747573",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
										"EF945DDB1BFDC0DA870FEB4560D868B047642B4AC7F2FB7F8B7C51CB4A411E25": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365"
									}
								},
								"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
								"EF945DDB1BFDC0DA870FEB4560D868B047642B4AC7F2FB7F8B7C51CB4A411E25": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365"
							}
						},
						"methodIdentifiers": {
							"deposit(address,bytes32,bool)": "068f536f",
							"messierAddr()": "31796919",
							"purchaseCost(address)": "65104a0c",
							"router()": "f887ea40",
							"whitelisted(address)": "d936547e",
							"wrappedCoin()": "527ba9af"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IRouter\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wrappedCoin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_messierAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"leafIndex\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"M87Denomination\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"anonymityFee\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract IMessierV2dot2\",\"name\":\"_messier\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_commitment\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"_buyM87\",\"type\":\"bool\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"messierAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"contract IMessierV2dot2\",\"name\":\"_messier\",\"type\":\"address\"}],\"name\":\"purchaseCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IRouter\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wrappedCoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"anonimity/0.1-ETH-Router.sol\":\"MessierWrapper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"anonimity/0.1-ETH-Router.sol\":{\"keccak256\":\"0xff19fdab0a07eef184173a7aac970d44703447d9efe26f3c8633cc687f06cb3c\",\"urls\":[\"bzz-raw://5a7d92d95142aa363cc68c443f2f48a5b274d07d546e902644d28b4c2bc719a4\",\"dweb:/ipfs/QmcN7s1Xo93rrdL4Y3pyWPxbegmr8nHNV7kxTSnFjwcX4r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 547,
								"contract": "anonimity/0.1-ETH-Router.sol:MessierWrapper",
								"label": "router",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IRouter)538"
							},
							{
								"astId": 549,
								"contract": "anonimity/0.1-ETH-Router.sol:MessierWrapper",
								"label": "wrappedCoin",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 551,
								"contract": "anonimity/0.1-ETH-Router.sol:MessierWrapper",
								"label": "messierAddr",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 555,
								"contract": "anonimity/0.1-ETH-Router.sol:MessierWrapper",
								"label": "whitelisted",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IRouter)538": {
								"encoding": "inplace",
								"label": "contract IRouter",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"methods": {},
						"title": "SafeERC20"
					},
					"evm": {
						"assembly": "    /* \"anonimity/0.1-ETH-Router.sol\":5869:9013  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"anonimity/0.1-ETH-Router.sol\":5869:9013  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820fa69dbe417a71c33b9080a8de0cea047584a6786b5578331b2bf5d541fbf11ac64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820fa69dbe417a71c33b9080a8de0cea047584a6786b5578331b2bf5d541fbf11ac64736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 STATICCALL PUSH10 0xDBE417A71C33B9080A8D 0xE0 0xCE LOG0 SELFBALANCE PC 0x4A PUSH8 0x86B5578331B2BF5D SLOAD 0x1F 0xBF GT 0xAC PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "5869:3144:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820fa69dbe417a71c33b9080a8de0cea047584a6786b5578331b2bf5d541fbf11ac64736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 STATICCALL PUSH10 0xDBE417A71C33B9080A8D 0xE0 0xCE LOG0 SELFBALANCE PC 0x4A PUSH8 0x86B5578331B2BF5D SLOAD 0x1F 0xBF GT 0xAC PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "5869:3144:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5869,
									"end": 9013,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5869,
									"end": 9013,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820fa69dbe417a71c33b9080a8de0cea047584a6786b5578331b2bf5d541fbf11ac64736f6c63430005110032",
									".code": [
										{
											"begin": 5869,
											"end": 9013,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 5869,
											"end": 9013,
											"name": "ADDRESS"
										},
										{
											"begin": 5869,
											"end": 9013,
											"name": "EQ"
										},
										{
											"begin": 5869,
											"end": 9013,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 5869,
											"end": 9013,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5869,
											"end": 9013,
											"name": "MSTORE"
										},
										{
											"begin": 5869,
											"end": 9013,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5869,
											"end": 9013,
											"name": "DUP1"
										},
										{
											"begin": 5869,
											"end": 9013,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"methods\":{},\"title\":\"SafeERC20\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"anonimity/0.1-ETH-Router.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"anonimity/0.1-ETH-Router.sol\":{\"keccak256\":\"0xff19fdab0a07eef184173a7aac970d44703447d9efe26f3c8633cc687f06cb3c\",\"urls\":[\"bzz-raw://5a7d92d95142aa363cc68c443f2f48a5b274d07d546e902644d28b4c2bc719a4\",\"dweb:/ipfs/QmcN7s1Xo93rrdL4Y3pyWPxbegmr8nHNV7kxTSnFjwcX4r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Math operations with safety checks that throw on error",
						"methods": {},
						"title": "SafeMath"
					},
					"evm": {
						"assembly": "    /* \"anonimity/0.1-ETH-Router.sol\":2114:4345  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"anonimity/0.1-ETH-Router.sol\":2114:4345  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158206e1d3f66bc64140ca4dba4b21965936e1184e356b6b476fa4e653c562ac3760564736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158206e1d3f66bc64140ca4dba4b21965936e1184e356b6b476fa4e653c562ac3760564736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH15 0x1D3F66BC64140CA4DBA4B21965936E GT DUP5 0xE3 JUMP 0xB6 0xB4 PUSH23 0xFA4E653C562AC3760564736F6C63430005110032000000 ",
							"sourceMap": "2114:2231:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158206e1d3f66bc64140ca4dba4b21965936e1184e356b6b476fa4e653c562ac3760564736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH15 0x1D3F66BC64140CA4DBA4B21965936E GT DUP5 0xE3 JUMP 0xB6 0xB4 PUSH23 0xFA4E653C562AC3760564736F6C63430005110032000000 ",
							"sourceMap": "2114:2231:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2114,
									"end": 4345,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2114,
									"end": 4345,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158206e1d3f66bc64140ca4dba4b21965936e1184e356b6b476fa4e653c562ac3760564736f6c63430005110032",
									".code": [
										{
											"begin": 2114,
											"end": 4345,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 2114,
											"end": 4345,
											"name": "ADDRESS"
										},
										{
											"begin": 2114,
											"end": 4345,
											"name": "EQ"
										},
										{
											"begin": 2114,
											"end": 4345,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2114,
											"end": 4345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2114,
											"end": 4345,
											"name": "MSTORE"
										},
										{
											"begin": 2114,
											"end": 4345,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 4345,
											"name": "DUP1"
										},
										{
											"begin": 2114,
											"end": 4345,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations with safety checks that throw on error\",\"methods\":{},\"title\":\"SafeMath\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"anonimity/0.1-ETH-Router.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"anonimity/0.1-ETH-Router.sol\":{\"keccak256\":\"0xff19fdab0a07eef184173a7aac970d44703447d9efe26f3c8633cc687f06cb3c\",\"urls\":[\"bzz-raw://5a7d92d95142aa363cc68c443f2f48a5b274d07d546e902644d28b4c2bc719a4\",\"dweb:/ipfs/QmcN7s1Xo93rrdL4Y3pyWPxbegmr8nHNV7kxTSnFjwcX4r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"anonimity/0.1-ETH-Router.sol": {
				"ast": {
					"absolutePath": "anonimity/0.1-ETH-Router.sol",
					"exportedSymbols": {
						"Address": [
							257
						],
						"IERC20": [
							82
						],
						"IERC20Basic": [
							31
						],
						"IMessierV2dot2": [
							146
						],
						"IRouter": [
							538
						],
						"MessierWrapper": [
							910
						],
						"SafeERC20": [
							472
						],
						"SafeMath": [
							239
						]
					},
					"id": 911,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"<",
								"0.6",
								">=",
								"0.4",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "109:30:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title ERC20Basic\n@dev Simpler version of ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/179",
							"fullyImplemented": false,
							"id": 31,
							"linearizedBaseContracts": [
								31
							],
							"name": "IERC20Basic",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "315:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "339:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "338:9:0"
									},
									"scope": 31,
									"src": "295:53:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "370:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "369:13:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "404:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "403:9:0"
									},
									"scope": 31,
									"src": "351:62:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "434:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "434:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "433:27:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "477:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 19,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "477:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "476:6:0"
									},
									"scope": 31,
									"src": "416:67:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 30,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "501:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "523:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "543:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "500:57:0"
									},
									"src": "486:72:0"
								}
							],
							"scope": 911,
							"src": "270:290:0"
						},
						{
							"id": 32,
							"literals": [
								"solidity",
								"<",
								"0.6",
								">=",
								"0.4",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "599:30:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 33,
										"name": "IERC20Basic",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 31,
										"src": "741:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Basic_$31",
											"typeString": "contract IERC20Basic"
										}
									},
									"id": 34,
									"nodeType": "InheritanceSpecifier",
									"src": "741:11:0"
								}
							],
							"contractDependencies": [
								31
							],
							"contractKind": "contract",
							"documentation": "@title ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20",
							"fullyImplemented": false,
							"id": 82,
							"linearizedBaseContracts": [
								82,
								31
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "770:2:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "796:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 36,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "796:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "795:15:0"
									},
									"scope": 82,
									"src": "757:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "829:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "855:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 41,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "855:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "854:15:0"
									},
									"scope": 82,
									"src": "814:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 53,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "892:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "907:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "891:32:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "945:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "944:9:0"
									},
									"scope": 82,
									"src": "873:81:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "979:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "993:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1005:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1005:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "978:41:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1036:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1036:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1035:6:0"
									},
									"scope": 82,
									"src": "957:85:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 73,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1062:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1062:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1079:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1061:32:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1110:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1110:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1109:6:0"
									},
									"scope": 82,
									"src": "1045:71:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 81,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "1134:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "1157:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "1182:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1182:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1133:63:0"
									},
									"src": "1119:78:0"
								}
							],
							"scope": 911,
							"src": "722:477:0"
						},
						{
							"id": 83,
							"literals": [
								"solidity",
								"<",
								"0.6",
								">=",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "1240:30:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 146,
							"linearizedBaseContracts": [
								146
							],
							"name": "IMessierV2dot2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "coinDenomination",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1328:2:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1354:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1353:9:0"
									},
									"scope": 146,
									"src": "1303:60:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenDenomination",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1392:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1418:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1417:9:0"
									},
									"scope": 146,
									"src": "1366:61:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "M87Denomination",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1454:2:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1480:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1479:9:0"
									},
									"scope": 146,
									"src": "1430:59:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1506:2:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1532:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$82",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 100,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 82,
													"src": "1532:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$82",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1531:8:0"
									},
									"scope": 146,
									"src": "1492:48:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "M87Token",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1560:2:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1586:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$82",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 105,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 82,
													"src": "1586:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$82",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1585:8:0"
									},
									"scope": 146,
									"src": "1543:51:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"name": "_commitment",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1614:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1613:21:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1661:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 112,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1670:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 114,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1670:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1678:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1687:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1696:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1660:44:0"
									},
									"scope": 146,
									"src": "1597:108:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"name": "_proof",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1726:21:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 124,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1726:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"name": "_root",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1749:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 126,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"name": "_nullifierHash",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1764:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 128,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1764:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"name": "_recipient",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1788:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1788:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"name": "_relayer",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1816:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1816:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"name": "_fee",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1842:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1842:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"name": "_refund",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1856:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1725:147:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1889:0:0"
									},
									"scope": 146,
									"src": "1708:182:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "anonymityFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1914:2:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "1940:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1940:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1939:9:0"
									},
									"scope": 146,
									"src": "1893:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 911,
							"src": "1273:678:0"
						},
						{
							"id": 147,
							"literals": [
								"solidity",
								"<",
								"0.6",
								">=",
								"0.4",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "1991:30:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeMath\n@dev Math operations with safety checks that throw on error",
							"fullyImplemented": true,
							"id": 239,
							"linearizedBaseContracts": [
								239
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "2558:98:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 156,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "2568:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2573:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2568:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 162,
												"nodeType": "IfStatement",
												"src": "2564:35:0",
												"trueBody": {
													"id": 161,
													"nodeType": "Block",
													"src": "2576:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2591:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 155,
															"id": 160,
															"nodeType": "Return",
															"src": "2584:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 163,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "2604:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 164,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "2608:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"id": 165,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2612:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2608:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2604:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "2604:9:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 170,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "2626:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 171,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "2630:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2626:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 173,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "2635:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2626:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 169,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "2619:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2619:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "2619:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 177,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 154,
													"src": "2650:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 155,
												"id": 178,
												"nodeType": "Return",
												"src": "2643:8:0"
											}
										]
									},
									"documentation": "@dev Multiplies two numbers, throws on overflow.",
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2502:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2513:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2501:22:0"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2547:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2546:11:0"
									},
									"scope": 239,
									"src": "2489:167:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "3132:205:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 189,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "3327:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "3331:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3327:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 188,
												"id": 192,
												"nodeType": "Return",
												"src": "3320:12:0"
											}
										]
									},
									"documentation": "@dev Integer division of two numbers, truncating the quotient.",
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "3078:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "3089:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3077:22:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "3123:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3122:9:0"
									},
									"scope": 239,
									"src": "3065:272:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "3827:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 204,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "3840:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 205,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "3845:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3840:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 203,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "3833:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3833:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "3833:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 209,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "3860:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 210,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "3864:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3860:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 202,
												"id": 212,
												"nodeType": "Return",
												"src": "3853:12:0"
											}
										]
									},
									"documentation": "@dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).",
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3773:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3773:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3784:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3784:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3772:22:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3818:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3817:9:0"
									},
									"scope": 239,
									"src": "3760:110:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "4289:54:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 223,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "4295:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 224,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "4299:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 225,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "4303:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4299:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4295:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "4295:9:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 230,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "4317:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 231,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "4322:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4317:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 229,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "4310:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4310:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "4310:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 235,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 221,
													"src": "4337:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 222,
												"id": 236,
												"nodeType": "Return",
												"src": "4330:8:0"
											}
										]
									},
									"documentation": "@dev Adds two numbers, throws on overflow.",
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "4233:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "4244:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4244:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4232:22:0"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "4278:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4277:11:0"
									},
									"scope": 239,
									"src": "4220:123:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 911,
							"src": "2114:2231:0"
						},
						{
							"id": 240,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4385:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Collection of functions related to the address type,",
							"fullyImplemented": true,
							"id": 257,
							"linearizedBaseContracts": [
								257
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "4993:347:0",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 255,
														"src": "5190:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 247,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5190:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "5190:12:0"
											},
											{
												"externalReferences": [
													{
														"account": {
															"declaration": 242,
															"isOffset": false,
															"isSlot": false,
															"src": "5299:7:0",
															"valueSize": 1
														}
													},
													{
														"size": {
															"declaration": 248,
															"isOffset": false,
															"isSlot": false,
															"src": "5279:4:0",
															"valueSize": 1
														}
													}
												],
												"id": 250,
												"nodeType": "InlineAssembly",
												"operations": "{ size := extcodesize(account) }",
												"src": "5268:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 251,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "5325:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5332:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5325:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 246,
												"id": 254,
												"nodeType": "Return",
												"src": "5318:15:0"
											}
										]
									},
									"documentation": "@dev Returns true if `account` is a contract.\n     * This test is non-exhaustive, and there may be false-negatives: during the\nexecution of a contract's constructor, its address will be reported as\nnot containing a contract.\n     * > It is unsafe to assume that an address for which this function returns\nfalse is an externally-owned account (EOA) and not a contract.",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "4947:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4947:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4946:17:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "4987:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4987:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4986:6:0"
									},
									"scope": 257,
									"src": "4927:413:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 911,
							"src": "4479:863:0"
						},
						{
							"id": 258,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "5384:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeERC20\n@dev Wrappers around ERC20 operations that throw on failure (when the token\ncontract returns false). Tokens that return no value (and instead revert or\nthrow on failure) are also supported, non-reverting calls are assumed to be\nsuccessful.\nTo use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\nwhich allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
							"fullyImplemented": true,
							"id": 472,
							"linearizedBaseContracts": [
								472
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 261,
									"libraryName": {
										"contractScope": null,
										"id": 259,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 239,
										"src": "5899:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$239",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "5893:27:0",
									"typeName": {
										"id": 260,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5912:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 264,
									"libraryName": {
										"contractScope": null,
										"id": 262,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 257,
										"src": "5931:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$257",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "5925:26:0",
									"typeName": {
										"id": 263,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5943:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "6029:102:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 274,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "6058:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$82",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 277,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 266,
																			"src": "6088:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$82",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 22,
																		"src": "6088:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "6088:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 280,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "6113:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 281,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "6117:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 275,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "6065:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6065:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6065:58:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$82",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 273,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "6039:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$82_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6039:85:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "6039:85:0"
											}
										]
									},
									"documentation": null,
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5979:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$82",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 265,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 82,
													"src": "5979:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$82",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5993:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "6005:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6005:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5978:41:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6029:0:0"
									},
									"scope": 472,
									"src": "5957:174:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "6227:112:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 298,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "6256:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$82",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 301,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 288,
																			"src": "6286:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$82",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "6286:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "6286:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 304,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 290,
																	"src": "6315:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 305,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6321:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 306,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "6325:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 299,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "6263:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6263:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6263:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$82",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 297,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "6237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$82_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6237:95:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "6237:95:0"
											}
										]
									},
									"documentation": null,
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "6163:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$82",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 287,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 82,
													"src": "6163:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$82",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "6177:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6177:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "6191:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6191:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "6203:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6203:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6162:55:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6227:0:0"
									},
									"scope": 472,
									"src": "6137:202:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "6421:536:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 321,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 317,
																			"src": "6710:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6719:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6710:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 324,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6709:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 328,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 949,
																							"src": "6750:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$472",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$472",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 327,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6742:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": "address"
																					},
																					"id": 329,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6742:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 330,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 315,
																					"src": "6757:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 325,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 313,
																					"src": "6726:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$82",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 326,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 53,
																				"src": "6726:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6726:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6769:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6726:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 334,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6725:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6709:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6785:56:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 320,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															928,
															929
														],
														"referencedDeclaration": 929,
														"src": "6701:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6701:150:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "6701:150:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 340,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "6880:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$82",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 343,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 313,
																			"src": "6910:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$82",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 73,
																		"src": "6910:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "6910:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 346,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6934:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 347,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "6943:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 341,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "6887:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6887:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6887:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$82",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 339,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "6861:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$82_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6861:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "6861:89:0"
											}
										]
									},
									"documentation": null,
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "6366:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$82",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 312,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 82,
													"src": "6366:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$82",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "6380:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "6397:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6365:46:0"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6421:0:0"
									},
									"scope": 472,
									"src": "6345:612:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "7049:196:0",
										"statements": [
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 386,
														"src": "7059:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 361,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7059:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 373,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 371,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "7126:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 366,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "7106:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$472",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$472",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7098:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7098:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 368,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 356,
																	"src": "7113:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 363,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "7082:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$82",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 53,
																"src": "7082:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7082:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 238,
														"src": "7082:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7082:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7059:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 375,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "7161:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$82",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 378,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 354,
																			"src": "7191:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$82",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 73,
																		"src": "7191:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7191:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 381,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 356,
																	"src": "7215:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 382,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "7224:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 376,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "7168:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "7168:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7168:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$82",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 374,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "7142:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$82_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7142:96:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "7142:96:0"
											}
										]
									},
									"documentation": null,
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "6994:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$82",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 353,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 82,
													"src": "6994:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$82",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "7008:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "7025:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6993:46:0"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7049:0:0"
									},
									"scope": 472,
									"src": "6963:282:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "7337:196:0",
										"statements": [
											{
												"assignments": [
													397
												],
												"declarations": [
													{
														"constant": false,
														"id": 397,
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "7347:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 396,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 408,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 406,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "7414:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 401,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "7394:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$472",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$472",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7386:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7386:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 403,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "7401:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 398,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "7370:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$82",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 53,
																"src": "7370:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7370:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 214,
														"src": "7370:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7370:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7347:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 410,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "7449:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$82",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 413,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 389,
																			"src": "7479:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$82",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 73,
																		"src": "7479:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7479:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 416,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "7503:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 417,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "7512:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 411,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "7456:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "7456:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7456:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$82",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 409,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "7430:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$82_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7430:96:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "7430:96:0"
											}
										]
									},
									"documentation": null,
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "7282:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$82",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 388,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 82,
													"src": "7282:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$82",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "7296:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7296:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "7313:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7313:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7281:46:0"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7337:0:0"
									},
									"scope": 472,
									"src": "7251:282:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "7985:1026:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 431,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 424,
																			"src": "8519:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$82",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$82",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8511:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8511:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 256,
																"src": "8511:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8511:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8540:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															},
															"value": "SafeERC20: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															}
														],
														"id": 429,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															928,
															929
														],
														"referencedDeclaration": 929,
														"src": "8503:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8503:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "8503:71:0"
											},
											{
												"assignments": [
													439,
													441
												],
												"declarations": [
													{
														"constant": false,
														"id": 439,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 470,
														"src": "8645:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 438,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8645:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 441,
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 470,
														"src": "8659:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 440,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8659:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 448,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 446,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "8706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 443,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "8694:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$82",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$82",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8686:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8686:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "8686:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8686:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8644:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 450,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "8729:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8738:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"id": 449,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															928,
															929
														],
														"referencedDeclaration": 929,
														"src": "8721:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8721:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "8721:52:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 454,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "8788:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "8788:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8808:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8788:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 469,
												"nodeType": "IfStatement",
												"src": "8784:221:0",
												"trueBody": {
													"id": 468,
													"nodeType": "Block",
													"src": "8811:194:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 461,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 441,
																				"src": "8928:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 462,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "8941:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": "bool"
																					}
																				],
																				"id": 463,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "8940:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 459,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 912,
																				"src": "8917:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "8917:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8917:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8949:44:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 458,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		928,
																		929
																	],
																	"referencedDeclaration": 929,
																	"src": "8909:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8909:85:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 467,
															"nodeType": "ExpressionStatement",
															"src": "8909:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": "@dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\non the return value: the return value is optional (but if data is returned, it must not be false).\n@param token The token targeted by the call.\n@param data The call data (encoded using abi.encode or one of its variants).",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "7944:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$82",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 423,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 82,
													"src": "7944:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$82",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "7958:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 425,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7958:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7943:33:0"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7985:0:0"
									},
									"scope": 472,
									"src": "7916:1095:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								}
							],
							"scope": 911,
							"src": "5869:3144:0"
						},
						{
							"id": 473,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "9057:31:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 538,
							"linearizedBaseContracts": [
								538
							],
							"name": "IRouter",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "9148:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9148:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "9172:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9172:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "9196:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9196:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "9220:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9220:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "9245:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9245:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "9270:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9270:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "9290:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9290:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9138:171:0"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "9328:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9328:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "9342:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9327:28:0"
									},
									"scope": 538,
									"src": "9114:242:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "9401:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9401:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "9425:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 497,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "9425:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 498,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "9425:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "9458:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9458:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "9478:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9478:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9391:106:0"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "9524:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 505,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "9524:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 506,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "9524:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9523:23:0"
									},
									"scope": 538,
									"src": "9361:186:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 526,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "9595:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9595:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "9618:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9618:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "9645:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 514,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "9645:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 515,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "9645:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "9678:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9678:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "9698:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9698:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9585:132:0"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "9736:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 522,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "9736:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 523,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "9736:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9735:23:0"
									},
									"scope": 538,
									"src": "9552:207:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 537,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "9786:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "9805:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 529,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "9805:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 530,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "9805:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9785:44:0"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "9853:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 533,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9853:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 534,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "9853:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9852:26:0"
									},
									"scope": 538,
									"src": "9764:115:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 911,
							"src": "9090:791:0"
						},
						{
							"id": 539,
							"literals": [
								"solidity",
								"<",
								"0.6",
								">=",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "9932:30:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 910,
							"linearizedBaseContracts": [
								910
							],
							"name": "MessierWrapper",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 542,
									"libraryName": {
										"contractScope": null,
										"id": 540,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 239,
										"src": "10002:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$239",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "9996:27:0",
									"typeName": {
										"id": 541,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10015:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 545,
									"libraryName": {
										"contractScope": null,
										"id": 543,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 472,
										"src": "10032:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$472",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "10026:27:0",
									"typeName": {
										"contractScope": null,
										"id": 544,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 82,
										"src": "10046:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$82",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 547,
									"name": "router",
									"nodeType": "VariableDeclaration",
									"scope": 910,
									"src": "10056:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IRouter_$538",
										"typeString": "contract IRouter"
									},
									"typeName": {
										"contractScope": null,
										"id": 546,
										"name": "IRouter",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 538,
										"src": "10056:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IRouter_$538",
											"typeString": "contract IRouter"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 549,
									"name": "wrappedCoin",
									"nodeType": "VariableDeclaration",
									"scope": 910,
									"src": "10081:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 548,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10081:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 551,
									"name": "messierAddr",
									"nodeType": "VariableDeclaration",
									"scope": 910,
									"src": "10111:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 550,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10111:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 555,
									"name": "whitelisted",
									"nodeType": "VariableDeclaration",
									"scope": 910,
									"src": "10141:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 554,
										"keyType": {
											"id": 552,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "10149:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "10141:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 553,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "10160:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 567,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"indexed": true,
												"name": "commitment",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "10203:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 556,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10203:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"indexed": false,
												"name": "leafIndex",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "10231:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 558,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "10231:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"indexed": false,
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "10249:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10249:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"indexed": false,
												"name": "M87Denomination",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "10268:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"indexed": false,
												"name": "anonymityFee",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "10293:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10293:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10202:112:0"
									},
									"src": "10189:126:0"
								},
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "10399:286:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 576,
														"name": "router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10405:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRouter_$538",
															"typeString": "contract IRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 577,
														"name": "_router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "10414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRouter_$538",
															"typeString": "contract IRouter"
														}
													},
													"src": "10405:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IRouter_$538",
														"typeString": "contract IRouter"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "10405:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 580,
														"name": "wrappedCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10427:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 581,
														"name": "_wrappedCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "10441:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10427:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "10427:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 584,
														"name": "messierAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "10459:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 585,
														"name": "_messierAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "10473:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10459:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 587,
												"nodeType": "ExpressionStatement",
												"src": "10459:26:0"
											},
											{
												"assignments": [
													589
												],
												"declarations": [
													{
														"constant": false,
														"id": 589,
														"name": "_messier",
														"nodeType": "VariableDeclaration",
														"scope": 619,
														"src": "10491:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
															"typeString": "contract IMessierV2dot2"
														},
														"typeName": {
															"contractScope": null,
															"id": 588,
															"name": "IMessierV2dot2",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 146,
															"src": "10491:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
																"typeString": "contract IMessierV2dot2"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 593,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 591,
															"name": "messierAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "10532:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 590,
														"name": "IMessierV2dot2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "10517:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IMessierV2dot2_$146_$",
															"typeString": "type(contract IMessierV2dot2)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10517:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
														"typeString": "contract IMessierV2dot2"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10491:53:0"
											},
											{
												"assignments": [
													595
												],
												"declarations": [
													{
														"constant": false,
														"id": 595,
														"name": "token",
														"nodeType": "VariableDeclaration",
														"scope": 619,
														"src": "10550:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$82",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"contractScope": null,
															"id": 594,
															"name": "IERC20",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 82,
															"src": "10550:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$82",
																"typeString": "contract IERC20"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 599,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 596,
															"name": "_messier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "10565:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
																"typeString": "contract IMessierV2dot2"
															}
														},
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "token",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "10565:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$82_$",
															"typeString": "function () view external returns (contract IERC20)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10565:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$82",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10550:31:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 601,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "10599:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$82",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$82",
																	"typeString": "contract IERC20"
																}
															],
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10591:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10591:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10617:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10609:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10609:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "10591:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 618,
												"nodeType": "IfStatement",
												"src": "10587:94:0",
												"trueBody": {
													"id": 617,
													"nodeType": "Block",
													"src": "10621:60:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 610,
																		"name": "messierAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "10649:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "10670:2:0",
																				"subExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 612,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10671:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_minus_1_by_1",
																					"typeString": "int_const -1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_minus_1_by_1",
																					"typeString": "int_const -1"
																				}
																			],
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10662:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": "uint256"
																		},
																		"id": 614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10662:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 607,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 595,
																		"src": "10631:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$82",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 352,
																	"src": "10631:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$82_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$82_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10631:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 616,
															"nodeType": "ExpressionStatement",
															"src": "10631:43:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 620,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"name": "_router",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "10331:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IRouter_$538",
													"typeString": "contract IRouter"
												},
												"typeName": {
													"contractScope": null,
													"id": 568,
													"name": "IRouter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 538,
													"src": "10331:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IRouter_$538",
														"typeString": "contract IRouter"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"name": "_wrappedCoin",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "10348:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"name": "_messierAddr",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "10370:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10330:61:0"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10399:0:0"
									},
									"scope": 910,
									"src": "10319:366:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "10718:2:0",
										"statements": []
									},
									"documentation": null,
									"id": 624,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10698:2:0"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10718:0:0"
									},
									"scope": 910,
									"src": "10689:31:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "10803:349:0",
										"statements": [
											{
												"assignments": [
													632
												],
												"declarations": [
													{
														"constant": false,
														"id": 632,
														"name": "M87Amount",
														"nodeType": "VariableDeclaration",
														"scope": 689,
														"src": "10809:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 631,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10809:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 641,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"id": 637,
																	"name": "_messier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "10860:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
																		"typeString": "contract IMessierV2dot2"
																	}
																},
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "anonymityFee",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 145,
																"src": "10860:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10860:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"id": 633,
																	"name": "_messier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "10829:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
																		"typeString": "contract IMessierV2dot2"
																	}
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "M87Denomination",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 98,
																"src": "10829:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10829:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 238,
														"src": "10829:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10829:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10809:75:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 642,
														"name": "M87Amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "10894:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10907:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10894:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10890:45:0",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10910:25:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10927:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 630,
															"id": 646,
															"nodeType": "Return",
															"src": "10920:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													652
												],
												"declarations": [
													{
														"constant": false,
														"id": 652,
														"name": "paths",
														"nodeType": "VariableDeclaration",
														"scope": 689,
														"src": "10940:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 650,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10940:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 651,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "10940:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 658,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "32",
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10979:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "10965:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 653,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10969:7:0",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 654,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "10969:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10965:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10940:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 659,
															"name": "paths",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "10987:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 661,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10993:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10987:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 662,
														"name": "wrappedCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10998:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10987:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "10987:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 665,
															"name": "paths",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "11015:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 667,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11021:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11015:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"id": 669,
																		"name": "_messier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "11034:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
																			"typeString": "contract IMessierV2dot2"
																		}
																	},
																	"id": 670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "M87Token",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 108,
																	"src": "11034:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$82_$",
																		"typeString": "function () view external returns (contract IERC20)"
																	}
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11034:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$82",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$82",
																	"typeString": "contract IERC20"
																}
															],
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11026:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11026:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11015:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "11015:39:0"
											},
											{
												"assignments": [
													678
												],
												"declarations": [
													{
														"constant": false,
														"id": 678,
														"name": "amounts",
														"nodeType": "VariableDeclaration",
														"scope": 689,
														"src": "11060:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 676,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11060:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 677,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "11060:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 684,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 681,
															"name": "M87Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "11107:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 682,
															"name": "paths",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "11118:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 679,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "11087:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IRouter_$538",
																"typeString": "contract IRouter"
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getAmountsIn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 537,
														"src": "11087:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11087:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11060:64:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 685,
														"name": "amounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "11137:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 687,
													"indexExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11145:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11137:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 630,
												"id": 688,
												"nodeType": "Return",
												"src": "11130:17:0"
											}
										]
									},
									"documentation": null,
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "purchaseCost",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"name": "_messier",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "10746:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
													"typeString": "contract IMessierV2dot2"
												},
												"typeName": {
													"contractScope": null,
													"id": 625,
													"name": "IMessierV2dot2",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 146,
													"src": "10746:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
														"typeString": "contract IMessierV2dot2"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10745:25:0"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "10794:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10794:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10793:9:0"
									},
									"scope": 910,
									"src": "10724:428:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "11250:1507:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 701,
																		"name": "_messier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 692,
																		"src": "11272:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
																			"typeString": "contract IMessierV2dot2"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
																			"typeString": "contract IMessierV2dot2"
																		}
																	],
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11264:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11264:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 703,
																"name": "messierAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "11285:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11264:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f742077686974656c6973746564",
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11298:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d96f2989eb5366a2905d499fc08724de9f6dbe8a3b2a754fa8cdb243a7c2bb16",
																"typeString": "literal_string \"not whitelisted\""
															},
															"value": "not whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d96f2989eb5366a2905d499fc08724de9f6dbe8a3b2a754fa8cdb243a7c2bb16",
																"typeString": "literal_string \"not whitelisted\""
															}
														],
														"id": 699,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															928,
															929
														],
														"referencedDeclaration": 929,
														"src": "11256:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11256:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "11256:60:0"
											},
											{
												"assignments": [
													709
												],
												"declarations": [
													{
														"constant": false,
														"id": 709,
														"name": "coinAmount",
														"nodeType": "VariableDeclaration",
														"scope": 908,
														"src": "11322:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 708,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11322:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 713,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 710,
															"name": "_messier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "11343:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
																"typeString": "contract IMessierV2dot2"
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "coinDenomination",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 88,
														"src": "11343:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11343:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11322:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 715,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "11384:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "11384:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 717,
																"name": "coinAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "11397:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11384:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d657373696572577261707065723a20696e73756666696369656e7420636f696e21",
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11409:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_57308f09d5629392b8f7d9e16798d0401751415aab39e9bf210ce0719fbb2edf",
																"typeString": "literal_string \"MessierWrapper: insufficient coin!\""
															},
															"value": "MessierWrapper: insufficient coin!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_57308f09d5629392b8f7d9e16798d0401751415aab39e9bf210ce0719fbb2edf",
																"typeString": "literal_string \"MessierWrapper: insufficient coin!\""
															}
														],
														"id": 714,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															928,
															929
														],
														"referencedDeclaration": 929,
														"src": "11376:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11376:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "11376:70:0"
											},
											{
												"assignments": [
													723
												],
												"declarations": [
													{
														"constant": false,
														"id": 723,
														"name": "tokenAmount",
														"nodeType": "VariableDeclaration",
														"scope": 908,
														"src": "11452:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 722,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11452:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 727,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 724,
															"name": "_messier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "11474:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
																"typeString": "contract IMessierV2dot2"
															}
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenDenomination",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 93,
														"src": "11474:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11474:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11452:50:0"
											},
											{
												"assignments": [
													729
												],
												"declarations": [
													{
														"constant": false,
														"id": 729,
														"name": "M87Amount",
														"nodeType": "VariableDeclaration",
														"scope": 908,
														"src": "11508:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 728,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11508:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"id": 734,
																	"name": "_messier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 692,
																	"src": "11559:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
																		"typeString": "contract IMessierV2dot2"
																	}
																},
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "anonymityFee",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 145,
																"src": "11559:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11559:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"id": 730,
																	"name": "_messier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 692,
																	"src": "11528:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
																		"typeString": "contract IMessierV2dot2"
																	}
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "M87Denomination",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 98,
																"src": "11528:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11528:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 238,
														"src": "11528:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11528:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11508:75:0"
											},
											{
												"assignments": [
													740
												],
												"declarations": [
													{
														"constant": false,
														"id": 740,
														"name": "remainingCoin",
														"nodeType": "VariableDeclaration",
														"scope": 908,
														"src": "11589:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 739,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11589:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 746,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 744,
															"name": "coinAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "11627:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 741,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "11613:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11613:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 214,
														"src": "11613:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11613:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11589:49:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 747,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "11648:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11662:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11648:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 764,
												"nodeType": "IfStatement",
												"src": "11644:109:0",
												"trueBody": {
													"id": 763,
													"nodeType": "Block",
													"src": "11665:88:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 755,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 925,
																			"src": "11707:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "11707:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 758,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 953,
																				"src": "11727:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MessierWrapper_$910",
																					"typeString": "contract MessierWrapper"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MessierWrapper_$910",
																					"typeString": "contract MessierWrapper"
																				}
																			],
																			"id": 757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11719:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11719:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 760,
																		"name": "tokenAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 723,
																		"src": "11734:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"argumentTypes": null,
																				"id": 750,
																				"name": "_messier",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 692,
																				"src": "11673:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
																					"typeString": "contract IMessierV2dot2"
																				}
																			},
																			"id": 752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "token",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 103,
																			"src": "11673:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$82_$",
																				"typeString": "function () view external returns (contract IERC20)"
																			}
																		},
																		"id": 753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11673:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$82",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 311,
																	"src": "11673:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$82_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$82_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11673:73:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 762,
															"nodeType": "ExpressionStatement",
															"src": "11673:73:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 765,
														"name": "M87Amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "11762:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11774:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11762:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 848,
												"nodeType": "IfStatement",
												"src": "11758:553:0",
												"trueBody": {
													"id": 847,
													"nodeType": "Block",
													"src": "11777:534:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"id": 768,
																"name": "_buyM87",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "11789:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 845,
																"nodeType": "Block",
																"src": "12208:97:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 837,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 925,
																						"src": "12255:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 838,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "12255:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 840,
																							"name": "_messier",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 692,
																							"src": "12275:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
																								"typeString": "contract IMessierV2dot2"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
																								"typeString": "contract IMessierV2dot2"
																							}
																						],
																						"id": 839,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "12267:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": "address"
																					},
																					"id": 841,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "12267:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 842,
																					"name": "M87Amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "12286:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"argumentTypes": null,
																							"id": 832,
																							"name": "_messier",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 692,
																							"src": "12218:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
																								"typeString": "contract IMessierV2dot2"
																							}
																						},
																						"id": 834,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "M87Token",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 108,
																						"src": "12218:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$82_$",
																							"typeString": "function () view external returns (contract IERC20)"
																						}
																					},
																					"id": 835,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "12218:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$82",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 836,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransferFrom",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 311,
																				"src": "12218:36:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$82_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$82_$",
																					"typeString": "function (contract IERC20,address,address,uint256)"
																				}
																			},
																			"id": 843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12218:78:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 844,
																		"nodeType": "ExpressionStatement",
																		"src": "12218:78:0"
																	}
																]
															},
															"id": 846,
															"nodeType": "IfStatement",
															"src": "11785:520:0",
															"trueBody": {
																"id": 831,
																"nodeType": "Block",
																"src": "11798:404:0",
																"statements": [
																	{
																		"assignments": [
																			772
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 772,
																				"name": "path",
																				"nodeType": "VariableDeclaration",
																				"scope": 831,
																				"src": "11808:21:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[]"
																				},
																				"typeName": {
																					"baseType": {
																						"id": 770,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "11808:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 771,
																					"length": null,
																					"nodeType": "ArrayTypeName",
																					"src": "11808:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																						"typeString": "address[]"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 778,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 776,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11846:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					}
																				],
																				"id": 775,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "NewExpression",
																				"src": "11832:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
																					"typeString": "function (uint256) pure returns (address[] memory)"
																				},
																				"typeName": {
																					"baseType": {
																						"id": 773,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "11836:7:0",
																						"stateMutability": "nonpayable",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 774,
																					"length": null,
																					"nodeType": "ArrayTypeName",
																					"src": "11836:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																						"typeString": "address[]"
																					}
																				}
																			},
																			"id": 777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11832:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory",
																				"typeString": "address[] memory"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11808:40:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 779,
																					"name": "path",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 772,
																					"src": "11858:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 781,
																				"indexExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 780,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11863:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "11858:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 782,
																				"name": "wrappedCoin",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 549,
																				"src": "11868:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "11858:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 784,
																		"nodeType": "ExpressionStatement",
																		"src": "11858:21:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 785,
																					"name": "path",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 772,
																					"src": "11889:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 787,
																				"indexExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 786,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11894:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "11889:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"expression": {
																								"argumentTypes": null,
																								"id": 789,
																								"name": "_messier",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 692,
																								"src": "11907:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
																									"typeString": "contract IMessierV2dot2"
																								}
																							},
																							"id": 790,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "M87Token",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 108,
																							"src": "11907:17:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$82_$",
																								"typeString": "function () view external returns (contract IERC20)"
																							}
																						},
																						"id": 791,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "11907:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$82",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$82",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 788,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "11899:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": "address"
																				},
																				"id": 792,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11899:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "11889:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 794,
																		"nodeType": "ExpressionStatement",
																		"src": "11889:38:0"
																	},
																	{
																		"assignments": [
																			798
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 798,
																				"name": "amounts",
																				"nodeType": "VariableDeclaration",
																				"scope": 831,
																				"src": "11937:24:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[]"
																				},
																				"typeName": {
																					"baseType": {
																						"id": 796,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "11937:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 797,
																					"length": null,
																					"nodeType": "ArrayTypeName",
																					"src": "11937:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[]"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 815,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 804,
																					"name": "M87Amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "12014:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 805,
																					"name": "path",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 772,
																					"src": "12025:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 807,
																							"name": "_messier",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 692,
																							"src": "12039:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
																								"typeString": "contract IMessierV2dot2"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
																								"typeString": "contract IMessierV2dot2"
																							}
																						],
																						"id": 806,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "12031:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": "address"
																					},
																					"id": 808,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "12031:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "32",
																							"id": 812,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "12070:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"id": 809,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 915,
																								"src": "12050:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 810,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": null,
																							"src": "12050:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 811,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 180,
																						"src": "12050:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 813,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "12050:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 802,
																						"name": "remainingCoin",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 740,
																						"src": "11999:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 799,
																							"name": "router",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 547,
																							"src": "11964:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IRouter_$538",
																								"typeString": "contract IRouter"
																							}
																						},
																						"id": 800,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "swapETHForExactTokens",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 509,
																						"src": "11964:28:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																							"typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
																						}
																					},
																					"id": 801,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "value",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "11964:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value_$",
																						"typeString": "function (uint256) pure returns (function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory))"
																					}
																				},
																				"id": 803,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11964:49:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
																					"typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
																				}
																			},
																			"id": 814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11964:109:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11937:136:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 821,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 817,
																						"name": "remainingCoin",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 740,
																						"src": "12091:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 818,
																							"name": "amounts",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 798,
																							"src": "12108:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 820,
																						"indexExpression": {
																							"argumentTypes": null,
																							"hexValue": "30",
																							"id": 819,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "12116:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "12108:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12091:27:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "4d657373696572577261707065723a20756e657870656374656420737461747573",
																					"id": 822,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12120:35:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_c645ed3573958a1d40ca56f987855fd774192d2c2a78d4419757d9cbcf326d65",
																						"typeString": "literal_string \"MessierWrapper: unexpected status\""
																					},
																					"value": "MessierWrapper: unexpected status"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_c645ed3573958a1d40ca56f987855fd774192d2c2a78d4419757d9cbcf326d65",
																						"typeString": "literal_string \"MessierWrapper: unexpected status\""
																					}
																				],
																				"id": 816,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					928,
																					929
																				],
																				"referencedDeclaration": 929,
																				"src": "12083:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12083:73:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 824,
																		"nodeType": "ExpressionStatement",
																		"src": "12083:73:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 825,
																				"name": "remainingCoin",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 740,
																				"src": "12166:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 826,
																					"name": "amounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "12183:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 828,
																				"indexExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 827,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12191:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "12183:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12166:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 830,
																		"nodeType": "ExpressionStatement",
																		"src": "12166:27:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"assignments": [
													850
												],
												"declarations": [
													{
														"constant": false,
														"id": 850,
														"name": "commitment",
														"nodeType": "VariableDeclaration",
														"scope": 908,
														"src": "12316:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 849,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "12316:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 851,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "12316:18:0"
											},
											{
												"assignments": [
													853
												],
												"declarations": [
													{
														"constant": false,
														"id": 853,
														"name": "insertedIndex",
														"nodeType": "VariableDeclaration",
														"scope": 908,
														"src": "12340:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 852,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "12340:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 854,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "12340:20:0"
											},
											{
												"assignments": [
													856
												],
												"declarations": [
													{
														"constant": false,
														"id": 856,
														"name": "blocktime",
														"nodeType": "VariableDeclaration",
														"scope": 908,
														"src": "12366:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 855,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12366:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 857,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "12366:17:0"
											},
											{
												"assignments": [
													859
												],
												"declarations": [
													{
														"constant": false,
														"id": 859,
														"name": "M87Deno",
														"nodeType": "VariableDeclaration",
														"scope": 908,
														"src": "12389:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 858,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12389:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 860,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "12389:15:0"
											},
											{
												"assignments": [
													862
												],
												"declarations": [
													{
														"constant": false,
														"id": 862,
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"scope": 908,
														"src": "12410:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 861,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12410:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 863,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "12410:11:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"id": 864,
																"name": "commitment",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 850,
																"src": "12428:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"argumentTypes": null,
																"id": 865,
																"name": "insertedIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "12440:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															{
																"argumentTypes": null,
																"id": 866,
																"name": "blocktime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "12455:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 867,
																"name": "M87Deno",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "12466:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 868,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 862,
																"src": "12475:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 869,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "12427:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bytes32_$_t_uint32_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(bytes32,uint32,uint256,uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 875,
																"name": "_commitment",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "12517:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 873,
																	"name": "coinAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "12505:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 870,
																		"name": "_messier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 692,
																		"src": "12482:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
																			"typeString": "contract IMessierV2dot2"
																		}
																	},
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "deposit",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 123,
																	"src": "12482:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$_t_bytes32_$returns$_t_bytes32_$_t_uint32_$_t_uint256_$_t_uint256_$_t_uint256_$",
																		"typeString": "function (bytes32) payable external returns (bytes32,uint32,uint256,uint256,uint256)"
																	}
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12482:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$_t_bytes32_$returns$_t_bytes32_$_t_uint32_$_t_uint256_$_t_uint256_$_t_uint256_$value_$",
																	"typeString": "function (uint256) pure returns (function (bytes32) payable external returns (bytes32,uint32,uint256,uint256,uint256))"
																}
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12482:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_bytes32_$returns$_t_bytes32_$_t_uint32_$_t_uint256_$_t_uint256_$_t_uint256_$value",
																"typeString": "function (bytes32) payable external returns (bytes32,uint32,uint256,uint256,uint256)"
															}
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12482:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bytes32_$_t_uint32_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(bytes32,uint32,uint256,uint256,uint256)"
														}
													},
													"src": "12427:102:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "12427:102:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 880,
															"name": "commitment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "12549:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 881,
															"name": "insertedIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "12561:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"argumentTypes": null,
															"id": 882,
															"name": "blocktime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "12576:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 883,
															"name": "M87Deno",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "12587:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 884,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "12596:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 879,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "12540:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint32,uint256,uint256,uint256)"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12540:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "EmitStatement",
												"src": "12535:66:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 887,
														"name": "remainingCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "12611:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12627:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12611:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 907,
												"nodeType": "IfStatement",
												"src": "12607:146:0",
												"trueBody": {
													"id": 906,
													"nodeType": "Block",
													"src": "12630:123:0",
													"statements": [
														{
															"assignments": [
																891,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 891,
																	"name": "success",
																	"nodeType": "VariableDeclaration",
																	"scope": 906,
																	"src": "12639:12:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 890,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "12639:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																},
																null
															],
															"id": 900,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "",
																		"id": 898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12693:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 896,
																			"name": "remainingCoin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 740,
																			"src": "12678:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 892,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 925,
																					"src": "12656:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "12656:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"id": 894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "call",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "12656:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																			}
																		},
																		"id": 895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "12656:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
																			"typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
																		}
																	},
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12656:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12656:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12638:58:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 902,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 891,
																		"src": "12712:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "4d657373696572577261707065723a20726566756e64",
																		"id": 903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12721:24:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_469290cdf34ba6bdc1a5f5af4d13aab655d52a0a5acb317bad0b1bcfc098240f",
																			"typeString": "literal_string \"MessierWrapper: refund\""
																		},
																		"value": "MessierWrapper: refund"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_469290cdf34ba6bdc1a5f5af4d13aab655d52a0a5acb317bad0b1bcfc098240f",
																			"typeString": "literal_string \"MessierWrapper: refund\""
																		}
																	],
																	"id": 901,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		928,
																		929
																	],
																	"referencedDeclaration": 929,
																	"src": "12704:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12704:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 905,
															"nodeType": "ExpressionStatement",
															"src": "12704:42:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"name": "_messier",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "11173:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
													"typeString": "contract IMessierV2dot2"
												},
												"typeName": {
													"contractScope": null,
													"id": 691,
													"name": "IMessierV2dot2",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 146,
													"src": "11173:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMessierV2dot2_$146",
														"typeString": "contract IMessierV2dot2"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"name": "_commitment",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "11198:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 693,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"name": "_buyM87",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "11219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 695,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11219:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11172:60:0"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11250:0:0"
									},
									"scope": 910,
									"src": "11156:1601:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 911,
							"src": "9968:2791:0"
						}
					],
					"src": "109:12651:0"
				},
				"id": 0
			}
		}
	}
}